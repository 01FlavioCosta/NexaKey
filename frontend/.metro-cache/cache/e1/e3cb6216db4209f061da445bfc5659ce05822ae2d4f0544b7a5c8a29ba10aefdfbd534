{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _utilsStorage = require(_dependencyMap[1], \"../utils/storage\");\n  var _utilsEncryption = require(_dependencyMap[2], \"../utils/encryption\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        // Check if user has been through onboarding\n        const userData = await _utilsStorage.SecureStorageService.getUserData();\n        const token = await _utilsStorage.SecureStorageService.getAccessToken();\n        if (!userData) {\n          setIsFirstTime(true);\n          setIsLoading(false);\n          return;\n        }\n        if (token && userData) {\n          // Validate token with backend\n          const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            const userProfile = await response.json();\n            setUser(userProfile);\n\n            // Try to restore master key\n            const storedKey = await _utilsStorage.SecureStorageService.getMasterKey();\n            if (storedKey) {\n              setMasterKeyState(storedKey);\n            }\n          } else {\n            // Token invalid, clear stored data\n            await _utilsStorage.SecureStorageService.clearAllData();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _utilsEncryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Registration failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeUserSalt(salt);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n\n        // Get stored salt\n        const salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          throw new Error('User salt not found. Please register again.');\n        }\n\n        // Hash password for server verification\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Login failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _utilsStorage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser({\n            ...user,\n            biometric_enabled: enabled\n          });\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 10\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":224,"map":[[8,2,34,0,"Object"],[8,8,34,0],[8,9,34,0,"defineProperty"],[8,23,34,0],[8,24,34,0,"exports"],[8,31,34,0],[9,4,34,0,"enumerable"],[9,14,34,0],[10,4,34,0,"get"],[10,7,34,0],[10,18,34,0,"get"],[10,19,34,0],[11,6,34,0],[11,13,34,0,"AuthProvider"],[11,25,34,0],[12,4,34,0],[13,2,34,0],[14,2,239,0,"Object"],[14,8,239,0],[14,9,239,0,"defineProperty"],[14,23,239,0],[14,24,239,0,"exports"],[14,31,239,0],[15,4,239,0,"enumerable"],[15,14,239,0],[16,4,239,0,"get"],[16,7,239,0],[16,18,239,0,"get"],[16,19,239,0],[17,6,239,0],[17,13,239,0,"useAuth"],[17,20,239,0],[18,4,239,0],[19,2,239,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_utilsStorage"],[21,19,2,0],[21,22,2,0,"require"],[21,29,2,0],[21,30,2,0,"_dependencyMap"],[21,44,2,0],[22,2,3,0],[22,6,3,0,"_utilsEncryption"],[22,22,3,0],[22,25,3,0,"require"],[22,32,3,0],[22,33,3,0,"_dependencyMap"],[22,47,3,0],[23,2,3,56],[23,6,3,56,"_reactJsxDevRuntime"],[23,25,3,56],[23,28,3,56,"require"],[23,35,3,56],[23,36,3,56,"_dependencyMap"],[23,50,3,56],[24,2,26,0],[24,8,26,6,"AuthContext"],[24,19,26,17],[24,35,26,20],[24,39,26,20,"createContext"],[24,45,26,33],[24,46,26,33,"createContext"],[24,59,26,33],[24,61,26,63,"undefined"],[24,70,26,72],[24,71,26,73],[25,2,32,0],[25,8,32,6,"API_BASE_URL"],[25,20,32,18],[25,23,32,21,"process"],[25,30,32,28],[25,31,32,29,"env"],[25,34,32,32],[25,35,32,33,"EXPO_PUBLIC_BACKEND_URL"],[25,58,32,56],[25,62,32,60],[25,64,32,62],[26,2,34,7],[26,8,34,13,"AuthProvider"],[26,20,34,54],[26,23,34,57,"AuthProvider"],[26,24,34,58],[27,4,34,60,"children"],[28,2,34,69],[28,3,34,70],[28,8,34,75],[29,4,35,2],[29,10,35,8],[29,11,35,9,"user"],[29,15,35,13],[29,17,35,15,"setUser"],[29,24,35,22],[29,25,35,23],[29,28,35,26],[29,32,35,26,"useState"],[29,38,35,34],[29,39,35,34,"useState"],[29,47,35,34],[29,49,35,48],[29,53,35,52],[29,54,35,53],[30,4,36,2],[30,10,36,8],[30,11,36,9,"isLoading"],[30,20,36,18],[30,22,36,20,"setIsLoading"],[30,34,36,32],[30,35,36,33],[30,38,36,36],[30,42,36,36,"useState"],[30,48,36,44],[30,49,36,44,"useState"],[30,57,36,44],[30,59,36,45],[30,63,36,49],[30,64,36,50],[31,4,37,2],[31,10,37,8],[31,11,37,9,"isFirstTime"],[31,22,37,20],[31,24,37,22,"setIsFirstTime"],[31,38,37,36],[31,39,37,37],[31,42,37,40],[31,46,37,40,"useState"],[31,52,37,48],[31,53,37,48,"useState"],[31,61,37,48],[31,63,37,49],[31,68,37,54],[31,69,37,55],[32,4,38,2],[32,10,38,8],[32,11,38,9,"masterKey"],[32,20,38,18],[32,22,38,20,"setMasterKeyState"],[32,39,38,37],[32,40,38,38],[32,43,38,41],[32,47,38,41,"useState"],[32,53,38,49],[32,54,38,49,"useState"],[32,62,38,49],[32,64,38,65],[32,68,38,69],[32,69,38,70],[33,4,40,2],[33,8,40,2,"useEffect"],[33,14,40,11],[33,15,40,11,"useEffect"],[33,24,40,11],[33,26,40,12],[33,32,40,18],[34,6,41,4,"initializeAuth"],[34,20,41,18],[34,21,41,19],[34,22,41,20],[35,4,42,2],[35,5,42,3],[35,7,42,5],[35,9,42,7],[35,10,42,8],[36,4,44,2],[36,10,44,8,"initializeAuth"],[36,24,44,22],[36,27,44,25],[36,33,44,25,"initializeAuth"],[36,34,44,25],[36,39,44,37],[37,6,45,4],[37,10,45,8],[38,8,46,6],[39,8,47,6],[39,14,47,12,"userData"],[39,22,47,20],[39,25,47,23],[39,31,47,29,"SecureStorageService"],[39,44,47,49],[39,45,47,49,"SecureStorageService"],[39,65,47,49],[39,66,47,50,"getUserData"],[39,77,47,61],[39,78,47,62],[39,79,47,63],[40,8,48,6],[40,14,48,12,"token"],[40,19,48,17],[40,22,48,20],[40,28,48,26,"SecureStorageService"],[40,41,48,46],[40,42,48,46,"SecureStorageService"],[40,62,48,46],[40,63,48,47,"getAccessToken"],[40,77,48,61],[40,78,48,62],[40,79,48,63],[41,8,50,6],[41,12,50,10],[41,13,50,11,"userData"],[41,21,50,19],[41,23,50,21],[42,10,51,8,"setIsFirstTime"],[42,24,51,22],[42,25,51,23],[42,29,51,27],[42,30,51,28],[43,10,52,8,"setIsLoading"],[43,22,52,20],[43,23,52,21],[43,28,52,26],[43,29,52,27],[44,10,53,8],[45,8,54,6],[46,8,56,6],[46,12,56,10,"token"],[46,17,56,15],[46,21,56,19,"userData"],[46,29,56,27],[46,31,56,29],[47,10,57,8],[48,10,58,8],[48,16,58,14,"response"],[48,24,58,22],[48,27,58,25],[48,33,58,31,"fetch"],[48,38,58,36],[48,39,58,37],[48,42,58,40,"API_BASE_URL"],[48,54,58,52],[48,73,58,71],[48,75,58,73],[49,12,59,10,"headers"],[49,19,59,17],[49,21,59,19],[50,14,60,12],[50,29,60,27],[50,31,60,29],[50,41,60,39,"token"],[50,46,60,44],[50,48,60,46],[51,14,61,12],[51,28,61,26],[51,30,61,28],[52,12,62,10],[53,10,63,8],[53,11,63,9],[53,12,63,10],[54,10,65,8],[54,14,65,12,"response"],[54,22,65,20],[54,23,65,21,"ok"],[54,25,65,23],[54,27,65,25],[55,12,66,10],[55,18,66,16,"userProfile"],[55,29,66,27],[55,32,66,30],[55,38,66,36,"response"],[55,46,66,44],[55,47,66,45,"json"],[55,51,66,49],[55,52,66,50],[55,53,66,51],[56,12,67,10,"setUser"],[56,19,67,17],[56,20,67,18,"userProfile"],[56,31,67,29],[56,32,67,30],[58,12,69,10],[59,12,70,10],[59,18,70,16,"storedKey"],[59,27,70,25],[59,30,70,28],[59,36,70,34,"SecureStorageService"],[59,49,70,54],[59,50,70,54,"SecureStorageService"],[59,70,70,54],[59,71,70,55,"getMasterKey"],[59,83,70,67],[59,84,70,68],[59,85,70,69],[60,12,71,10],[60,16,71,14,"storedKey"],[60,25,71,23],[60,27,71,25],[61,14,72,12,"setMasterKeyState"],[61,31,72,29],[61,32,72,30,"storedKey"],[61,41,72,39],[61,42,72,40],[62,12,73,10],[63,10,74,8],[63,11,74,9],[63,17,74,15],[64,12,75,10],[65,12,76,10],[65,18,76,16,"SecureStorageService"],[65,31,76,36],[65,32,76,36,"SecureStorageService"],[65,52,76,36],[65,53,76,37,"clearAllData"],[65,65,76,49],[65,66,76,50],[65,67,76,51],[66,10,77,8],[67,8,78,6],[68,6,79,4],[68,7,79,5],[68,8,79,6],[68,15,79,13,"error"],[68,20,79,18],[68,22,79,20],[69,8,80,6,"console"],[69,15,80,13],[69,16,80,14,"error"],[69,21,80,19],[69,22,80,20],[69,50,80,48],[69,52,80,50,"error"],[69,57,80,55],[69,58,80,56],[70,6,81,4],[70,7,81,5],[70,16,81,14],[71,8,82,6,"setIsLoading"],[71,20,82,18],[71,21,82,19],[71,26,82,24],[71,27,82,25],[72,6,83,4],[73,4,84,2],[73,5,84,3],[74,4,86,2],[74,10,86,8,"register"],[74,18,86,16],[74,21,86,19],[74,27,86,19,"register"],[74,28,87,4,"email"],[74,33,87,17],[74,35,88,4,"password"],[74,43,88,20],[74,45,89,4,"biometricEnabled"],[74,61,89,29],[74,66,90,22],[75,6,91,4],[75,10,91,8],[76,8,92,6,"setIsLoading"],[76,20,92,18],[76,21,92,19],[76,25,92,23],[76,26,92,24],[78,8,94,6],[79,8,95,6],[79,14,95,12,"salt"],[79,18,95,16],[79,21,95,19,"EncryptionService"],[79,37,95,36],[79,38,95,36,"EncryptionService"],[79,55,95,36],[79,56,95,37,"generateSalt"],[79,68,95,49],[79,69,95,50],[79,70,95,51],[81,8,97,6],[82,8,98,6],[82,14,98,12,"masterPasswordHash"],[82,32,98,30],[82,35,98,33],[82,41,98,39,"EncryptionService"],[82,57,98,56],[82,58,98,56,"EncryptionService"],[82,75,98,56],[82,76,98,57,"hashMasterPassword"],[82,94,98,75],[82,95,98,76,"password"],[82,103,98,84],[82,105,98,86,"salt"],[82,109,98,90],[82,110,98,91],[84,8,100,6],[85,8,101,6],[85,14,101,12,"encryptionKey"],[85,27,101,25],[85,30,101,28],[85,36,101,34,"EncryptionService"],[85,52,101,51],[85,53,101,51,"EncryptionService"],[85,70,101,51],[85,71,101,52,"deriveKey"],[85,80,101,61],[85,81,101,62,"password"],[85,89,101,70],[85,91,101,72,"salt"],[85,95,101,76],[85,96,101,77],[86,8,103,6],[86,14,103,12,"response"],[86,22,103,20],[86,25,103,23],[86,31,103,29,"fetch"],[86,36,103,34],[86,37,103,35],[86,40,103,38,"API_BASE_URL"],[86,52,103,50],[86,72,103,70],[86,74,103,72],[87,10,104,8,"method"],[87,16,104,14],[87,18,104,16],[87,24,104,22],[88,10,105,8,"headers"],[88,17,105,15],[88,19,105,17],[89,12,106,10],[89,26,106,24],[89,28,106,26],[90,10,107,8],[90,11,107,9],[91,10,108,8,"body"],[91,14,108,12],[91,16,108,14,"JSON"],[91,20,108,18],[91,21,108,19,"stringify"],[91,30,108,28],[91,31,108,29],[92,12,109,10,"email"],[92,17,109,15],[93,12,110,10,"master_password_hash"],[93,32,110,30],[93,34,110,32,"masterPasswordHash"],[93,52,110,50],[94,12,111,10,"biometric_enabled"],[94,29,111,27],[94,31,111,29,"biometricEnabled"],[95,10,112,8],[95,11,112,9],[96,8,113,6],[96,9,113,7],[96,10,113,8],[97,8,115,6],[97,12,115,10],[97,13,115,11,"response"],[97,21,115,19],[97,22,115,20,"ok"],[97,24,115,22],[97,26,115,24],[98,10,116,8],[98,16,116,14,"error"],[98,21,116,19],[98,24,116,22],[98,30,116,28,"response"],[98,38,116,36],[98,39,116,37,"json"],[98,43,116,41],[98,44,116,42],[98,45,116,43],[99,10,117,8],[99,16,117,14],[99,20,117,18,"Error"],[99,25,117,23],[99,26,117,24,"error"],[99,31,117,29],[99,32,117,30,"detail"],[99,38,117,36],[99,42,117,40],[99,63,117,61],[99,64,117,62],[100,8,118,6],[101,8,120,6],[101,14,120,12,"data"],[101,18,120,16],[101,21,120,19],[101,27,120,25,"response"],[101,35,120,33],[101,36,120,34,"json"],[101,40,120,38],[101,41,120,39],[101,42,120,40],[103,8,122,6],[104,8,123,6],[104,14,123,12,"SecureStorageService"],[104,27,123,32],[104,28,123,32,"SecureStorageService"],[104,48,123,32],[104,49,123,33,"storeAccessToken"],[104,65,123,49],[104,66,123,50,"data"],[104,70,123,54],[104,71,123,55,"access_token"],[104,83,123,67],[104,84,123,68],[105,8,124,6],[105,14,124,12,"SecureStorageService"],[105,27,124,32],[105,28,124,32,"SecureStorageService"],[105,48,124,32],[105,49,124,33,"storeUserData"],[105,62,124,46],[105,63,124,47,"data"],[105,67,124,51],[105,68,124,52,"user"],[105,72,124,56],[105,73,124,57],[106,8,125,6],[106,14,125,12,"SecureStorageService"],[106,27,125,32],[106,28,125,32,"SecureStorageService"],[106,48,125,32],[106,49,125,33,"storeUserSalt"],[106,62,125,46],[106,63,125,47,"salt"],[106,67,125,51],[106,68,125,52],[107,8,126,6],[107,14,126,12,"SecureStorageService"],[107,27,126,32],[107,28,126,32,"SecureStorageService"],[107,48,126,32],[107,49,126,33,"storeMasterKey"],[107,63,126,47],[107,64,126,48,"encryptionKey"],[107,77,126,61],[107,78,126,62],[108,8,127,6],[108,14,127,12,"SecureStorageService"],[108,27,127,32],[108,28,127,32,"SecureStorageService"],[108,48,127,32],[108,49,127,33,"setBiometricEnabled"],[108,68,127,52],[108,69,127,53,"biometricEnabled"],[108,85,127,69],[108,86,127,70],[110,8,129,6],[111,8,130,6],[111,12,130,10,"biometricEnabled"],[111,28,130,26],[111,30,130,28],[112,10,131,8],[112,16,131,14,"SecureStorageService"],[112,29,131,34],[112,30,131,34,"SecureStorageService"],[112,50,131,34],[112,51,131,35,"storeBiometricKey"],[112,68,131,52],[112,69,131,53,"encryptionKey"],[112,82,131,66],[112,83,131,67],[113,8,132,6],[114,8,134,6,"setUser"],[114,15,134,13],[114,16,134,14,"data"],[114,20,134,18],[114,21,134,19,"user"],[114,25,134,23],[114,26,134,24],[115,8,135,6,"setMasterKeyState"],[115,25,135,23],[115,26,135,24,"encryptionKey"],[115,39,135,37],[115,40,135,38],[116,8,136,6,"setIsFirstTime"],[116,22,136,20],[116,23,136,21],[116,28,136,26],[116,29,136,27],[117,6,137,4],[117,7,137,5],[117,8,137,6],[117,15,137,13,"error"],[117,20,137,18],[117,22,137,20],[118,8,138,6,"console"],[118,15,138,13],[118,16,138,14,"error"],[118,21,138,19],[118,22,138,20],[118,43,138,41],[118,45,138,43,"error"],[118,50,138,48],[118,51,138,49],[119,8,139,6],[119,14,139,12,"error"],[119,19,139,17],[120,6,140,4],[120,7,140,5],[120,16,140,14],[121,8,141,6,"setIsLoading"],[121,20,141,18],[121,21,141,19],[121,26,141,24],[121,27,141,25],[122,6,142,4],[123,4,143,2],[123,5,143,3],[124,4,145,2],[124,10,145,8,"login"],[124,15,145,13],[124,18,145,16],[124,24,145,16,"login"],[124,25,145,23,"email"],[124,30,145,36],[124,32,145,38,"password"],[124,40,145,54],[124,45,145,74],[125,6,146,4],[125,10,146,8],[126,8,147,6,"setIsLoading"],[126,20,147,18],[126,21,147,19],[126,25,147,23],[126,26,147,24],[128,8,149,6],[129,8,150,6],[129,14,150,12,"salt"],[129,18,150,16],[129,21,150,19],[129,27,150,25,"SecureStorageService"],[129,40,150,45],[129,41,150,45,"SecureStorageService"],[129,61,150,45],[129,62,150,46,"getUserSalt"],[129,73,150,57],[129,74,150,58],[129,75,150,59],[130,8,151,6],[130,12,151,10],[130,13,151,11,"salt"],[130,17,151,15],[130,19,151,17],[131,10,152,8],[131,16,152,14],[131,20,152,18,"Error"],[131,25,152,23],[131,26,152,24],[131,71,152,69],[131,72,152,70],[132,8,153,6],[134,8,155,6],[135,8,156,6],[135,14,156,12,"masterPasswordHash"],[135,32,156,30],[135,35,156,33],[135,41,156,39,"EncryptionService"],[135,57,156,56],[135,58,156,56,"EncryptionService"],[135,75,156,56],[135,76,156,57,"hashMasterPassword"],[135,94,156,75],[135,95,156,76,"password"],[135,103,156,84],[135,105,156,86,"salt"],[135,109,156,90],[135,110,156,91],[137,8,158,6],[138,8,159,6],[138,14,159,12,"encryptionKey"],[138,27,159,25],[138,30,159,28],[138,36,159,34,"EncryptionService"],[138,52,159,51],[138,53,159,51,"EncryptionService"],[138,70,159,51],[138,71,159,52,"deriveKey"],[138,80,159,61],[138,81,159,62,"password"],[138,89,159,70],[138,91,159,72,"salt"],[138,95,159,76],[138,96,159,77],[139,8,161,6],[139,14,161,12,"response"],[139,22,161,20],[139,25,161,23],[139,31,161,29,"fetch"],[139,36,161,34],[139,37,161,35],[139,40,161,38,"API_BASE_URL"],[139,52,161,50],[139,69,161,67],[139,71,161,69],[140,10,162,8,"method"],[140,16,162,14],[140,18,162,16],[140,24,162,22],[141,10,163,8,"headers"],[141,17,163,15],[141,19,163,17],[142,12,164,10],[142,26,164,24],[142,28,164,26],[143,10,165,8],[143,11,165,9],[144,10,166,8,"body"],[144,14,166,12],[144,16,166,14,"JSON"],[144,20,166,18],[144,21,166,19,"stringify"],[144,30,166,28],[144,31,166,29],[145,12,167,10,"email"],[145,17,167,15],[146,12,168,10,"master_password_hash"],[146,32,168,30],[146,34,168,32,"masterPasswordHash"],[147,10,169,8],[147,11,169,9],[148,8,170,6],[148,9,170,7],[148,10,170,8],[149,8,172,6],[149,12,172,10],[149,13,172,11,"response"],[149,21,172,19],[149,22,172,20,"ok"],[149,24,172,22],[149,26,172,24],[150,10,173,8],[150,16,173,14,"error"],[150,21,173,19],[150,24,173,22],[150,30,173,28,"response"],[150,38,173,36],[150,39,173,37,"json"],[150,43,173,41],[150,44,173,42],[150,45,173,43],[151,10,174,8],[151,16,174,14],[151,20,174,18,"Error"],[151,25,174,23],[151,26,174,24,"error"],[151,31,174,29],[151,32,174,30,"detail"],[151,38,174,36],[151,42,174,40],[151,56,174,54],[151,57,174,55],[152,8,175,6],[153,8,177,6],[153,14,177,12,"data"],[153,18,177,16],[153,21,177,19],[153,27,177,25,"response"],[153,35,177,33],[153,36,177,34,"json"],[153,40,177,38],[153,41,177,39],[153,42,177,40],[155,8,179,6],[156,8,180,6],[156,14,180,12,"SecureStorageService"],[156,27,180,32],[156,28,180,32,"SecureStorageService"],[156,48,180,32],[156,49,180,33,"storeAccessToken"],[156,65,180,49],[156,66,180,50,"data"],[156,70,180,54],[156,71,180,55,"access_token"],[156,83,180,67],[156,84,180,68],[157,8,181,6],[157,14,181,12,"SecureStorageService"],[157,27,181,32],[157,28,181,32,"SecureStorageService"],[157,48,181,32],[157,49,181,33,"storeUserData"],[157,62,181,46],[157,63,181,47,"data"],[157,67,181,51],[157,68,181,52,"user"],[157,72,181,56],[157,73,181,57],[158,8,182,6],[158,14,182,12,"SecureStorageService"],[158,27,182,32],[158,28,182,32,"SecureStorageService"],[158,48,182,32],[158,49,182,33,"storeMasterKey"],[158,63,182,47],[158,64,182,48,"encryptionKey"],[158,77,182,61],[158,78,182,62],[159,8,184,6,"setUser"],[159,15,184,13],[159,16,184,14,"data"],[159,20,184,18],[159,21,184,19,"user"],[159,25,184,23],[159,26,184,24],[160,8,185,6,"setMasterKeyState"],[160,25,185,23],[160,26,185,24,"encryptionKey"],[160,39,185,37],[160,40,185,38],[161,6,186,4],[161,7,186,5],[161,8,186,6],[161,15,186,13,"error"],[161,20,186,18],[161,22,186,20],[162,8,187,6,"console"],[162,15,187,13],[162,16,187,14,"error"],[162,21,187,19],[162,22,187,20],[162,36,187,34],[162,38,187,36,"error"],[162,43,187,41],[162,44,187,42],[163,8,188,6],[163,14,188,12,"error"],[163,19,188,17],[164,6,189,4],[164,7,189,5],[164,16,189,14],[165,8,190,6,"setIsLoading"],[165,20,190,18],[165,21,190,19],[165,26,190,24],[165,27,190,25],[166,6,191,4],[167,4,192,2],[167,5,192,3],[168,4,194,2],[168,10,194,8,"logout"],[168,16,194,14],[168,19,194,17],[168,25,194,17,"logout"],[168,26,194,17],[168,31,194,44],[169,6,195,4],[169,10,195,8],[170,8,196,6],[170,14,196,12,"SecureStorageService"],[170,27,196,32],[170,28,196,32,"SecureStorageService"],[170,48,196,32],[170,49,196,33,"clearAllData"],[170,61,196,45],[170,62,196,46],[170,63,196,47],[171,8,197,6,"setUser"],[171,15,197,13],[171,16,197,14],[171,20,197,18],[171,21,197,19],[172,8,198,6,"setMasterKeyState"],[172,25,198,23],[172,26,198,24],[172,30,198,28],[172,31,198,29],[173,6,199,4],[173,7,199,5],[173,8,199,6],[173,15,199,13,"error"],[173,20,199,18],[173,22,199,20],[174,8,200,6,"console"],[174,15,200,13],[174,16,200,14,"error"],[174,21,200,19],[174,22,200,20],[174,37,200,35],[174,39,200,37,"error"],[174,44,200,42],[174,45,200,43],[175,6,201,4],[176,4,202,2],[176,5,202,3],[177,4,204,2],[177,10,204,8,"setMasterKey"],[177,22,204,20],[177,25,204,24,"key"],[177,28,204,35],[177,32,204,40],[178,6,205,4,"setMasterKeyState"],[178,23,205,21],[178,24,205,22,"key"],[178,27,205,25],[178,28,205,26],[179,4,206,2],[179,5,206,3],[180,4,208,2],[180,10,208,8,"setBiometricRecovery"],[180,30,208,28],[180,33,208,31],[180,39,208,38,"enabled"],[180,46,208,54],[180,50,208,74],[181,6,209,4],[181,10,209,8],[182,8,210,6],[182,12,210,10,"enabled"],[182,19,210,17],[182,23,210,21,"masterKey"],[182,32,210,30],[182,34,210,32],[183,10,211,8],[183,16,211,14,"SecureStorageService"],[183,29,211,34],[183,30,211,34,"SecureStorageService"],[183,50,211,34],[183,51,211,35,"storeBiometricKey"],[183,68,211,52],[183,69,211,53,"masterKey"],[183,78,211,62],[183,79,211,63],[184,8,212,6],[185,8,213,6],[185,14,213,12,"SecureStorageService"],[185,27,213,32],[185,28,213,32,"SecureStorageService"],[185,48,213,32],[185,49,213,33,"setBiometricEnabled"],[185,68,213,52],[185,69,213,53,"enabled"],[185,76,213,60],[185,77,213,61],[186,8,215,6],[186,12,215,10,"user"],[186,16,215,14],[186,18,215,16],[187,10,216,8,"setUser"],[187,17,216,15],[187,18,216,16],[188,12,216,18],[188,15,216,21,"user"],[188,19,216,25],[189,12,216,27,"biometric_enabled"],[189,29,216,44],[189,31,216,46,"enabled"],[190,10,216,54],[190,11,216,55],[190,12,216,56],[191,8,217,6],[192,6,218,4],[192,7,218,5],[192,8,218,6],[192,15,218,13,"error"],[192,20,218,18],[192,22,218,20],[193,8,219,6,"console"],[193,15,219,13],[193,16,219,14,"error"],[193,21,219,19],[193,22,219,20],[193,46,219,44],[193,48,219,46,"error"],[193,53,219,51],[193,54,219,52],[194,8,220,6],[194,14,220,12,"error"],[194,19,220,17],[195,6,221,4],[196,4,222,2],[196,5,222,3],[197,4,224,2],[197,10,224,8,"value"],[197,15,224,30],[197,18,224,33],[198,6,225,4,"user"],[198,10,225,8],[199,6,226,4,"isLoading"],[199,15,226,13],[200,6,227,4,"isFirstTime"],[200,17,227,15],[201,6,228,4,"masterKey"],[201,15,228,13],[202,6,229,4,"login"],[202,11,229,9],[203,6,230,4,"register"],[203,14,230,12],[204,6,231,4,"logout"],[204,12,231,10],[205,6,232,4,"setMasterKey"],[205,18,232,16],[206,6,233,4,"setBiometricRecovery"],[207,4,234,2],[207,5,234,3],[208,4,236,2],[208,24,236,9],[208,28,236,9,"_reactJsxDevRuntime"],[208,47,236,9],[208,48,236,9,"jsxDEV"],[208,54,236,9],[208,56,236,10,"AuthContext"],[208,67,236,21],[208,68,236,22,"Provider"],[208,76,236,30],[209,6,236,31,"value"],[209,11,236,36],[209,13,236,38,"value"],[209,18,236,44],[210,6,236,44,"children"],[210,14,236,44],[210,16,236,46,"children"],[211,4,236,54],[212,6,236,54,"fileName"],[212,14,236,54],[212,16,236,54,"_jsxFileName"],[212,28,236,54],[213,6,236,54,"lineNumber"],[213,16,236,54],[214,6,236,54,"columnNumber"],[214,18,236,54],[215,4,236,54],[215,11,236,77],[215,12,236,78],[216,2,237,0],[216,3,237,1],[217,2,239,7],[217,8,239,13,"useAuth"],[217,15,239,20],[217,18,239,23,"useAuth"],[217,19,239,23],[217,24,239,46],[218,4,240,2],[218,10,240,8,"context"],[218,17,240,15],[218,20,240,18],[218,24,240,18,"useContext"],[218,30,240,28],[218,31,240,28,"useContext"],[218,41,240,28],[218,43,240,29,"AuthContext"],[218,54,240,40],[218,55,240,41],[219,4,241,2],[219,8,241,6,"context"],[219,15,241,13],[219,20,241,18,"undefined"],[219,29,241,27],[219,31,241,29],[220,6,242,4],[220,12,242,10],[220,16,242,14,"Error"],[220,21,242,19],[220,22,242,20],[220,67,242,65],[220,68,242,66],[221,4,243,2],[222,4,244,2],[222,11,244,9,"context"],[222,18,244,16],[223,2,245,0],[223,3,245,1],[224,0,245,2],[224,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFwC;mBGE;GHyD;gBIE;GJ+C;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"},"hasCjsExports":false},"type":"js/module"}]}