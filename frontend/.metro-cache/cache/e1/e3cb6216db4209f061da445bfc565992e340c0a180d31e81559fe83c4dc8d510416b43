{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _utilsStorage = require(_dependencyMap[1], \"../utils/storage\");\n  var _utilsEncryption = require(_dependencyMap[2], \"../utils/encryption\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        // Check if user has been through onboarding\n        const userData = await _utilsStorage.SecureStorageService.getUserData();\n        const token = await _utilsStorage.SecureStorageService.getAccessToken();\n        if (!userData) {\n          setIsFirstTime(true);\n          setIsLoading(false);\n          return;\n        }\n        if (token && userData) {\n          // Validate token with backend\n          const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            const userProfile = await response.json();\n            setUser(userProfile);\n\n            // Try to restore master key\n            const storedKey = await _utilsStorage.SecureStorageService.getMasterKey();\n            if (storedKey) {\n              setMasterKeyState(storedKey);\n            }\n          } else {\n            // Token invalid, clear stored data\n            await _utilsStorage.SecureStorageService.clearAllData();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _utilsEncryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        console.log('Registering user with email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        const responseText = await response.text();\n        console.log('Registration response:', response.status, responseText);\n        if (!response.ok) {\n          let errorMessage = 'Falha no registro';\n          try {\n            const error = JSON.parse(responseText);\n            errorMessage = error.detail || errorMessage;\n          } catch (parseError) {\n            console.error('Error parsing response:', parseError);\n            errorMessage = `Erro ${response.status}: ${responseText}`;\n          }\n          throw new Error(errorMessage);\n        }\n        const data = JSON.parse(responseText);\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeUserSalt(salt);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n        console.log('Registration successful for:', email);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n\n        // Get stored salt\n        const salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          throw new Error('User salt not found. Please register again.');\n        }\n\n        // Hash password for server verification\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Login failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _utilsStorage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser({\n            ...user,\n            biometric_enabled: enabled\n          });\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 10\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":235,"map":[[8,2,34,0,"Object"],[8,8,34,0],[8,9,34,0,"defineProperty"],[8,23,34,0],[8,24,34,0,"exports"],[8,31,34,0],[9,4,34,0,"enumerable"],[9,14,34,0],[10,4,34,0,"get"],[10,7,34,0],[10,18,34,0,"get"],[10,19,34,0],[11,6,34,0],[11,13,34,0,"AuthProvider"],[11,25,34,0],[12,4,34,0],[13,2,34,0],[14,2,253,0,"Object"],[14,8,253,0],[14,9,253,0,"defineProperty"],[14,23,253,0],[14,24,253,0,"exports"],[14,31,253,0],[15,4,253,0,"enumerable"],[15,14,253,0],[16,4,253,0,"get"],[16,7,253,0],[16,18,253,0,"get"],[16,19,253,0],[17,6,253,0],[17,13,253,0,"useAuth"],[17,20,253,0],[18,4,253,0],[19,2,253,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_utilsStorage"],[21,19,2,0],[21,22,2,0,"require"],[21,29,2,0],[21,30,2,0,"_dependencyMap"],[21,44,2,0],[22,2,3,0],[22,6,3,0,"_utilsEncryption"],[22,22,3,0],[22,25,3,0,"require"],[22,32,3,0],[22,33,3,0,"_dependencyMap"],[22,47,3,0],[23,2,3,56],[23,6,3,56,"_reactJsxDevRuntime"],[23,25,3,56],[23,28,3,56,"require"],[23,35,3,56],[23,36,3,56,"_dependencyMap"],[23,50,3,56],[24,2,26,0],[24,8,26,6,"AuthContext"],[24,19,26,17],[24,35,26,20],[24,39,26,20,"createContext"],[24,45,26,33],[24,46,26,33,"createContext"],[24,59,26,33],[24,61,26,63,"undefined"],[24,70,26,72],[24,71,26,73],[25,2,32,0],[25,8,32,6,"API_BASE_URL"],[25,20,32,18],[25,23,32,21,"process"],[25,30,32,28],[25,31,32,29,"env"],[25,34,32,32],[25,35,32,33,"EXPO_PUBLIC_BACKEND_URL"],[25,58,32,56],[25,62,32,60],[25,64,32,62],[26,2,34,7],[26,8,34,13,"AuthProvider"],[26,20,34,54],[26,23,34,57,"AuthProvider"],[26,24,34,58],[27,4,34,60,"children"],[28,2,34,69],[28,3,34,70],[28,8,34,75],[29,4,35,2],[29,10,35,8],[29,11,35,9,"user"],[29,15,35,13],[29,17,35,15,"setUser"],[29,24,35,22],[29,25,35,23],[29,28,35,26],[29,32,35,26,"useState"],[29,38,35,34],[29,39,35,34,"useState"],[29,47,35,34],[29,49,35,48],[29,53,35,52],[29,54,35,53],[30,4,36,2],[30,10,36,8],[30,11,36,9,"isLoading"],[30,20,36,18],[30,22,36,20,"setIsLoading"],[30,34,36,32],[30,35,36,33],[30,38,36,36],[30,42,36,36,"useState"],[30,48,36,44],[30,49,36,44,"useState"],[30,57,36,44],[30,59,36,45],[30,63,36,49],[30,64,36,50],[31,4,37,2],[31,10,37,8],[31,11,37,9,"isFirstTime"],[31,22,37,20],[31,24,37,22,"setIsFirstTime"],[31,38,37,36],[31,39,37,37],[31,42,37,40],[31,46,37,40,"useState"],[31,52,37,48],[31,53,37,48,"useState"],[31,61,37,48],[31,63,37,49],[31,68,37,54],[31,69,37,55],[32,4,38,2],[32,10,38,8],[32,11,38,9,"masterKey"],[32,20,38,18],[32,22,38,20,"setMasterKeyState"],[32,39,38,37],[32,40,38,38],[32,43,38,41],[32,47,38,41,"useState"],[32,53,38,49],[32,54,38,49,"useState"],[32,62,38,49],[32,64,38,65],[32,68,38,69],[32,69,38,70],[33,4,40,2],[33,8,40,2,"useEffect"],[33,14,40,11],[33,15,40,11,"useEffect"],[33,24,40,11],[33,26,40,12],[33,32,40,18],[34,6,41,4,"initializeAuth"],[34,20,41,18],[34,21,41,19],[34,22,41,20],[35,4,42,2],[35,5,42,3],[35,7,42,5],[35,9,42,7],[35,10,42,8],[36,4,44,2],[36,10,44,8,"initializeAuth"],[36,24,44,22],[36,27,44,25],[36,33,44,25,"initializeAuth"],[36,34,44,25],[36,39,44,37],[37,6,45,4],[37,10,45,8],[38,8,46,6],[39,8,47,6],[39,14,47,12,"userData"],[39,22,47,20],[39,25,47,23],[39,31,47,29,"SecureStorageService"],[39,44,47,49],[39,45,47,49,"SecureStorageService"],[39,65,47,49],[39,66,47,50,"getUserData"],[39,77,47,61],[39,78,47,62],[39,79,47,63],[40,8,48,6],[40,14,48,12,"token"],[40,19,48,17],[40,22,48,20],[40,28,48,26,"SecureStorageService"],[40,41,48,46],[40,42,48,46,"SecureStorageService"],[40,62,48,46],[40,63,48,47,"getAccessToken"],[40,77,48,61],[40,78,48,62],[40,79,48,63],[41,8,50,6],[41,12,50,10],[41,13,50,11,"userData"],[41,21,50,19],[41,23,50,21],[42,10,51,8,"setIsFirstTime"],[42,24,51,22],[42,25,51,23],[42,29,51,27],[42,30,51,28],[43,10,52,8,"setIsLoading"],[43,22,52,20],[43,23,52,21],[43,28,52,26],[43,29,52,27],[44,10,53,8],[45,8,54,6],[46,8,56,6],[46,12,56,10,"token"],[46,17,56,15],[46,21,56,19,"userData"],[46,29,56,27],[46,31,56,29],[47,10,57,8],[48,10,58,8],[48,16,58,14,"response"],[48,24,58,22],[48,27,58,25],[48,33,58,31,"fetch"],[48,38,58,36],[48,39,58,37],[48,42,58,40,"API_BASE_URL"],[48,54,58,52],[48,73,58,71],[48,75,58,73],[49,12,59,10,"headers"],[49,19,59,17],[49,21,59,19],[50,14,60,12],[50,29,60,27],[50,31,60,29],[50,41,60,39,"token"],[50,46,60,44],[50,48,60,46],[51,14,61,12],[51,28,61,26],[51,30,61,28],[52,12,62,10],[53,10,63,8],[53,11,63,9],[53,12,63,10],[54,10,65,8],[54,14,65,12,"response"],[54,22,65,20],[54,23,65,21,"ok"],[54,25,65,23],[54,27,65,25],[55,12,66,10],[55,18,66,16,"userProfile"],[55,29,66,27],[55,32,66,30],[55,38,66,36,"response"],[55,46,66,44],[55,47,66,45,"json"],[55,51,66,49],[55,52,66,50],[55,53,66,51],[56,12,67,10,"setUser"],[56,19,67,17],[56,20,67,18,"userProfile"],[56,31,67,29],[56,32,67,30],[58,12,69,10],[59,12,70,10],[59,18,70,16,"storedKey"],[59,27,70,25],[59,30,70,28],[59,36,70,34,"SecureStorageService"],[59,49,70,54],[59,50,70,54,"SecureStorageService"],[59,70,70,54],[59,71,70,55,"getMasterKey"],[59,83,70,67],[59,84,70,68],[59,85,70,69],[60,12,71,10],[60,16,71,14,"storedKey"],[60,25,71,23],[60,27,71,25],[61,14,72,12,"setMasterKeyState"],[61,31,72,29],[61,32,72,30,"storedKey"],[61,41,72,39],[61,42,72,40],[62,12,73,10],[63,10,74,8],[63,11,74,9],[63,17,74,15],[64,12,75,10],[65,12,76,10],[65,18,76,16,"SecureStorageService"],[65,31,76,36],[65,32,76,36,"SecureStorageService"],[65,52,76,36],[65,53,76,37,"clearAllData"],[65,65,76,49],[65,66,76,50],[65,67,76,51],[66,10,77,8],[67,8,78,6],[68,6,79,4],[68,7,79,5],[68,8,79,6],[68,15,79,13,"error"],[68,20,79,18],[68,22,79,20],[69,8,80,6,"console"],[69,15,80,13],[69,16,80,14,"error"],[69,21,80,19],[69,22,80,20],[69,50,80,48],[69,52,80,50,"error"],[69,57,80,55],[69,58,80,56],[70,6,81,4],[70,7,81,5],[70,16,81,14],[71,8,82,6,"setIsLoading"],[71,20,82,18],[71,21,82,19],[71,26,82,24],[71,27,82,25],[72,6,83,4],[73,4,84,2],[73,5,84,3],[74,4,86,2],[74,10,86,8,"register"],[74,18,86,16],[74,21,86,19],[74,27,86,19,"register"],[74,28,87,4,"email"],[74,33,87,17],[74,35,88,4,"password"],[74,43,88,20],[74,45,89,4,"biometricEnabled"],[74,61,89,29],[74,66,90,22],[75,6,91,4],[75,10,91,8],[76,8,92,6,"setIsLoading"],[76,20,92,18],[76,21,92,19],[76,25,92,23],[76,26,92,24],[78,8,94,6],[79,8,95,6],[79,14,95,12,"salt"],[79,18,95,16],[79,21,95,19,"EncryptionService"],[79,37,95,36],[79,38,95,36,"EncryptionService"],[79,55,95,36],[79,56,95,37,"generateSalt"],[79,68,95,49],[79,69,95,50],[79,70,95,51],[81,8,97,6],[82,8,98,6],[82,14,98,12,"masterPasswordHash"],[82,32,98,30],[82,35,98,33],[82,41,98,39,"EncryptionService"],[82,57,98,56],[82,58,98,56,"EncryptionService"],[82,75,98,56],[82,76,98,57,"hashMasterPassword"],[82,94,98,75],[82,95,98,76,"password"],[82,103,98,84],[82,105,98,86,"salt"],[82,109,98,90],[82,110,98,91],[84,8,100,6],[85,8,101,6],[85,14,101,12,"encryptionKey"],[85,27,101,25],[85,30,101,28],[85,36,101,34,"EncryptionService"],[85,52,101,51],[85,53,101,51,"EncryptionService"],[85,70,101,51],[85,71,101,52,"deriveKey"],[85,80,101,61],[85,81,101,62,"password"],[85,89,101,70],[85,91,101,72,"salt"],[85,95,101,76],[85,96,101,77],[86,8,103,6,"console"],[86,15,103,13],[86,16,103,14,"log"],[86,19,103,17],[86,20,103,18],[86,50,103,48],[86,52,103,50,"email"],[86,57,103,55],[86,58,103,56],[87,8,105,6],[87,14,105,12,"response"],[87,22,105,20],[87,25,105,23],[87,31,105,29,"fetch"],[87,36,105,34],[87,37,105,35],[87,40,105,38,"API_BASE_URL"],[87,52,105,50],[87,72,105,70],[87,74,105,72],[88,10,106,8,"method"],[88,16,106,14],[88,18,106,16],[88,24,106,22],[89,10,107,8,"headers"],[89,17,107,15],[89,19,107,17],[90,12,108,10],[90,26,108,24],[90,28,108,26],[91,10,109,8],[91,11,109,9],[92,10,110,8,"body"],[92,14,110,12],[92,16,110,14,"JSON"],[92,20,110,18],[92,21,110,19,"stringify"],[92,30,110,28],[92,31,110,29],[93,12,111,10,"email"],[93,17,111,15],[94,12,112,10,"master_password_hash"],[94,32,112,30],[94,34,112,32,"masterPasswordHash"],[94,52,112,50],[95,12,113,10,"biometric_enabled"],[95,29,113,27],[95,31,113,29,"biometricEnabled"],[96,10,114,8],[96,11,114,9],[97,8,115,6],[97,9,115,7],[97,10,115,8],[98,8,117,6],[98,14,117,12,"responseText"],[98,26,117,24],[98,29,117,27],[98,35,117,33,"response"],[98,43,117,41],[98,44,117,42,"text"],[98,48,117,46],[98,49,117,47],[98,50,117,48],[99,8,118,6,"console"],[99,15,118,13],[99,16,118,14,"log"],[99,19,118,17],[99,20,118,18],[99,44,118,42],[99,46,118,44,"response"],[99,54,118,52],[99,55,118,53,"status"],[99,61,118,59],[99,63,118,61,"responseText"],[99,75,118,73],[99,76,118,74],[100,8,120,6],[100,12,120,10],[100,13,120,11,"response"],[100,21,120,19],[100,22,120,20,"ok"],[100,24,120,22],[100,26,120,24],[101,10,121,8],[101,14,121,12,"errorMessage"],[101,26,121,24],[101,29,121,27],[101,48,121,46],[102,10,122,8],[102,14,122,12],[103,12,123,10],[103,18,123,16,"error"],[103,23,123,21],[103,26,123,24,"JSON"],[103,30,123,28],[103,31,123,29,"parse"],[103,36,123,34],[103,37,123,35,"responseText"],[103,49,123,47],[103,50,123,48],[104,12,124,10,"errorMessage"],[104,24,124,22],[104,27,124,25,"error"],[104,32,124,30],[104,33,124,31,"detail"],[104,39,124,37],[104,43,124,41,"errorMessage"],[104,55,124,53],[105,10,125,8],[105,11,125,9],[105,12,125,10],[105,19,125,17,"parseError"],[105,29,125,27],[105,31,125,29],[106,12,126,10,"console"],[106,19,126,17],[106,20,126,18,"error"],[106,25,126,23],[106,26,126,24],[106,51,126,49],[106,53,126,51,"parseError"],[106,63,126,61],[106,64,126,62],[107,12,127,10,"errorMessage"],[107,24,127,22],[107,27,127,25],[107,35,127,33,"response"],[107,43,127,41],[107,44,127,42,"status"],[107,50,127,48],[107,55,127,53,"responseText"],[107,67,127,65],[107,69,127,67],[108,10,128,8],[109,10,129,8],[109,16,129,14],[109,20,129,18,"Error"],[109,25,129,23],[109,26,129,24,"errorMessage"],[109,38,129,36],[109,39,129,37],[110,8,130,6],[111,8,132,6],[111,14,132,12,"data"],[111,18,132,16],[111,21,132,19,"JSON"],[111,25,132,23],[111,26,132,24,"parse"],[111,31,132,29],[111,32,132,30,"responseText"],[111,44,132,42],[111,45,132,43],[113,8,134,6],[114,8,135,6],[114,14,135,12,"SecureStorageService"],[114,27,135,32],[114,28,135,32,"SecureStorageService"],[114,48,135,32],[114,49,135,33,"storeAccessToken"],[114,65,135,49],[114,66,135,50,"data"],[114,70,135,54],[114,71,135,55,"access_token"],[114,83,135,67],[114,84,135,68],[115,8,136,6],[115,14,136,12,"SecureStorageService"],[115,27,136,32],[115,28,136,32,"SecureStorageService"],[115,48,136,32],[115,49,136,33,"storeUserData"],[115,62,136,46],[115,63,136,47,"data"],[115,67,136,51],[115,68,136,52,"user"],[115,72,136,56],[115,73,136,57],[116,8,137,6],[116,14,137,12,"SecureStorageService"],[116,27,137,32],[116,28,137,32,"SecureStorageService"],[116,48,137,32],[116,49,137,33,"storeUserSalt"],[116,62,137,46],[116,63,137,47,"salt"],[116,67,137,51],[116,68,137,52],[117,8,138,6],[117,14,138,12,"SecureStorageService"],[117,27,138,32],[117,28,138,32,"SecureStorageService"],[117,48,138,32],[117,49,138,33,"storeMasterKey"],[117,63,138,47],[117,64,138,48,"encryptionKey"],[117,77,138,61],[117,78,138,62],[118,8,139,6],[118,14,139,12,"SecureStorageService"],[118,27,139,32],[118,28,139,32,"SecureStorageService"],[118,48,139,32],[118,49,139,33,"setBiometricEnabled"],[118,68,139,52],[118,69,139,53,"biometricEnabled"],[118,85,139,69],[118,86,139,70],[120,8,141,6],[121,8,142,6],[121,12,142,10,"biometricEnabled"],[121,28,142,26],[121,30,142,28],[122,10,143,8],[122,16,143,14,"SecureStorageService"],[122,29,143,34],[122,30,143,34,"SecureStorageService"],[122,50,143,34],[122,51,143,35,"storeBiometricKey"],[122,68,143,52],[122,69,143,53,"encryptionKey"],[122,82,143,66],[122,83,143,67],[123,8,144,6],[124,8,146,6,"setUser"],[124,15,146,13],[124,16,146,14,"data"],[124,20,146,18],[124,21,146,19,"user"],[124,25,146,23],[124,26,146,24],[125,8,147,6,"setMasterKeyState"],[125,25,147,23],[125,26,147,24,"encryptionKey"],[125,39,147,37],[125,40,147,38],[126,8,148,6,"setIsFirstTime"],[126,22,148,20],[126,23,148,21],[126,28,148,26],[126,29,148,27],[127,8,150,6,"console"],[127,15,150,13],[127,16,150,14,"log"],[127,19,150,17],[127,20,150,18],[127,50,150,48],[127,52,150,50,"email"],[127,57,150,55],[127,58,150,56],[128,6,151,4],[128,7,151,5],[128,8,151,6],[128,15,151,13,"error"],[128,20,151,18],[128,22,151,20],[129,8,152,6,"console"],[129,15,152,13],[129,16,152,14,"error"],[129,21,152,19],[129,22,152,20],[129,43,152,41],[129,45,152,43,"error"],[129,50,152,48],[129,51,152,49],[130,8,153,6],[130,14,153,12,"error"],[130,19,153,17],[131,6,154,4],[131,7,154,5],[131,16,154,14],[132,8,155,6,"setIsLoading"],[132,20,155,18],[132,21,155,19],[132,26,155,24],[132,27,155,25],[133,6,156,4],[134,4,157,2],[134,5,157,3],[135,4,159,2],[135,10,159,8,"login"],[135,15,159,13],[135,18,159,16],[135,24,159,16,"login"],[135,25,159,23,"email"],[135,30,159,36],[135,32,159,38,"password"],[135,40,159,54],[135,45,159,74],[136,6,160,4],[136,10,160,8],[137,8,161,6,"setIsLoading"],[137,20,161,18],[137,21,161,19],[137,25,161,23],[137,26,161,24],[139,8,163,6],[140,8,164,6],[140,14,164,12,"salt"],[140,18,164,16],[140,21,164,19],[140,27,164,25,"SecureStorageService"],[140,40,164,45],[140,41,164,45,"SecureStorageService"],[140,61,164,45],[140,62,164,46,"getUserSalt"],[140,73,164,57],[140,74,164,58],[140,75,164,59],[141,8,165,6],[141,12,165,10],[141,13,165,11,"salt"],[141,17,165,15],[141,19,165,17],[142,10,166,8],[142,16,166,14],[142,20,166,18,"Error"],[142,25,166,23],[142,26,166,24],[142,71,166,69],[142,72,166,70],[143,8,167,6],[145,8,169,6],[146,8,170,6],[146,14,170,12,"masterPasswordHash"],[146,32,170,30],[146,35,170,33],[146,41,170,39,"EncryptionService"],[146,57,170,56],[146,58,170,56,"EncryptionService"],[146,75,170,56],[146,76,170,57,"hashMasterPassword"],[146,94,170,75],[146,95,170,76,"password"],[146,103,170,84],[146,105,170,86,"salt"],[146,109,170,90],[146,110,170,91],[148,8,172,6],[149,8,173,6],[149,14,173,12,"encryptionKey"],[149,27,173,25],[149,30,173,28],[149,36,173,34,"EncryptionService"],[149,52,173,51],[149,53,173,51,"EncryptionService"],[149,70,173,51],[149,71,173,52,"deriveKey"],[149,80,173,61],[149,81,173,62,"password"],[149,89,173,70],[149,91,173,72,"salt"],[149,95,173,76],[149,96,173,77],[150,8,175,6],[150,14,175,12,"response"],[150,22,175,20],[150,25,175,23],[150,31,175,29,"fetch"],[150,36,175,34],[150,37,175,35],[150,40,175,38,"API_BASE_URL"],[150,52,175,50],[150,69,175,67],[150,71,175,69],[151,10,176,8,"method"],[151,16,176,14],[151,18,176,16],[151,24,176,22],[152,10,177,8,"headers"],[152,17,177,15],[152,19,177,17],[153,12,178,10],[153,26,178,24],[153,28,178,26],[154,10,179,8],[154,11,179,9],[155,10,180,8,"body"],[155,14,180,12],[155,16,180,14,"JSON"],[155,20,180,18],[155,21,180,19,"stringify"],[155,30,180,28],[155,31,180,29],[156,12,181,10,"email"],[156,17,181,15],[157,12,182,10,"master_password_hash"],[157,32,182,30],[157,34,182,32,"masterPasswordHash"],[158,10,183,8],[158,11,183,9],[159,8,184,6],[159,9,184,7],[159,10,184,8],[160,8,186,6],[160,12,186,10],[160,13,186,11,"response"],[160,21,186,19],[160,22,186,20,"ok"],[160,24,186,22],[160,26,186,24],[161,10,187,8],[161,16,187,14,"error"],[161,21,187,19],[161,24,187,22],[161,30,187,28,"response"],[161,38,187,36],[161,39,187,37,"json"],[161,43,187,41],[161,44,187,42],[161,45,187,43],[162,10,188,8],[162,16,188,14],[162,20,188,18,"Error"],[162,25,188,23],[162,26,188,24,"error"],[162,31,188,29],[162,32,188,30,"detail"],[162,38,188,36],[162,42,188,40],[162,56,188,54],[162,57,188,55],[163,8,189,6],[164,8,191,6],[164,14,191,12,"data"],[164,18,191,16],[164,21,191,19],[164,27,191,25,"response"],[164,35,191,33],[164,36,191,34,"json"],[164,40,191,38],[164,41,191,39],[164,42,191,40],[166,8,193,6],[167,8,194,6],[167,14,194,12,"SecureStorageService"],[167,27,194,32],[167,28,194,32,"SecureStorageService"],[167,48,194,32],[167,49,194,33,"storeAccessToken"],[167,65,194,49],[167,66,194,50,"data"],[167,70,194,54],[167,71,194,55,"access_token"],[167,83,194,67],[167,84,194,68],[168,8,195,6],[168,14,195,12,"SecureStorageService"],[168,27,195,32],[168,28,195,32,"SecureStorageService"],[168,48,195,32],[168,49,195,33,"storeUserData"],[168,62,195,46],[168,63,195,47,"data"],[168,67,195,51],[168,68,195,52,"user"],[168,72,195,56],[168,73,195,57],[169,8,196,6],[169,14,196,12,"SecureStorageService"],[169,27,196,32],[169,28,196,32,"SecureStorageService"],[169,48,196,32],[169,49,196,33,"storeMasterKey"],[169,63,196,47],[169,64,196,48,"encryptionKey"],[169,77,196,61],[169,78,196,62],[170,8,198,6,"setUser"],[170,15,198,13],[170,16,198,14,"data"],[170,20,198,18],[170,21,198,19,"user"],[170,25,198,23],[170,26,198,24],[171,8,199,6,"setMasterKeyState"],[171,25,199,23],[171,26,199,24,"encryptionKey"],[171,39,199,37],[171,40,199,38],[172,6,200,4],[172,7,200,5],[172,8,200,6],[172,15,200,13,"error"],[172,20,200,18],[172,22,200,20],[173,8,201,6,"console"],[173,15,201,13],[173,16,201,14,"error"],[173,21,201,19],[173,22,201,20],[173,36,201,34],[173,38,201,36,"error"],[173,43,201,41],[173,44,201,42],[174,8,202,6],[174,14,202,12,"error"],[174,19,202,17],[175,6,203,4],[175,7,203,5],[175,16,203,14],[176,8,204,6,"setIsLoading"],[176,20,204,18],[176,21,204,19],[176,26,204,24],[176,27,204,25],[177,6,205,4],[178,4,206,2],[178,5,206,3],[179,4,208,2],[179,10,208,8,"logout"],[179,16,208,14],[179,19,208,17],[179,25,208,17,"logout"],[179,26,208,17],[179,31,208,44],[180,6,209,4],[180,10,209,8],[181,8,210,6],[181,14,210,12,"SecureStorageService"],[181,27,210,32],[181,28,210,32,"SecureStorageService"],[181,48,210,32],[181,49,210,33,"clearAllData"],[181,61,210,45],[181,62,210,46],[181,63,210,47],[182,8,211,6,"setUser"],[182,15,211,13],[182,16,211,14],[182,20,211,18],[182,21,211,19],[183,8,212,6,"setMasterKeyState"],[183,25,212,23],[183,26,212,24],[183,30,212,28],[183,31,212,29],[184,6,213,4],[184,7,213,5],[184,8,213,6],[184,15,213,13,"error"],[184,20,213,18],[184,22,213,20],[185,8,214,6,"console"],[185,15,214,13],[185,16,214,14,"error"],[185,21,214,19],[185,22,214,20],[185,37,214,35],[185,39,214,37,"error"],[185,44,214,42],[185,45,214,43],[186,6,215,4],[187,4,216,2],[187,5,216,3],[188,4,218,2],[188,10,218,8,"setMasterKey"],[188,22,218,20],[188,25,218,24,"key"],[188,28,218,35],[188,32,218,40],[189,6,219,4,"setMasterKeyState"],[189,23,219,21],[189,24,219,22,"key"],[189,27,219,25],[189,28,219,26],[190,4,220,2],[190,5,220,3],[191,4,222,2],[191,10,222,8,"setBiometricRecovery"],[191,30,222,28],[191,33,222,31],[191,39,222,38,"enabled"],[191,46,222,54],[191,50,222,74],[192,6,223,4],[192,10,223,8],[193,8,224,6],[193,12,224,10,"enabled"],[193,19,224,17],[193,23,224,21,"masterKey"],[193,32,224,30],[193,34,224,32],[194,10,225,8],[194,16,225,14,"SecureStorageService"],[194,29,225,34],[194,30,225,34,"SecureStorageService"],[194,50,225,34],[194,51,225,35,"storeBiometricKey"],[194,68,225,52],[194,69,225,53,"masterKey"],[194,78,225,62],[194,79,225,63],[195,8,226,6],[196,8,227,6],[196,14,227,12,"SecureStorageService"],[196,27,227,32],[196,28,227,32,"SecureStorageService"],[196,48,227,32],[196,49,227,33,"setBiometricEnabled"],[196,68,227,52],[196,69,227,53,"enabled"],[196,76,227,60],[196,77,227,61],[197,8,229,6],[197,12,229,10,"user"],[197,16,229,14],[197,18,229,16],[198,10,230,8,"setUser"],[198,17,230,15],[198,18,230,16],[199,12,230,18],[199,15,230,21,"user"],[199,19,230,25],[200,12,230,27,"biometric_enabled"],[200,29,230,44],[200,31,230,46,"enabled"],[201,10,230,54],[201,11,230,55],[201,12,230,56],[202,8,231,6],[203,6,232,4],[203,7,232,5],[203,8,232,6],[203,15,232,13,"error"],[203,20,232,18],[203,22,232,20],[204,8,233,6,"console"],[204,15,233,13],[204,16,233,14,"error"],[204,21,233,19],[204,22,233,20],[204,46,233,44],[204,48,233,46,"error"],[204,53,233,51],[204,54,233,52],[205,8,234,6],[205,14,234,12,"error"],[205,19,234,17],[206,6,235,4],[207,4,236,2],[207,5,236,3],[208,4,238,2],[208,10,238,8,"value"],[208,15,238,30],[208,18,238,33],[209,6,239,4,"user"],[209,10,239,8],[210,6,240,4,"isLoading"],[210,15,240,13],[211,6,241,4,"isFirstTime"],[211,17,241,15],[212,6,242,4,"masterKey"],[212,15,242,13],[213,6,243,4,"login"],[213,11,243,9],[214,6,244,4,"register"],[214,14,244,12],[215,6,245,4,"logout"],[215,12,245,10],[216,6,246,4,"setMasterKey"],[216,18,246,16],[217,6,247,4,"setBiometricRecovery"],[218,4,248,2],[218,5,248,3],[219,4,250,2],[219,24,250,9],[219,28,250,9,"_reactJsxDevRuntime"],[219,47,250,9],[219,48,250,9,"jsxDEV"],[219,54,250,9],[219,56,250,10,"AuthContext"],[219,67,250,21],[219,68,250,22,"Provider"],[219,76,250,30],[220,6,250,31,"value"],[220,11,250,36],[220,13,250,38,"value"],[220,18,250,44],[221,6,250,44,"children"],[221,14,250,44],[221,16,250,46,"children"],[222,4,250,54],[223,6,250,54,"fileName"],[223,14,250,54],[223,16,250,54,"_jsxFileName"],[223,28,250,54],[224,6,250,54,"lineNumber"],[224,16,250,54],[225,6,250,54,"columnNumber"],[225,18,250,54],[226,4,250,54],[226,11,250,77],[226,12,250,78],[227,2,251,0],[227,3,251,1],[228,2,253,7],[228,8,253,13,"useAuth"],[228,15,253,20],[228,18,253,23,"useAuth"],[228,19,253,23],[228,24,253,46],[229,4,254,2],[229,10,254,8,"context"],[229,17,254,15],[229,20,254,18],[229,24,254,18,"useContext"],[229,30,254,28],[229,31,254,28,"useContext"],[229,41,254,28],[229,43,254,29,"AuthContext"],[229,54,254,40],[229,55,254,41],[230,4,255,2],[230,8,255,6,"context"],[230,15,255,13],[230,20,255,18,"undefined"],[230,29,255,27],[230,31,255,29],[231,6,256,4],[231,12,256,10],[231,16,256,14,"Error"],[231,21,256,19],[231,22,256,20],[231,67,256,65],[231,68,256,66],[232,4,257,2],[233,4,258,2],[233,11,258,9,"context"],[233,18,258,16],[234,2,259,0],[234,3,259,1],[235,0,259,2],[235,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFwC;mBGE;GHuE;gBIE;GJ+C;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"},"hasCjsExports":false},"type":"js/module"}]}