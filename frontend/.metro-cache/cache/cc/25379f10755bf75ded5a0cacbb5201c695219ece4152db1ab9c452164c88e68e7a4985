{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"VaultService\", {\n    enumerable: true,\n    get: function () {\n      return VaultService;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _utilsEncryption = require(_dependencyMap[1], \"../utils/encryption\");\n  var _utilsStorage = require(_dependencyMap[2], \"../utils/storage\");\n  const API_BASE_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  class VaultService {\n    async getAuthHeaders() {\n      const token = await _utilsStorage.SecureStorageService.getAccessToken();\n      return {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n    async getVaultItems(masterKey) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          headers\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch vault items');\n        }\n        const encryptedItems = await response.json();\n\n        // Decrypt items client-side\n        const decryptedItems = [];\n        for (const item of encryptedItems) {\n          try {\n            const decryptedDataStr = _utilsEncryption.EncryptionService.decrypt(item.encrypted_data, masterKey);\n            const decryptedData = JSON.parse(decryptedDataStr);\n            decryptedItems.push({\n              id: item.id,\n              item_type: item.item_type,\n              decrypted_data: decryptedData,\n              created_at: item.created_at,\n              updated_at: item.updated_at\n            });\n          } catch (decryptError) {\n            console.error('Failed to decrypt item:', item.id, decryptError);\n            // Skip items that can't be decrypted\n          }\n        }\n        return decryptedItems;\n      } catch (error) {\n        console.error('VaultService.getVaultItems error:', error);\n        throw error;\n      }\n    }\n    async createVaultItem(itemType, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({\n            item_type: itemType,\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to create vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.createVaultItem error:', error);\n        throw error;\n      }\n    }\n    async updateVaultItem(itemId, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify({\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to update vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.updateVaultItem error:', error);\n        throw error;\n      }\n    }\n    async deleteVaultItem(itemId) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'DELETE',\n          headers\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.deleteVaultItem error:', error);\n        throw error;\n      }\n    }\n\n    // Template methods for different item types\n    createPasswordTemplate() {\n      return {\n        name: '',\n        username: '',\n        password: '',\n        website: '',\n        notes: ''\n      };\n    }\n    createCreditCardTemplate() {\n      return {\n        name: '',\n        cardNumber: '',\n        expiryDate: '',\n        cvv: '',\n        cardholderName: '',\n        notes: ''\n      };\n    }\n    createSecureNoteTemplate() {\n      return {\n        name: '',\n        notes: ''\n      };\n    }\n\n    // Generate strong password\n    generateStrongPassword(length = 16, includeSymbols = true) {\n      return _utilsEncryption.EncryptionService.generatePassword(length, true,\n      // uppercase\n      true,\n      // lowercase  \n      true,\n      // numbers\n      includeSymbols);\n    }\n\n    // Calculate password strength\n    calculatePasswordStrength(password) {\n      return _utilsEncryption.EncryptionService.calculatePasswordStrength(password);\n    }\n  }\n});","lineCount":165,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,0,"VaultService"],[10,25,36,0],[11,4,36,0],[12,2,36,0],[13,2,210,1],[13,6,210,1,"_expoVirtualEnv"],[13,21,210,1],[13,24,210,1,"require"],[13,31,210,1],[13,32,210,1,"_dependencyMap"],[13,46,210,1],[14,2,1,0],[14,6,1,0,"_utilsEncryption"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_utilsStorage"],[15,19,2,0],[15,22,2,0,"require"],[15,29,2,0],[15,30,2,0,"_dependencyMap"],[15,44,2,0],[16,2,34,0],[16,8,34,6,"API_BASE_URL"],[16,20,34,18],[16,23,34,21,"_expoVirtualEnv"],[16,38,34,21],[16,39,34,21,"env"],[16,42,34,21],[16,43,34,21,"EXPO_PUBLIC_BACKEND_URL"],[16,66,34,21],[16,70,34,60],[16,72,34,62],[17,2,36,7],[17,8,36,13,"VaultService"],[17,20,36,25],[17,21,36,26],[18,4,37,2],[18,10,37,16,"getAuthHeaders"],[18,24,37,30,"getAuthHeaders"],[18,25,37,30],[18,27,37,66],[19,6,38,4],[19,12,38,10,"token"],[19,17,38,15],[19,20,38,18],[19,26,38,24,"SecureStorageService"],[19,39,38,44],[19,40,38,44,"SecureStorageService"],[19,60,38,44],[19,61,38,45,"getAccessToken"],[19,75,38,59],[19,76,38,60],[19,77,38,61],[20,6,39,4],[20,13,39,11],[21,8,40,6],[21,23,40,21],[21,25,40,23],[21,35,40,33,"token"],[21,40,40,38],[21,42,40,40],[22,8,41,6],[22,22,41,20],[22,24,41,22],[23,6,42,4],[23,7,42,5],[24,4,43,2],[25,4,45,2],[25,10,45,8,"getVaultItems"],[25,23,45,21,"getVaultItems"],[25,24,45,22,"masterKey"],[25,33,45,39],[25,35,45,72],[26,6,46,4],[26,10,46,8],[27,8,47,6],[27,14,47,12,"headers"],[27,21,47,19],[27,24,47,22],[27,30,47,28],[27,34,47,32],[27,35,47,33,"getAuthHeaders"],[27,49,47,47],[27,50,47,48],[27,51,47,49],[28,8,48,6],[28,14,48,12,"response"],[28,22,48,20],[28,25,48,23],[28,31,48,29,"fetch"],[28,36,48,34],[28,37,48,35],[28,40,48,38,"API_BASE_URL"],[28,52,48,50],[28,70,48,68],[28,72,48,70],[29,10,49,8,"headers"],[30,8,50,6],[30,9,50,7],[30,10,50,8],[31,8,52,6],[31,12,52,10],[31,13,52,11,"response"],[31,21,52,19],[31,22,52,20,"ok"],[31,24,52,22],[31,26,52,24],[32,10,53,8],[32,16,53,14],[32,20,53,18,"Error"],[32,25,53,23],[32,26,53,24],[32,55,53,53],[32,56,53,54],[33,8,54,6],[34,8,56,6],[34,14,56,12,"encryptedItems"],[34,28,56,39],[34,31,56,42],[34,37,56,48,"response"],[34,45,56,56],[34,46,56,57,"json"],[34,50,56,61],[34,51,56,62],[34,52,56,63],[36,8,58,6],[37,8,59,6],[37,14,59,12,"decryptedItems"],[37,28,59,48],[37,31,59,51],[37,33,59,53],[38,8,61,6],[38,13,61,11],[38,19,61,17,"item"],[38,23,61,21],[38,27,61,25,"encryptedItems"],[38,41,61,39],[38,43,61,41],[39,10,62,8],[39,14,62,12],[40,12,63,10],[40,18,63,16,"decryptedDataStr"],[40,34,63,32],[40,37,63,35,"EncryptionService"],[40,53,63,52],[40,54,63,52,"EncryptionService"],[40,71,63,52],[40,72,63,53,"decrypt"],[40,79,63,60],[40,80,63,61,"item"],[40,84,63,65],[40,85,63,66,"encrypted_data"],[40,99,63,80],[40,101,63,82,"masterKey"],[40,110,63,91],[40,111,63,92],[41,12,64,10],[41,18,64,16,"decryptedData"],[41,31,64,29],[41,34,64,32,"JSON"],[41,38,64,36],[41,39,64,37,"parse"],[41,44,64,42],[41,45,64,43,"decryptedDataStr"],[41,61,64,59],[41,62,64,60],[42,12,66,10,"decryptedItems"],[42,26,66,24],[42,27,66,25,"push"],[42,31,66,29],[42,32,66,30],[43,14,67,12,"id"],[43,16,67,14],[43,18,67,16,"item"],[43,22,67,20],[43,23,67,21,"id"],[43,25,67,23],[44,14,68,12,"item_type"],[44,23,68,21],[44,25,68,23,"item"],[44,29,68,27],[44,30,68,28,"item_type"],[44,39,68,37],[45,14,69,12,"decrypted_data"],[45,28,69,26],[45,30,69,28,"decryptedData"],[45,43,69,41],[46,14,70,12,"created_at"],[46,24,70,22],[46,26,70,24,"item"],[46,30,70,28],[46,31,70,29,"created_at"],[46,41,70,39],[47,14,71,12,"updated_at"],[47,24,71,22],[47,26,71,24,"item"],[47,30,71,28],[47,31,71,29,"updated_at"],[48,12,72,10],[48,13,72,11],[48,14,72,12],[49,10,73,8],[49,11,73,9],[49,12,73,10],[49,19,73,17,"decryptError"],[49,31,73,29],[49,33,73,31],[50,12,74,10,"console"],[50,19,74,17],[50,20,74,18,"error"],[50,25,74,23],[50,26,74,24],[50,51,74,49],[50,53,74,51,"item"],[50,57,74,55],[50,58,74,56,"id"],[50,60,74,58],[50,62,74,60,"decryptError"],[50,74,74,72],[50,75,74,73],[51,12,75,10],[52,10,76,8],[53,8,77,6],[54,8,79,6],[54,15,79,13,"decryptedItems"],[54,29,79,27],[55,6,80,4],[55,7,80,5],[55,8,80,6],[55,15,80,13,"error"],[55,20,80,18],[55,22,80,20],[56,8,81,6,"console"],[56,15,81,13],[56,16,81,14,"error"],[56,21,81,19],[56,22,81,20],[56,57,81,55],[56,59,81,57,"error"],[56,64,81,62],[56,65,81,63],[57,8,82,6],[57,14,82,12,"error"],[57,19,82,17],[58,6,83,4],[59,4,84,2],[60,4,86,2],[60,10,86,8,"createVaultItem"],[60,25,86,23,"createVaultItem"],[60,26,87,4,"itemType"],[60,34,87,56],[60,36,88,4,"itemData"],[60,44,88,27],[60,46,89,4,"masterKey"],[60,55,89,21],[60,57,90,19],[61,6,91,4],[61,10,91,8],[62,8,92,6],[63,8,93,6],[63,14,93,12,"dataToEncrypt"],[63,27,93,25],[63,30,93,28,"JSON"],[63,34,93,32],[63,35,93,33,"stringify"],[63,44,93,42],[63,45,93,43,"itemData"],[63,53,93,51],[63,54,93,52],[64,8,94,6],[64,14,94,12,"encryptedData"],[64,27,94,25],[64,30,94,28,"EncryptionService"],[64,46,94,45],[64,47,94,45,"EncryptionService"],[64,64,94,45],[64,65,94,46,"encrypt"],[64,72,94,53],[64,73,94,54,"dataToEncrypt"],[64,86,94,67],[64,88,94,69,"masterKey"],[64,97,94,78],[64,98,94,79],[65,8,96,6],[65,14,96,12,"headers"],[65,21,96,19],[65,24,96,22],[65,30,96,28],[65,34,96,32],[65,35,96,33,"getAuthHeaders"],[65,49,96,47],[65,50,96,48],[65,51,96,49],[66,8,97,6],[66,14,97,12,"response"],[66,22,97,20],[66,25,97,23],[66,31,97,29,"fetch"],[66,36,97,34],[66,37,97,35],[66,40,97,38,"API_BASE_URL"],[66,52,97,50],[66,70,97,68],[66,72,97,70],[67,10,98,8,"method"],[67,16,98,14],[67,18,98,16],[67,24,98,22],[68,10,99,8,"headers"],[68,17,99,15],[69,10,100,8,"body"],[69,14,100,12],[69,16,100,14,"JSON"],[69,20,100,18],[69,21,100,19,"stringify"],[69,30,100,28],[69,31,100,29],[70,12,101,10,"item_type"],[70,21,101,19],[70,23,101,21,"itemType"],[70,31,101,29],[71,12,102,10,"encrypted_data"],[71,26,102,24],[71,28,102,26,"encryptedData"],[72,10,103,8],[72,11,103,9],[73,8,104,6],[73,9,104,7],[73,10,104,8],[74,8,106,6],[74,12,106,10],[74,13,106,11,"response"],[74,21,106,19],[74,22,106,20,"ok"],[74,24,106,22],[74,26,106,24],[75,10,107,8],[75,16,107,14,"error"],[75,21,107,19],[75,24,107,22],[75,30,107,28,"response"],[75,38,107,36],[75,39,107,37,"json"],[75,43,107,41],[75,44,107,42],[75,45,107,43],[76,10,108,8],[76,16,108,14],[76,20,108,18,"Error"],[76,25,108,23],[76,26,108,24,"error"],[76,31,108,29],[76,32,108,30,"detail"],[76,38,108,36],[76,42,108,40],[76,71,108,69],[76,72,108,70],[77,8,109,6],[78,6,110,4],[78,7,110,5],[78,8,110,6],[78,15,110,13,"error"],[78,20,110,18],[78,22,110,20],[79,8,111,6,"console"],[79,15,111,13],[79,16,111,14,"error"],[79,21,111,19],[79,22,111,20],[79,59,111,57],[79,61,111,59,"error"],[79,66,111,64],[79,67,111,65],[80,8,112,6],[80,14,112,12,"error"],[80,19,112,17],[81,6,113,4],[82,4,114,2],[83,4,116,2],[83,10,116,8,"updateVaultItem"],[83,25,116,23,"updateVaultItem"],[83,26,117,4,"itemId"],[83,32,117,18],[83,34,118,4,"itemData"],[83,42,118,27],[83,44,119,4,"masterKey"],[83,53,119,21],[83,55,120,19],[84,6,121,4],[84,10,121,8],[85,8,122,6],[86,8,123,6],[86,14,123,12,"dataToEncrypt"],[86,27,123,25],[86,30,123,28,"JSON"],[86,34,123,32],[86,35,123,33,"stringify"],[86,44,123,42],[86,45,123,43,"itemData"],[86,53,123,51],[86,54,123,52],[87,8,124,6],[87,14,124,12,"encryptedData"],[87,27,124,25],[87,30,124,28,"EncryptionService"],[87,46,124,45],[87,47,124,45,"EncryptionService"],[87,64,124,45],[87,65,124,46,"encrypt"],[87,72,124,53],[87,73,124,54,"dataToEncrypt"],[87,86,124,67],[87,88,124,69,"masterKey"],[87,97,124,78],[87,98,124,79],[88,8,126,6],[88,14,126,12,"headers"],[88,21,126,19],[88,24,126,22],[88,30,126,28],[88,34,126,32],[88,35,126,33,"getAuthHeaders"],[88,49,126,47],[88,50,126,48],[88,51,126,49],[89,8,127,6],[89,14,127,12,"response"],[89,22,127,20],[89,25,127,23],[89,31,127,29,"fetch"],[89,36,127,34],[89,37,127,35],[89,40,127,38,"API_BASE_URL"],[89,52,127,50],[89,72,127,70,"itemId"],[89,78,127,76],[89,80,127,78],[89,82,127,80],[90,10,128,8,"method"],[90,16,128,14],[90,18,128,16],[90,23,128,21],[91,10,129,8,"headers"],[91,17,129,15],[92,10,130,8,"body"],[92,14,130,12],[92,16,130,14,"JSON"],[92,20,130,18],[92,21,130,19,"stringify"],[92,30,130,28],[92,31,130,29],[93,12,131,10,"encrypted_data"],[93,26,131,24],[93,28,131,26,"encryptedData"],[94,10,132,8],[94,11,132,9],[95,8,133,6],[95,9,133,7],[95,10,133,8],[96,8,135,6],[96,12,135,10],[96,13,135,11,"response"],[96,21,135,19],[96,22,135,20,"ok"],[96,24,135,22],[96,26,135,24],[97,10,136,8],[97,16,136,14,"error"],[97,21,136,19],[97,24,136,22],[97,30,136,28,"response"],[97,38,136,36],[97,39,136,37,"json"],[97,43,136,41],[97,44,136,42],[97,45,136,43],[98,10,137,8],[98,16,137,14],[98,20,137,18,"Error"],[98,25,137,23],[98,26,137,24,"error"],[98,31,137,29],[98,32,137,30,"detail"],[98,38,137,36],[98,42,137,40],[98,71,137,69],[98,72,137,70],[99,8,138,6],[100,6,139,4],[100,7,139,5],[100,8,139,6],[100,15,139,13,"error"],[100,20,139,18],[100,22,139,20],[101,8,140,6,"console"],[101,15,140,13],[101,16,140,14,"error"],[101,21,140,19],[101,22,140,20],[101,59,140,57],[101,61,140,59,"error"],[101,66,140,64],[101,67,140,65],[102,8,141,6],[102,14,141,12,"error"],[102,19,141,17],[103,6,142,4],[104,4,143,2],[105,4,145,2],[105,10,145,8,"deleteVaultItem"],[105,25,145,23,"deleteVaultItem"],[105,26,145,24,"itemId"],[105,32,145,38],[105,34,145,55],[106,6,146,4],[106,10,146,8],[107,8,147,6],[107,14,147,12,"headers"],[107,21,147,19],[107,24,147,22],[107,30,147,28],[107,34,147,32],[107,35,147,33,"getAuthHeaders"],[107,49,147,47],[107,50,147,48],[107,51,147,49],[108,8,148,6],[108,14,148,12,"response"],[108,22,148,20],[108,25,148,23],[108,31,148,29,"fetch"],[108,36,148,34],[108,37,148,35],[108,40,148,38,"API_BASE_URL"],[108,52,148,50],[108,72,148,70,"itemId"],[108,78,148,76],[108,80,148,78],[108,82,148,80],[109,10,149,8,"method"],[109,16,149,14],[109,18,149,16],[109,26,149,24],[110,10,150,8,"headers"],[111,8,151,6],[111,9,151,7],[111,10,151,8],[112,8,153,6],[112,12,153,10],[112,13,153,11,"response"],[112,21,153,19],[112,22,153,20,"ok"],[112,24,153,22],[112,26,153,24],[113,10,154,8],[113,16,154,14,"error"],[113,21,154,19],[113,24,154,22],[113,30,154,28,"response"],[113,38,154,36],[113,39,154,37,"json"],[113,43,154,41],[113,44,154,42],[113,45,154,43],[114,10,155,8],[114,16,155,14],[114,20,155,18,"Error"],[114,25,155,23],[114,26,155,24,"error"],[114,31,155,29],[114,32,155,30,"detail"],[114,38,155,36],[114,42,155,40],[114,71,155,69],[114,72,155,70],[115,8,156,6],[116,6,157,4],[116,7,157,5],[116,8,157,6],[116,15,157,13,"error"],[116,20,157,18],[116,22,157,20],[117,8,158,6,"console"],[117,15,158,13],[117,16,158,14,"error"],[117,21,158,19],[117,22,158,20],[117,59,158,57],[117,61,158,59,"error"],[117,66,158,64],[117,67,158,65],[118,8,159,6],[118,14,159,12,"error"],[118,19,159,17],[119,6,160,4],[120,4,161,2],[122,4,163,2],[123,4,164,2,"createPasswordTemplate"],[123,26,164,24,"createPasswordTemplate"],[123,27,164,24],[123,29,164,42],[124,6,165,4],[124,13,165,11],[125,8,166,6,"name"],[125,12,166,10],[125,14,166,12],[125,16,166,14],[126,8,167,6,"username"],[126,16,167,14],[126,18,167,16],[126,20,167,18],[127,8,168,6,"password"],[127,16,168,14],[127,18,168,16],[127,20,168,18],[128,8,169,6,"website"],[128,15,169,13],[128,17,169,15],[128,19,169,17],[129,8,170,6,"notes"],[129,13,170,11],[129,15,170,13],[130,6,171,4],[130,7,171,5],[131,4,172,2],[132,4,174,2,"createCreditCardTemplate"],[132,28,174,26,"createCreditCardTemplate"],[132,29,174,26],[132,31,174,44],[133,6,175,4],[133,13,175,11],[134,8,176,6,"name"],[134,12,176,10],[134,14,176,12],[134,16,176,14],[135,8,177,6,"cardNumber"],[135,18,177,16],[135,20,177,18],[135,22,177,20],[136,8,178,6,"expiryDate"],[136,18,178,16],[136,20,178,18],[136,22,178,20],[137,8,179,6,"cvv"],[137,11,179,9],[137,13,179,11],[137,15,179,13],[138,8,180,6,"cardholderName"],[138,22,180,20],[138,24,180,22],[138,26,180,24],[139,8,181,6,"notes"],[139,13,181,11],[139,15,181,13],[140,6,182,4],[140,7,182,5],[141,4,183,2],[142,4,185,2,"createSecureNoteTemplate"],[142,28,185,26,"createSecureNoteTemplate"],[142,29,185,26],[142,31,185,44],[143,6,186,4],[143,13,186,11],[144,8,187,6,"name"],[144,12,187,10],[144,14,187,12],[144,16,187,14],[145,8,188,6,"notes"],[145,13,188,11],[145,15,188,13],[146,6,189,4],[146,7,189,5],[147,4,190,2],[149,4,192,2],[150,4,193,2,"generateStrongPassword"],[150,26,193,24,"generateStrongPassword"],[150,27,194,4,"length"],[150,33,194,18],[150,36,194,21],[150,38,194,23],[150,40,195,4,"includeSymbols"],[150,54,195,27],[150,57,195,30],[150,61,195,34],[150,63,196,12],[151,6,197,4],[151,13,197,11,"EncryptionService"],[151,29,197,28],[151,30,197,28,"EncryptionService"],[151,47,197,28],[151,48,197,29,"generatePassword"],[151,64,197,45],[151,65,198,6,"length"],[151,71,198,12],[151,73,199,6],[151,77,199,10],[152,6,199,12],[153,6,200,6],[153,10,200,10],[154,6,200,12],[155,6,201,6],[155,10,201,10],[156,6,201,12],[157,6,202,6,"includeSymbols"],[157,20,203,4],[157,21,203,5],[158,4,204,2],[160,4,206,2],[161,4,207,2,"calculatePasswordStrength"],[161,29,207,27,"calculatePasswordStrength"],[161,30,207,28,"password"],[161,38,207,44],[161,40,207,46],[162,6,208,4],[162,13,208,11,"EncryptionService"],[162,29,208,28],[162,30,208,28,"EncryptionService"],[162,47,208,28],[162,48,208,29,"calculatePasswordStrength"],[162,73,208,54],[162,74,208,55,"password"],[162,82,208,63],[162,83,208,64],[163,4,209,2],[164,2,210,0],[165,0,210,1],[165,3]],"functionMap":{"names":["<global>","VaultService","getAuthHeaders","getVaultItems","createVaultItem","updateVaultItem","deleteVaultItem","createPasswordTemplate","createCreditCardTemplate","createSecureNoteTemplate","generateStrongPassword","calculatePasswordStrength"],"mappings":"AAA;OCmC;ECC;GDM;EEE;GFuC;EGE;GH4B;EIE;GJ2B;EKE;GLgB;EMG;GNQ;EOE;GPS;EQE;GRK;ESG;GTW;EUG;GVE"},"hasCjsExports":false},"type":"js/module"}]}