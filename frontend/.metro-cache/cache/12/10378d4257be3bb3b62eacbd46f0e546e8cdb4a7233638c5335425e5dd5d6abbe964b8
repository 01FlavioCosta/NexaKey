{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _utilsStorage = require(_dependencyMap[2], \"../utils/storage\");\n  var _utilsEncryption = require(_dependencyMap[3], \"../utils/encryption\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        console.log('Initializing authentication...');\n\n        // Check if user has been through onboarding\n        const userData = await _utilsStorage.SecureStorageService.getUserData();\n        const token = await _utilsStorage.SecureStorageService.getAccessToken();\n        const salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        console.log('Auth data check:', {\n          hasUserData: !!userData,\n          hasToken: !!token,\n          hasSalt: !!salt\n        });\n        if (!userData || !salt) {\n          console.log('No user data or salt found, showing onboarding');\n          setIsFirstTime(true);\n          setIsLoading(false);\n          return;\n        }\n        if (token && userData) {\n          try {\n            // Validate token with backend\n            const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              }\n            });\n            if (response.ok) {\n              const userProfile = await response.json();\n              setUser(userProfile);\n              console.log('User profile validated successfully');\n\n              // Try to restore master key\n              const storedKey = await _utilsStorage.SecureStorageService.getMasterKey();\n              if (storedKey) {\n                setMasterKeyState(storedKey);\n                console.log('Master key restored successfully');\n              } else {\n                console.log('No master key found in storage');\n              }\n            } else {\n              console.log('Token validation failed:', response.status);\n              // Token invalid, clear stored data\n              await _utilsStorage.SecureStorageService.clearAllData();\n              setIsFirstTime(true);\n            }\n          } catch (error) {\n            console.error('Error validating token:', error);\n            // Network or other error, clear data to be safe\n            await _utilsStorage.SecureStorageService.clearAllData();\n            setIsFirstTime(true);\n          }\n        } else {\n          console.log('Missing token or user data');\n          setIsFirstTime(true);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        // Clear everything on initialization error\n        try {\n          await _utilsStorage.SecureStorageService.clearAllData();\n        } catch (clearError) {\n          console.error('Error clearing data:', clearError);\n        }\n        setIsFirstTime(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _utilsEncryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        console.log('Registering user with email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        const responseText = await response.text();\n        console.log('Registration response:', response.status, responseText);\n        if (!response.ok) {\n          let errorMessage = 'Falha no registro';\n          try {\n            const error = JSON.parse(responseText);\n            errorMessage = error.detail || errorMessage;\n          } catch (parseError) {\n            console.error('Error parsing response:', parseError);\n            errorMessage = `Erro ${response.status}: ${responseText}`;\n          }\n          throw new Error(errorMessage);\n        }\n        const data = JSON.parse(responseText);\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeUserSalt(salt);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n        console.log('Registration successful for:', email);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        console.log('Starting login process for:', email);\n\n        // Get stored salt - this is critical for consistency\n        let salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          console.log('No salt found, generating new one');\n          // If no salt is stored, we need to handle this case\n          // For now, let's try with a fallback approach\n          Alert.alert('Dados Não Encontrados', 'Não foi possível encontrar os dados de login. Você precisará se registrar novamente.', [{\n            text: 'OK'\n          }]);\n          setIsFirstTime(true);\n          return;\n        }\n        console.log('Using stored salt for login');\n\n        // Hash password for server verification - ensure consistency\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key - must be identical to registration\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        console.log('Attempting login with hashed password');\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        const responseText = await response.text();\n        console.log('Login response:', response.status, responseText);\n        if (!response.ok) {\n          let errorMessage = 'Credenciais inválidas';\n          try {\n            const error = JSON.parse(responseText);\n            errorMessage = error.detail || errorMessage;\n          } catch (parseError) {\n            console.error('Error parsing login response:', parseError);\n          }\n          if (response.status === 401) {\n            // Clear potentially corrupted data\n            console.log('Login failed - clearing stored data');\n            await _utilsStorage.SecureStorageService.clearAllData();\n            setIsFirstTime(true);\n            errorMessage = 'Credenciais inválidas. Dados locais foram limpos. Tente se registrar novamente.';\n          }\n          throw new Error(errorMessage);\n        }\n        const data = JSON.parse(responseText);\n        console.log('Login successful');\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        console.log('Login completed successfully');\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _utilsStorage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser({\n            ...user,\n            biometric_enabled: enabled\n          });\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 10\n    }, this);\n  };\n  _s(AuthProvider, \"mGwwgojCgQ3U20j04pMnc9audNY=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":304,"map":[[10,2,34,0,"Object"],[10,8,34,0],[10,9,34,0,"defineProperty"],[10,23,34,0],[10,24,34,0,"exports"],[10,31,34,0],[11,4,34,0,"enumerable"],[11,14,34,0],[12,4,34,0,"get"],[12,7,34,0],[12,18,34,0,"get"],[12,19,34,0],[13,6,34,0],[13,13,34,0,"AuthProvider"],[13,25,34,0],[14,4,34,0],[15,2,34,0],[16,2,318,0,"Object"],[16,8,318,0],[16,9,318,0,"defineProperty"],[16,23,318,0],[16,24,318,0,"exports"],[16,31,318,0],[17,4,318,0,"enumerable"],[17,14,318,0],[18,4,318,0,"get"],[18,7,318,0],[18,18,318,0,"get"],[18,19,318,0],[19,6,318,0],[19,13,318,0,"useAuth"],[19,20,318,0],[20,4,318,0],[21,2,318,0],[22,2,324,2],[22,6,324,2,"_expoVirtualEnv"],[22,21,324,2],[22,24,324,2,"require"],[22,31,324,2],[22,32,324,2,"_dependencyMap"],[22,46,324,2],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_utilsStorage"],[24,19,2,0],[24,22,2,0,"require"],[24,29,2,0],[24,30,2,0,"_dependencyMap"],[24,44,2,0],[25,2,3,0],[25,6,3,0,"_utilsEncryption"],[25,22,3,0],[25,25,3,0,"require"],[25,32,3,0],[25,33,3,0,"_dependencyMap"],[25,47,3,0],[26,2,3,56],[26,6,3,56,"_reactJsxDevRuntime"],[26,25,3,56],[26,28,3,56,"require"],[26,35,3,56],[26,36,3,56,"_dependencyMap"],[26,50,3,56],[27,2,26,0],[27,8,26,6,"AuthContext"],[27,19,26,17],[27,35,26,20],[27,39,26,20,"createContext"],[27,45,26,33],[27,46,26,33,"createContext"],[27,59,26,33],[27,61,26,63,"undefined"],[27,70,26,72],[27,71,26,73],[28,2,32,0],[28,8,32,6,"API_BASE_URL"],[28,20,32,18],[28,23,32,21,"_expoVirtualEnv"],[28,38,32,21],[28,39,32,21,"env"],[28,42,32,21],[28,43,32,21,"EXPO_PUBLIC_BACKEND_URL"],[28,66,32,21],[28,70,32,60],[28,72,32,62],[29,2,34,7],[29,8,34,13,"AuthProvider"],[29,20,34,54],[29,23,34,57,"AuthProvider"],[29,24,34,58],[30,4,34,60,"children"],[31,2,34,69],[31,3,34,70],[31,8,34,75],[32,4,34,75,"_s"],[32,6,34,75],[33,4,35,2],[33,10,35,8],[33,11,35,9,"user"],[33,15,35,13],[33,17,35,15,"setUser"],[33,24,35,22],[33,25,35,23],[33,28,35,26],[33,32,35,26,"useState"],[33,38,35,34],[33,39,35,34,"useState"],[33,47,35,34],[33,49,35,48],[33,53,35,52],[33,54,35,53],[34,4,36,2],[34,10,36,8],[34,11,36,9,"isLoading"],[34,20,36,18],[34,22,36,20,"setIsLoading"],[34,34,36,32],[34,35,36,33],[34,38,36,36],[34,42,36,36,"useState"],[34,48,36,44],[34,49,36,44,"useState"],[34,57,36,44],[34,59,36,45],[34,63,36,49],[34,64,36,50],[35,4,37,2],[35,10,37,8],[35,11,37,9,"isFirstTime"],[35,22,37,20],[35,24,37,22,"setIsFirstTime"],[35,38,37,36],[35,39,37,37],[35,42,37,40],[35,46,37,40,"useState"],[35,52,37,48],[35,53,37,48,"useState"],[35,61,37,48],[35,63,37,49],[35,68,37,54],[35,69,37,55],[36,4,38,2],[36,10,38,8],[36,11,38,9,"masterKey"],[36,20,38,18],[36,22,38,20,"setMasterKeyState"],[36,39,38,37],[36,40,38,38],[36,43,38,41],[36,47,38,41,"useState"],[36,53,38,49],[36,54,38,49,"useState"],[36,62,38,49],[36,64,38,65],[36,68,38,69],[36,69,38,70],[37,4,40,2],[37,8,40,2,"useEffect"],[37,14,40,11],[37,15,40,11,"useEffect"],[37,24,40,11],[37,26,40,12],[37,32,40,18],[38,6,41,4,"initializeAuth"],[38,20,41,18],[38,21,41,19],[38,22,41,20],[39,4,42,2],[39,5,42,3],[39,7,42,5],[39,9,42,7],[39,10,42,8],[40,4,44,2],[40,10,44,8,"initializeAuth"],[40,24,44,22],[40,27,44,25],[40,33,44,25,"initializeAuth"],[40,34,44,25],[40,39,44,37],[41,6,45,4],[41,10,45,8],[42,8,46,6,"console"],[42,15,46,13],[42,16,46,14,"log"],[42,19,46,17],[42,20,46,18],[42,52,46,50],[42,53,46,51],[44,8,48,6],[45,8,49,6],[45,14,49,12,"userData"],[45,22,49,20],[45,25,49,23],[45,31,49,29,"SecureStorageService"],[45,44,49,49],[45,45,49,49,"SecureStorageService"],[45,65,49,49],[45,66,49,50,"getUserData"],[45,77,49,61],[45,78,49,62],[45,79,49,63],[46,8,50,6],[46,14,50,12,"token"],[46,19,50,17],[46,22,50,20],[46,28,50,26,"SecureStorageService"],[46,41,50,46],[46,42,50,46,"SecureStorageService"],[46,62,50,46],[46,63,50,47,"getAccessToken"],[46,77,50,61],[46,78,50,62],[46,79,50,63],[47,8,51,6],[47,14,51,12,"salt"],[47,18,51,16],[47,21,51,19],[47,27,51,25,"SecureStorageService"],[47,40,51,45],[47,41,51,45,"SecureStorageService"],[47,61,51,45],[47,62,51,46,"getUserSalt"],[47,73,51,57],[47,74,51,58],[47,75,51,59],[48,8,53,6,"console"],[48,15,53,13],[48,16,53,14,"log"],[48,19,53,17],[48,20,53,18],[48,38,53,36],[48,40,53,38],[49,10,53,40,"hasUserData"],[49,21,53,51],[49,23,53,53],[49,24,53,54],[49,25,53,55,"userData"],[49,33,53,63],[50,10,53,65,"hasToken"],[50,18,53,73],[50,20,53,75],[50,21,53,76],[50,22,53,77,"token"],[50,27,53,82],[51,10,53,84,"hasSalt"],[51,17,53,91],[51,19,53,93],[51,20,53,94],[51,21,53,95,"salt"],[52,8,53,100],[52,9,53,101],[52,10,53,102],[53,8,55,6],[53,12,55,10],[53,13,55,11,"userData"],[53,21,55,19],[53,25,55,23],[53,26,55,24,"salt"],[53,30,55,28],[53,32,55,30],[54,10,56,8,"console"],[54,17,56,15],[54,18,56,16,"log"],[54,21,56,19],[54,22,56,20],[54,70,56,68],[54,71,56,69],[55,10,57,8,"setIsFirstTime"],[55,24,57,22],[55,25,57,23],[55,29,57,27],[55,30,57,28],[56,10,58,8,"setIsLoading"],[56,22,58,20],[56,23,58,21],[56,28,58,26],[56,29,58,27],[57,10,59,8],[58,8,60,6],[59,8,62,6],[59,12,62,10,"token"],[59,17,62,15],[59,21,62,19,"userData"],[59,29,62,27],[59,31,62,29],[60,10,63,8],[60,14,63,12],[61,12,64,10],[62,12,65,10],[62,18,65,16,"response"],[62,26,65,24],[62,29,65,27],[62,35,65,33,"fetch"],[62,40,65,38],[62,41,65,39],[62,44,65,42,"API_BASE_URL"],[62,56,65,54],[62,75,65,73],[62,77,65,75],[63,14,66,12,"headers"],[63,21,66,19],[63,23,66,21],[64,16,67,14],[64,31,67,29],[64,33,67,31],[64,43,67,41,"token"],[64,48,67,46],[64,50,67,48],[65,16,68,14],[65,30,68,28],[65,32,68,30],[66,14,69,12],[67,12,70,10],[67,13,70,11],[67,14,70,12],[68,12,72,10],[68,16,72,14,"response"],[68,24,72,22],[68,25,72,23,"ok"],[68,27,72,25],[68,29,72,27],[69,14,73,12],[69,20,73,18,"userProfile"],[69,31,73,29],[69,34,73,32],[69,40,73,38,"response"],[69,48,73,46],[69,49,73,47,"json"],[69,53,73,51],[69,54,73,52],[69,55,73,53],[70,14,74,12,"setUser"],[70,21,74,19],[70,22,74,20,"userProfile"],[70,33,74,31],[70,34,74,32],[71,14,75,12,"console"],[71,21,75,19],[71,22,75,20,"log"],[71,25,75,23],[71,26,75,24],[71,63,75,61],[71,64,75,62],[73,14,77,12],[74,14,78,12],[74,20,78,18,"storedKey"],[74,29,78,27],[74,32,78,30],[74,38,78,36,"SecureStorageService"],[74,51,78,56],[74,52,78,56,"SecureStorageService"],[74,72,78,56],[74,73,78,57,"getMasterKey"],[74,85,78,69],[74,86,78,70],[74,87,78,71],[75,14,79,12],[75,18,79,16,"storedKey"],[75,27,79,25],[75,29,79,27],[76,16,80,14,"setMasterKeyState"],[76,33,80,31],[76,34,80,32,"storedKey"],[76,43,80,41],[76,44,80,42],[77,16,81,14,"console"],[77,23,81,21],[77,24,81,22,"log"],[77,27,81,25],[77,28,81,26],[77,62,81,60],[77,63,81,61],[78,14,82,12],[78,15,82,13],[78,21,82,19],[79,16,83,14,"console"],[79,23,83,21],[79,24,83,22,"log"],[79,27,83,25],[79,28,83,26],[79,60,83,58],[79,61,83,59],[80,14,84,12],[81,12,85,10],[81,13,85,11],[81,19,85,17],[82,14,86,12,"console"],[82,21,86,19],[82,22,86,20,"log"],[82,25,86,23],[82,26,86,24],[82,52,86,50],[82,54,86,52,"response"],[82,62,86,60],[82,63,86,61,"status"],[82,69,86,67],[82,70,86,68],[83,14,87,12],[84,14,88,12],[84,20,88,18,"SecureStorageService"],[84,33,88,38],[84,34,88,38,"SecureStorageService"],[84,54,88,38],[84,55,88,39,"clearAllData"],[84,67,88,51],[84,68,88,52],[84,69,88,53],[85,14,89,12,"setIsFirstTime"],[85,28,89,26],[85,29,89,27],[85,33,89,31],[85,34,89,32],[86,12,90,10],[87,10,91,8],[87,11,91,9],[87,12,91,10],[87,19,91,17,"error"],[87,24,91,22],[87,26,91,24],[88,12,92,10,"console"],[88,19,92,17],[88,20,92,18,"error"],[88,25,92,23],[88,26,92,24],[88,51,92,49],[88,53,92,51,"error"],[88,58,92,56],[88,59,92,57],[89,12,93,10],[90,12,94,10],[90,18,94,16,"SecureStorageService"],[90,31,94,36],[90,32,94,36,"SecureStorageService"],[90,52,94,36],[90,53,94,37,"clearAllData"],[90,65,94,49],[90,66,94,50],[90,67,94,51],[91,12,95,10,"setIsFirstTime"],[91,26,95,24],[91,27,95,25],[91,31,95,29],[91,32,95,30],[92,10,96,8],[93,8,97,6],[93,9,97,7],[93,15,97,13],[94,10,98,8,"console"],[94,17,98,15],[94,18,98,16,"log"],[94,21,98,19],[94,22,98,20],[94,50,98,48],[94,51,98,49],[95,10,99,8,"setIsFirstTime"],[95,24,99,22],[95,25,99,23],[95,29,99,27],[95,30,99,28],[96,8,100,6],[97,6,101,4],[97,7,101,5],[97,8,101,6],[97,15,101,13,"error"],[97,20,101,18],[97,22,101,20],[98,8,102,6,"console"],[98,15,102,13],[98,16,102,14,"error"],[98,21,102,19],[98,22,102,20],[98,50,102,48],[98,52,102,50,"error"],[98,57,102,55],[98,58,102,56],[99,8,103,6],[100,8,104,6],[100,12,104,10],[101,10,105,8],[101,16,105,14,"SecureStorageService"],[101,29,105,34],[101,30,105,34,"SecureStorageService"],[101,50,105,34],[101,51,105,35,"clearAllData"],[101,63,105,47],[101,64,105,48],[101,65,105,49],[102,8,106,6],[102,9,106,7],[102,10,106,8],[102,17,106,15,"clearError"],[102,27,106,25],[102,29,106,27],[103,10,107,8,"console"],[103,17,107,15],[103,18,107,16,"error"],[103,23,107,21],[103,24,107,22],[103,46,107,44],[103,48,107,46,"clearError"],[103,58,107,56],[103,59,107,57],[104,8,108,6],[105,8,109,6,"setIsFirstTime"],[105,22,109,20],[105,23,109,21],[105,27,109,25],[105,28,109,26],[106,6,110,4],[106,7,110,5],[106,16,110,14],[107,8,111,6,"setIsLoading"],[107,20,111,18],[107,21,111,19],[107,26,111,24],[107,27,111,25],[108,6,112,4],[109,4,113,2],[109,5,113,3],[110,4,115,2],[110,10,115,8,"register"],[110,18,115,16],[110,21,115,19],[110,27,115,19,"register"],[110,28,116,4,"email"],[110,33,116,17],[110,35,117,4,"password"],[110,43,117,20],[110,45,118,4,"biometricEnabled"],[110,61,118,29],[110,66,119,22],[111,6,120,4],[111,10,120,8],[112,8,121,6,"setIsLoading"],[112,20,121,18],[112,21,121,19],[112,25,121,23],[112,26,121,24],[114,8,123,6],[115,8,124,6],[115,14,124,12,"salt"],[115,18,124,16],[115,21,124,19,"EncryptionService"],[115,37,124,36],[115,38,124,36,"EncryptionService"],[115,55,124,36],[115,56,124,37,"generateSalt"],[115,68,124,49],[115,69,124,50],[115,70,124,51],[117,8,126,6],[118,8,127,6],[118,14,127,12,"masterPasswordHash"],[118,32,127,30],[118,35,127,33],[118,41,127,39,"EncryptionService"],[118,57,127,56],[118,58,127,56,"EncryptionService"],[118,75,127,56],[118,76,127,57,"hashMasterPassword"],[118,94,127,75],[118,95,127,76,"password"],[118,103,127,84],[118,105,127,86,"salt"],[118,109,127,90],[118,110,127,91],[120,8,129,6],[121,8,130,6],[121,14,130,12,"encryptionKey"],[121,27,130,25],[121,30,130,28],[121,36,130,34,"EncryptionService"],[121,52,130,51],[121,53,130,51,"EncryptionService"],[121,70,130,51],[121,71,130,52,"deriveKey"],[121,80,130,61],[121,81,130,62,"password"],[121,89,130,70],[121,91,130,72,"salt"],[121,95,130,76],[121,96,130,77],[122,8,132,6,"console"],[122,15,132,13],[122,16,132,14,"log"],[122,19,132,17],[122,20,132,18],[122,50,132,48],[122,52,132,50,"email"],[122,57,132,55],[122,58,132,56],[123,8,134,6],[123,14,134,12,"response"],[123,22,134,20],[123,25,134,23],[123,31,134,29,"fetch"],[123,36,134,34],[123,37,134,35],[123,40,134,38,"API_BASE_URL"],[123,52,134,50],[123,72,134,70],[123,74,134,72],[124,10,135,8,"method"],[124,16,135,14],[124,18,135,16],[124,24,135,22],[125,10,136,8,"headers"],[125,17,136,15],[125,19,136,17],[126,12,137,10],[126,26,137,24],[126,28,137,26],[127,10,138,8],[127,11,138,9],[128,10,139,8,"body"],[128,14,139,12],[128,16,139,14,"JSON"],[128,20,139,18],[128,21,139,19,"stringify"],[128,30,139,28],[128,31,139,29],[129,12,140,10,"email"],[129,17,140,15],[130,12,141,10,"master_password_hash"],[130,32,141,30],[130,34,141,32,"masterPasswordHash"],[130,52,141,50],[131,12,142,10,"biometric_enabled"],[131,29,142,27],[131,31,142,29,"biometricEnabled"],[132,10,143,8],[132,11,143,9],[133,8,144,6],[133,9,144,7],[133,10,144,8],[134,8,146,6],[134,14,146,12,"responseText"],[134,26,146,24],[134,29,146,27],[134,35,146,33,"response"],[134,43,146,41],[134,44,146,42,"text"],[134,48,146,46],[134,49,146,47],[134,50,146,48],[135,8,147,6,"console"],[135,15,147,13],[135,16,147,14,"log"],[135,19,147,17],[135,20,147,18],[135,44,147,42],[135,46,147,44,"response"],[135,54,147,52],[135,55,147,53,"status"],[135,61,147,59],[135,63,147,61,"responseText"],[135,75,147,73],[135,76,147,74],[136,8,149,6],[136,12,149,10],[136,13,149,11,"response"],[136,21,149,19],[136,22,149,20,"ok"],[136,24,149,22],[136,26,149,24],[137,10,150,8],[137,14,150,12,"errorMessage"],[137,26,150,24],[137,29,150,27],[137,48,150,46],[138,10,151,8],[138,14,151,12],[139,12,152,10],[139,18,152,16,"error"],[139,23,152,21],[139,26,152,24,"JSON"],[139,30,152,28],[139,31,152,29,"parse"],[139,36,152,34],[139,37,152,35,"responseText"],[139,49,152,47],[139,50,152,48],[140,12,153,10,"errorMessage"],[140,24,153,22],[140,27,153,25,"error"],[140,32,153,30],[140,33,153,31,"detail"],[140,39,153,37],[140,43,153,41,"errorMessage"],[140,55,153,53],[141,10,154,8],[141,11,154,9],[141,12,154,10],[141,19,154,17,"parseError"],[141,29,154,27],[141,31,154,29],[142,12,155,10,"console"],[142,19,155,17],[142,20,155,18,"error"],[142,25,155,23],[142,26,155,24],[142,51,155,49],[142,53,155,51,"parseError"],[142,63,155,61],[142,64,155,62],[143,12,156,10,"errorMessage"],[143,24,156,22],[143,27,156,25],[143,35,156,33,"response"],[143,43,156,41],[143,44,156,42,"status"],[143,50,156,48],[143,55,156,53,"responseText"],[143,67,156,65],[143,69,156,67],[144,10,157,8],[145,10,158,8],[145,16,158,14],[145,20,158,18,"Error"],[145,25,158,23],[145,26,158,24,"errorMessage"],[145,38,158,36],[145,39,158,37],[146,8,159,6],[147,8,161,6],[147,14,161,12,"data"],[147,18,161,16],[147,21,161,19,"JSON"],[147,25,161,23],[147,26,161,24,"parse"],[147,31,161,29],[147,32,161,30,"responseText"],[147,44,161,42],[147,45,161,43],[149,8,163,6],[150,8,164,6],[150,14,164,12,"SecureStorageService"],[150,27,164,32],[150,28,164,32,"SecureStorageService"],[150,48,164,32],[150,49,164,33,"storeAccessToken"],[150,65,164,49],[150,66,164,50,"data"],[150,70,164,54],[150,71,164,55,"access_token"],[150,83,164,67],[150,84,164,68],[151,8,165,6],[151,14,165,12,"SecureStorageService"],[151,27,165,32],[151,28,165,32,"SecureStorageService"],[151,48,165,32],[151,49,165,33,"storeUserData"],[151,62,165,46],[151,63,165,47,"data"],[151,67,165,51],[151,68,165,52,"user"],[151,72,165,56],[151,73,165,57],[152,8,166,6],[152,14,166,12,"SecureStorageService"],[152,27,166,32],[152,28,166,32,"SecureStorageService"],[152,48,166,32],[152,49,166,33,"storeUserSalt"],[152,62,166,46],[152,63,166,47,"salt"],[152,67,166,51],[152,68,166,52],[153,8,167,6],[153,14,167,12,"SecureStorageService"],[153,27,167,32],[153,28,167,32,"SecureStorageService"],[153,48,167,32],[153,49,167,33,"storeMasterKey"],[153,63,167,47],[153,64,167,48,"encryptionKey"],[153,77,167,61],[153,78,167,62],[154,8,168,6],[154,14,168,12,"SecureStorageService"],[154,27,168,32],[154,28,168,32,"SecureStorageService"],[154,48,168,32],[154,49,168,33,"setBiometricEnabled"],[154,68,168,52],[154,69,168,53,"biometricEnabled"],[154,85,168,69],[154,86,168,70],[156,8,170,6],[157,8,171,6],[157,12,171,10,"biometricEnabled"],[157,28,171,26],[157,30,171,28],[158,10,172,8],[158,16,172,14,"SecureStorageService"],[158,29,172,34],[158,30,172,34,"SecureStorageService"],[158,50,172,34],[158,51,172,35,"storeBiometricKey"],[158,68,172,52],[158,69,172,53,"encryptionKey"],[158,82,172,66],[158,83,172,67],[159,8,173,6],[160,8,175,6,"setUser"],[160,15,175,13],[160,16,175,14,"data"],[160,20,175,18],[160,21,175,19,"user"],[160,25,175,23],[160,26,175,24],[161,8,176,6,"setMasterKeyState"],[161,25,176,23],[161,26,176,24,"encryptionKey"],[161,39,176,37],[161,40,176,38],[162,8,177,6,"setIsFirstTime"],[162,22,177,20],[162,23,177,21],[162,28,177,26],[162,29,177,27],[163,8,179,6,"console"],[163,15,179,13],[163,16,179,14,"log"],[163,19,179,17],[163,20,179,18],[163,50,179,48],[163,52,179,50,"email"],[163,57,179,55],[163,58,179,56],[164,6,180,4],[164,7,180,5],[164,8,180,6],[164,15,180,13,"error"],[164,20,180,18],[164,22,180,20],[165,8,181,6,"console"],[165,15,181,13],[165,16,181,14,"error"],[165,21,181,19],[165,22,181,20],[165,43,181,41],[165,45,181,43,"error"],[165,50,181,48],[165,51,181,49],[166,8,182,6],[166,14,182,12,"error"],[166,19,182,17],[167,6,183,4],[167,7,183,5],[167,16,183,14],[168,8,184,6,"setIsLoading"],[168,20,184,18],[168,21,184,19],[168,26,184,24],[168,27,184,25],[169,6,185,4],[170,4,186,2],[170,5,186,3],[171,4,188,2],[171,10,188,8,"login"],[171,15,188,13],[171,18,188,16],[171,24,188,16,"login"],[171,25,188,23,"email"],[171,30,188,36],[171,32,188,38,"password"],[171,40,188,54],[171,45,188,74],[172,6,189,4],[172,10,189,8],[173,8,190,6,"setIsLoading"],[173,20,190,18],[173,21,190,19],[173,25,190,23],[173,26,190,24],[174,8,191,6,"console"],[174,15,191,13],[174,16,191,14,"log"],[174,19,191,17],[174,20,191,18],[174,49,191,47],[174,51,191,49,"email"],[174,56,191,54],[174,57,191,55],[176,8,193,6],[177,8,194,6],[177,12,194,10,"salt"],[177,16,194,14],[177,19,194,17],[177,25,194,23,"SecureStorageService"],[177,38,194,43],[177,39,194,43,"SecureStorageService"],[177,59,194,43],[177,60,194,44,"getUserSalt"],[177,71,194,55],[177,72,194,56],[177,73,194,57],[178,8,196,6],[178,12,196,10],[178,13,196,11,"salt"],[178,17,196,15],[178,19,196,17],[179,10,197,8,"console"],[179,17,197,15],[179,18,197,16,"log"],[179,21,197,19],[179,22,197,20],[179,57,197,55],[179,58,197,56],[180,10,198,8],[181,10,199,8],[182,10,200,8,"Alert"],[182,15,200,13],[182,16,200,14,"alert"],[182,21,200,19],[182,22,201,10],[182,45,201,33],[182,47,202,10],[182,133,202,96],[182,135,203,10],[182,136,203,11],[183,12,203,13,"text"],[183,16,203,17],[183,18,203,19],[184,10,203,24],[184,11,203,25],[184,12,204,8],[184,13,204,9],[185,10,205,8,"setIsFirstTime"],[185,24,205,22],[185,25,205,23],[185,29,205,27],[185,30,205,28],[186,10,206,8],[187,8,207,6],[188,8,209,6,"console"],[188,15,209,13],[188,16,209,14,"log"],[188,19,209,17],[188,20,209,18],[188,49,209,47],[188,50,209,48],[190,8,211,6],[191,8,212,6],[191,14,212,12,"masterPasswordHash"],[191,32,212,30],[191,35,212,33],[191,41,212,39,"EncryptionService"],[191,57,212,56],[191,58,212,56,"EncryptionService"],[191,75,212,56],[191,76,212,57,"hashMasterPassword"],[191,94,212,75],[191,95,212,76,"password"],[191,103,212,84],[191,105,212,86,"salt"],[191,109,212,90],[191,110,212,91],[193,8,214,6],[194,8,215,6],[194,14,215,12,"encryptionKey"],[194,27,215,25],[194,30,215,28],[194,36,215,34,"EncryptionService"],[194,52,215,51],[194,53,215,51,"EncryptionService"],[194,70,215,51],[194,71,215,52,"deriveKey"],[194,80,215,61],[194,81,215,62,"password"],[194,89,215,70],[194,91,215,72,"salt"],[194,95,215,76],[194,96,215,77],[195,8,217,6,"console"],[195,15,217,13],[195,16,217,14,"log"],[195,19,217,17],[195,20,217,18],[195,59,217,57],[195,60,217,58],[196,8,219,6],[196,14,219,12,"response"],[196,22,219,20],[196,25,219,23],[196,31,219,29,"fetch"],[196,36,219,34],[196,37,219,35],[196,40,219,38,"API_BASE_URL"],[196,52,219,50],[196,69,219,67],[196,71,219,69],[197,10,220,8,"method"],[197,16,220,14],[197,18,220,16],[197,24,220,22],[198,10,221,8,"headers"],[198,17,221,15],[198,19,221,17],[199,12,222,10],[199,26,222,24],[199,28,222,26],[200,10,223,8],[200,11,223,9],[201,10,224,8,"body"],[201,14,224,12],[201,16,224,14,"JSON"],[201,20,224,18],[201,21,224,19,"stringify"],[201,30,224,28],[201,31,224,29],[202,12,225,10,"email"],[202,17,225,15],[203,12,226,10,"master_password_hash"],[203,32,226,30],[203,34,226,32,"masterPasswordHash"],[204,10,227,8],[204,11,227,9],[205,8,228,6],[205,9,228,7],[205,10,228,8],[206,8,230,6],[206,14,230,12,"responseText"],[206,26,230,24],[206,29,230,27],[206,35,230,33,"response"],[206,43,230,41],[206,44,230,42,"text"],[206,48,230,46],[206,49,230,47],[206,50,230,48],[207,8,231,6,"console"],[207,15,231,13],[207,16,231,14,"log"],[207,19,231,17],[207,20,231,18],[207,37,231,35],[207,39,231,37,"response"],[207,47,231,45],[207,48,231,46,"status"],[207,54,231,52],[207,56,231,54,"responseText"],[207,68,231,66],[207,69,231,67],[208,8,233,6],[208,12,233,10],[208,13,233,11,"response"],[208,21,233,19],[208,22,233,20,"ok"],[208,24,233,22],[208,26,233,24],[209,10,234,8],[209,14,234,12,"errorMessage"],[209,26,234,24],[209,29,234,27],[209,52,234,50],[210,10,235,8],[210,14,235,12],[211,12,236,10],[211,18,236,16,"error"],[211,23,236,21],[211,26,236,24,"JSON"],[211,30,236,28],[211,31,236,29,"parse"],[211,36,236,34],[211,37,236,35,"responseText"],[211,49,236,47],[211,50,236,48],[212,12,237,10,"errorMessage"],[212,24,237,22],[212,27,237,25,"error"],[212,32,237,30],[212,33,237,31,"detail"],[212,39,237,37],[212,43,237,41,"errorMessage"],[212,55,237,53],[213,10,238,8],[213,11,238,9],[213,12,238,10],[213,19,238,17,"parseError"],[213,29,238,27],[213,31,238,29],[214,12,239,10,"console"],[214,19,239,17],[214,20,239,18,"error"],[214,25,239,23],[214,26,239,24],[214,57,239,55],[214,59,239,57,"parseError"],[214,69,239,67],[214,70,239,68],[215,10,240,8],[216,10,242,8],[216,14,242,12,"response"],[216,22,242,20],[216,23,242,21,"status"],[216,29,242,27],[216,34,242,32],[216,37,242,35],[216,39,242,37],[217,12,243,10],[218,12,244,10,"console"],[218,19,244,17],[218,20,244,18,"log"],[218,23,244,21],[218,24,244,22],[218,61,244,59],[218,62,244,60],[219,12,245,10],[219,18,245,16,"SecureStorageService"],[219,31,245,36],[219,32,245,36,"SecureStorageService"],[219,52,245,36],[219,53,245,37,"clearAllData"],[219,65,245,49],[219,66,245,50],[219,67,245,51],[220,12,246,10,"setIsFirstTime"],[220,26,246,24],[220,27,246,25],[220,31,246,29],[220,32,246,30],[221,12,247,10,"errorMessage"],[221,24,247,22],[221,27,247,25],[221,108,247,106],[222,10,248,8],[223,10,250,8],[223,16,250,14],[223,20,250,18,"Error"],[223,25,250,23],[223,26,250,24,"errorMessage"],[223,38,250,36],[223,39,250,37],[224,8,251,6],[225,8,253,6],[225,14,253,12,"data"],[225,18,253,16],[225,21,253,19,"JSON"],[225,25,253,23],[225,26,253,24,"parse"],[225,31,253,29],[225,32,253,30,"responseText"],[225,44,253,42],[225,45,253,43],[226,8,254,6,"console"],[226,15,254,13],[226,16,254,14,"log"],[226,19,254,17],[226,20,254,18],[226,38,254,36],[226,39,254,37],[228,8,256,6],[229,8,257,6],[229,14,257,12,"SecureStorageService"],[229,27,257,32],[229,28,257,32,"SecureStorageService"],[229,48,257,32],[229,49,257,33,"storeAccessToken"],[229,65,257,49],[229,66,257,50,"data"],[229,70,257,54],[229,71,257,55,"access_token"],[229,83,257,67],[229,84,257,68],[230,8,258,6],[230,14,258,12,"SecureStorageService"],[230,27,258,32],[230,28,258,32,"SecureStorageService"],[230,48,258,32],[230,49,258,33,"storeUserData"],[230,62,258,46],[230,63,258,47,"data"],[230,67,258,51],[230,68,258,52,"user"],[230,72,258,56],[230,73,258,57],[231,8,259,6],[231,14,259,12,"SecureStorageService"],[231,27,259,32],[231,28,259,32,"SecureStorageService"],[231,48,259,32],[231,49,259,33,"storeMasterKey"],[231,63,259,47],[231,64,259,48,"encryptionKey"],[231,77,259,61],[231,78,259,62],[232,8,261,6,"setUser"],[232,15,261,13],[232,16,261,14,"data"],[232,20,261,18],[232,21,261,19,"user"],[232,25,261,23],[232,26,261,24],[233,8,262,6,"setMasterKeyState"],[233,25,262,23],[233,26,262,24,"encryptionKey"],[233,39,262,37],[233,40,262,38],[234,8,264,6,"console"],[234,15,264,13],[234,16,264,14,"log"],[234,19,264,17],[234,20,264,18],[234,50,264,48],[234,51,264,49],[235,6,265,4],[235,7,265,5],[235,8,265,6],[235,15,265,13,"error"],[235,20,265,18],[235,22,265,20],[236,8,266,6,"console"],[236,15,266,13],[236,16,266,14,"error"],[236,21,266,19],[236,22,266,20],[236,36,266,34],[236,38,266,36,"error"],[236,43,266,41],[236,44,266,42],[237,8,267,6],[237,14,267,12,"error"],[237,19,267,17],[238,6,268,4],[238,7,268,5],[238,16,268,14],[239,8,269,6,"setIsLoading"],[239,20,269,18],[239,21,269,19],[239,26,269,24],[239,27,269,25],[240,6,270,4],[241,4,271,2],[241,5,271,3],[242,4,273,2],[242,10,273,8,"logout"],[242,16,273,14],[242,19,273,17],[242,25,273,17,"logout"],[242,26,273,17],[242,31,273,44],[243,6,274,4],[243,10,274,8],[244,8,275,6],[244,14,275,12,"SecureStorageService"],[244,27,275,32],[244,28,275,32,"SecureStorageService"],[244,48,275,32],[244,49,275,33,"clearAllData"],[244,61,275,45],[244,62,275,46],[244,63,275,47],[245,8,276,6,"setUser"],[245,15,276,13],[245,16,276,14],[245,20,276,18],[245,21,276,19],[246,8,277,6,"setMasterKeyState"],[246,25,277,23],[246,26,277,24],[246,30,277,28],[246,31,277,29],[247,6,278,4],[247,7,278,5],[247,8,278,6],[247,15,278,13,"error"],[247,20,278,18],[247,22,278,20],[248,8,279,6,"console"],[248,15,279,13],[248,16,279,14,"error"],[248,21,279,19],[248,22,279,20],[248,37,279,35],[248,39,279,37,"error"],[248,44,279,42],[248,45,279,43],[249,6,280,4],[250,4,281,2],[250,5,281,3],[251,4,283,2],[251,10,283,8,"setMasterKey"],[251,22,283,20],[251,25,283,24,"key"],[251,28,283,35],[251,32,283,40],[252,6,284,4,"setMasterKeyState"],[252,23,284,21],[252,24,284,22,"key"],[252,27,284,25],[252,28,284,26],[253,4,285,2],[253,5,285,3],[254,4,287,2],[254,10,287,8,"setBiometricRecovery"],[254,30,287,28],[254,33,287,31],[254,39,287,38,"enabled"],[254,46,287,54],[254,50,287,74],[255,6,288,4],[255,10,288,8],[256,8,289,6],[256,12,289,10,"enabled"],[256,19,289,17],[256,23,289,21,"masterKey"],[256,32,289,30],[256,34,289,32],[257,10,290,8],[257,16,290,14,"SecureStorageService"],[257,29,290,34],[257,30,290,34,"SecureStorageService"],[257,50,290,34],[257,51,290,35,"storeBiometricKey"],[257,68,290,52],[257,69,290,53,"masterKey"],[257,78,290,62],[257,79,290,63],[258,8,291,6],[259,8,292,6],[259,14,292,12,"SecureStorageService"],[259,27,292,32],[259,28,292,32,"SecureStorageService"],[259,48,292,32],[259,49,292,33,"setBiometricEnabled"],[259,68,292,52],[259,69,292,53,"enabled"],[259,76,292,60],[259,77,292,61],[260,8,294,6],[260,12,294,10,"user"],[260,16,294,14],[260,18,294,16],[261,10,295,8,"setUser"],[261,17,295,15],[261,18,295,16],[262,12,295,18],[262,15,295,21,"user"],[262,19,295,25],[263,12,295,27,"biometric_enabled"],[263,29,295,44],[263,31,295,46,"enabled"],[264,10,295,54],[264,11,295,55],[264,12,295,56],[265,8,296,6],[266,6,297,4],[266,7,297,5],[266,8,297,6],[266,15,297,13,"error"],[266,20,297,18],[266,22,297,20],[267,8,298,6,"console"],[267,15,298,13],[267,16,298,14,"error"],[267,21,298,19],[267,22,298,20],[267,46,298,44],[267,48,298,46,"error"],[267,53,298,51],[267,54,298,52],[268,8,299,6],[268,14,299,12,"error"],[268,19,299,17],[269,6,300,4],[270,4,301,2],[270,5,301,3],[271,4,303,2],[271,10,303,8,"value"],[271,15,303,30],[271,18,303,33],[272,6,304,4,"user"],[272,10,304,8],[273,6,305,4,"isLoading"],[273,15,305,13],[274,6,306,4,"isFirstTime"],[274,17,306,15],[275,6,307,4,"masterKey"],[275,15,307,13],[276,6,308,4,"login"],[276,11,308,9],[277,6,309,4,"register"],[277,14,309,12],[278,6,310,4,"logout"],[278,12,310,10],[279,6,311,4,"setMasterKey"],[279,18,311,16],[280,6,312,4,"setBiometricRecovery"],[281,4,313,2],[281,5,313,3],[282,4,315,2],[282,24,315,9],[282,28,315,9,"_reactJsxDevRuntime"],[282,47,315,9],[282,48,315,9,"jsxDEV"],[282,54,315,9],[282,56,315,10,"AuthContext"],[282,67,315,21],[282,68,315,22,"Provider"],[282,76,315,30],[283,6,315,31,"value"],[283,11,315,36],[283,13,315,38,"value"],[283,18,315,44],[284,6,315,44,"children"],[284,14,315,44],[284,16,315,46,"children"],[285,4,315,54],[286,6,315,54,"fileName"],[286,14,315,54],[286,16,315,54,"_jsxFileName"],[286,28,315,54],[287,6,315,54,"lineNumber"],[287,16,315,54],[288,6,315,54,"columnNumber"],[288,18,315,54],[289,4,315,54],[289,11,315,77],[289,12,315,78],[290,2,316,0],[290,3,316,1],[291,2,316,2,"_s"],[291,4,316,2],[291,5,34,13,"AuthProvider"],[291,17,34,54],[292,2,34,54,"_c"],[292,4,34,54],[292,7,34,13,"AuthProvider"],[292,19,34,54],[293,2,318,7],[293,8,318,13,"useAuth"],[293,15,318,20],[293,18,318,23,"useAuth"],[293,19,318,23],[293,24,318,46],[294,4,318,46,"_s2"],[294,7,318,46],[295,4,319,2],[295,10,319,8,"context"],[295,17,319,15],[295,20,319,18],[295,24,319,18,"useContext"],[295,30,319,28],[295,31,319,28,"useContext"],[295,41,319,28],[295,43,319,29,"AuthContext"],[295,54,319,40],[295,55,319,41],[296,4,320,2],[296,8,320,6,"context"],[296,15,320,13],[296,20,320,18,"undefined"],[296,29,320,27],[296,31,320,29],[297,6,321,4],[297,12,321,10],[297,16,321,14,"Error"],[297,21,321,19],[297,22,321,20],[297,67,321,65],[297,68,321,66],[298,4,322,2],[299,4,323,2],[299,11,323,9,"context"],[299,18,323,16],[300,2,324,0],[300,3,324,1],[301,2,324,2,"_s2"],[301,5,324,2],[301,6,318,13,"useAuth"],[301,13,318,20],[302,2,318,20],[302,6,318,20,"_c"],[302,8,318,20],[303,2,318,20,"$RefreshReg$"],[303,14,318,20],[303,15,318,20,"_c"],[303,17,318,20],[304,0,318,20],[304,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFqE;mBGE;GHuE;gBIE;GJmF;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"},"hasCjsExports":false},"type":"js/module"}]}