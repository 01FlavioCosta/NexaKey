{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _utilsStorage = require(_dependencyMap[2], \"../utils/storage\");\n  var _utilsEncryption = require(_dependencyMap[3], \"../utils/encryption\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        console.log('üîç Initializing auth...');\n\n        // Always check for existing user data first\n        const userData = await _utilsStorage.SecureStorageService.getUserData();\n        const token = await _utilsStorage.SecureStorageService.getAccessToken();\n        console.log('üì± Storage check:', {\n          hasUserData: !!userData,\n          hasToken: !!token,\n          userEmail: userData?.email\n        });\n\n        // If we have both user data and token, try to validate\n        if (userData && token) {\n          console.log('üîë Found existing auth data, validating...');\n          try {\n            const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              }\n            });\n            if (response.ok) {\n              const userProfile = await response.json();\n              console.log('‚úÖ Token valid, restoring user session');\n              setUser(userProfile);\n\n              // Try to restore master key\n              const storedKey = await _utilsStorage.SecureStorageService.getMasterKey();\n              if (storedKey) {\n                setMasterKeyState(storedKey);\n                console.log('üîê Master key restored');\n              }\n\n              // User is logged in, skip onboarding\n              setIsFirstTime(false);\n              setIsLoading(false);\n              return;\n            } else {\n              console.log('‚ùå Token invalid, clearing data');\n              await _utilsStorage.SecureStorageService.clearAllData();\n            }\n          } catch (error) {\n            console.error('üö® Token validation failed:', error);\n            await _utilsStorage.SecureStorageService.clearAllData();\n          }\n        }\n\n        // Check if this is truly first time (no user data at all)\n        if (!userData) {\n          console.log('üëã First time user, showing onboarding');\n          setIsFirstTime(true);\n        } else {\n          console.log('üîí Existing user, showing login');\n          setIsFirstTime(false);\n        }\n      } catch (error) {\n        console.error('üí• Auth initialization error:', error);\n        // On error, show onboarding to be safe\n        setIsFirstTime(true);\n      } finally {\n        setIsLoading(false);\n        console.log('‚úÖ Auth initialization complete');\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _utilsEncryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        console.log('Registering user with email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        const responseText = await response.text();\n        console.log('Registration response:', response.status, responseText);\n        if (!response.ok) {\n          let errorMessage = 'Falha no registro';\n          try {\n            const error = JSON.parse(responseText);\n            errorMessage = error.detail || errorMessage;\n          } catch (parseError) {\n            console.error('Error parsing response:', parseError);\n            errorMessage = `Erro ${response.status}: ${responseText}`;\n          }\n          throw new Error(errorMessage);\n        }\n        const data = JSON.parse(responseText);\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeUserSalt(salt);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n        console.log('Registration successful for:', email);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        console.log('Starting login process for:', email);\n\n        // Get stored salt - this is critical for consistency\n        let salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          console.log('No salt found, generating new one');\n          // If no salt is stored, we need to handle this case\n          // For now, let's try with a fallback approach\n          Alert.alert('Dados N√£o Encontrados', 'N√£o foi poss√≠vel encontrar os dados de login. Voc√™ precisar√° se registrar novamente.', [{\n            text: 'OK'\n          }]);\n          setIsFirstTime(true);\n          return;\n        }\n        console.log('Using stored salt for login');\n\n        // Hash password for server verification - ensure consistency\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key - must be identical to registration\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        console.log('Attempting login with hashed password');\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        const responseText = await response.text();\n        console.log('Login response:', response.status, responseText);\n        if (!response.ok) {\n          let errorMessage = 'Credenciais inv√°lidas';\n          try {\n            const error = JSON.parse(responseText);\n            errorMessage = error.detail || errorMessage;\n          } catch (parseError) {\n            console.error('Error parsing login response:', parseError);\n          }\n          if (response.status === 401) {\n            // Clear potentially corrupted data\n            console.log('Login failed - clearing stored data');\n            await _utilsStorage.SecureStorageService.clearAllData();\n            setIsFirstTime(true);\n            errorMessage = 'Credenciais inv√°lidas. Dados locais foram limpos. Tente se registrar novamente.';\n          }\n          throw new Error(errorMessage);\n        }\n        const data = JSON.parse(responseText);\n        console.log('Login successful');\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        console.log('Login completed successfully');\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _utilsStorage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser({\n            ...user,\n            biometric_enabled: enabled\n          });\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 10\n    }, this);\n  };\n  _s(AuthProvider, \"mGwwgojCgQ3U20j04pMnc9audNY=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":300,"map":[[10,2,34,0,"Object"],[10,8,34,0],[10,9,34,0,"defineProperty"],[10,23,34,0],[10,24,34,0,"exports"],[10,31,34,0],[11,4,34,0,"enumerable"],[11,14,34,0],[12,4,34,0,"get"],[12,7,34,0],[12,18,34,0,"get"],[12,19,34,0],[13,6,34,0],[13,13,34,0,"AuthProvider"],[13,25,34,0],[14,4,34,0],[15,2,34,0],[16,2,319,0,"Object"],[16,8,319,0],[16,9,319,0,"defineProperty"],[16,23,319,0],[16,24,319,0,"exports"],[16,31,319,0],[17,4,319,0,"enumerable"],[17,14,319,0],[18,4,319,0,"get"],[18,7,319,0],[18,18,319,0,"get"],[18,19,319,0],[19,6,319,0],[19,13,319,0,"useAuth"],[19,20,319,0],[20,4,319,0],[21,2,319,0],[22,2,325,2],[22,6,325,2,"_expoVirtualEnv"],[22,21,325,2],[22,24,325,2,"require"],[22,31,325,2],[22,32,325,2,"_dependencyMap"],[22,46,325,2],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_utilsStorage"],[24,19,2,0],[24,22,2,0,"require"],[24,29,2,0],[24,30,2,0,"_dependencyMap"],[24,44,2,0],[25,2,3,0],[25,6,3,0,"_utilsEncryption"],[25,22,3,0],[25,25,3,0,"require"],[25,32,3,0],[25,33,3,0,"_dependencyMap"],[25,47,3,0],[26,2,3,56],[26,6,3,56,"_reactJsxDevRuntime"],[26,25,3,56],[26,28,3,56,"require"],[26,35,3,56],[26,36,3,56,"_dependencyMap"],[26,50,3,56],[27,2,26,0],[27,8,26,6,"AuthContext"],[27,19,26,17],[27,35,26,20],[27,39,26,20,"createContext"],[27,45,26,33],[27,46,26,33,"createContext"],[27,59,26,33],[27,61,26,63,"undefined"],[27,70,26,72],[27,71,26,73],[28,2,32,0],[28,8,32,6,"API_BASE_URL"],[28,20,32,18],[28,23,32,21,"_expoVirtualEnv"],[28,38,32,21],[28,39,32,21,"env"],[28,42,32,21],[28,43,32,21,"EXPO_PUBLIC_BACKEND_URL"],[28,66,32,21],[28,70,32,60],[28,72,32,62],[29,2,34,7],[29,8,34,13,"AuthProvider"],[29,20,34,54],[29,23,34,57,"AuthProvider"],[29,24,34,58],[30,4,34,60,"children"],[31,2,34,69],[31,3,34,70],[31,8,34,75],[32,4,34,75,"_s"],[32,6,34,75],[33,4,35,2],[33,10,35,8],[33,11,35,9,"user"],[33,15,35,13],[33,17,35,15,"setUser"],[33,24,35,22],[33,25,35,23],[33,28,35,26],[33,32,35,26,"useState"],[33,38,35,34],[33,39,35,34,"useState"],[33,47,35,34],[33,49,35,48],[33,53,35,52],[33,54,35,53],[34,4,36,2],[34,10,36,8],[34,11,36,9,"isLoading"],[34,20,36,18],[34,22,36,20,"setIsLoading"],[34,34,36,32],[34,35,36,33],[34,38,36,36],[34,42,36,36,"useState"],[34,48,36,44],[34,49,36,44,"useState"],[34,57,36,44],[34,59,36,45],[34,63,36,49],[34,64,36,50],[35,4,37,2],[35,10,37,8],[35,11,37,9,"isFirstTime"],[35,22,37,20],[35,24,37,22,"setIsFirstTime"],[35,38,37,36],[35,39,37,37],[35,42,37,40],[35,46,37,40,"useState"],[35,52,37,48],[35,53,37,48,"useState"],[35,61,37,48],[35,63,37,49],[35,68,37,54],[35,69,37,55],[36,4,38,2],[36,10,38,8],[36,11,38,9,"masterKey"],[36,20,38,18],[36,22,38,20,"setMasterKeyState"],[36,39,38,37],[36,40,38,38],[36,43,38,41],[36,47,38,41,"useState"],[36,53,38,49],[36,54,38,49,"useState"],[36,62,38,49],[36,64,38,65],[36,68,38,69],[36,69,38,70],[37,4,40,2],[37,8,40,2,"useEffect"],[37,14,40,11],[37,15,40,11,"useEffect"],[37,24,40,11],[37,26,40,12],[37,32,40,18],[38,6,41,4,"initializeAuth"],[38,20,41,18],[38,21,41,19],[38,22,41,20],[39,4,42,2],[39,5,42,3],[39,7,42,5],[39,9,42,7],[39,10,42,8],[40,4,44,2],[40,10,44,8,"initializeAuth"],[40,24,44,22],[40,27,44,25],[40,33,44,25,"initializeAuth"],[40,34,44,25],[40,39,44,37],[41,6,45,4],[41,10,45,8],[42,8,46,6,"console"],[42,15,46,13],[42,16,46,14,"log"],[42,19,46,17],[42,20,46,18],[42,45,46,43],[42,46,46,44],[44,8,48,6],[45,8,49,6],[45,14,49,12,"userData"],[45,22,49,20],[45,25,49,23],[45,31,49,29,"SecureStorageService"],[45,44,49,49],[45,45,49,49,"SecureStorageService"],[45,65,49,49],[45,66,49,50,"getUserData"],[45,77,49,61],[45,78,49,62],[45,79,49,63],[46,8,50,6],[46,14,50,12,"token"],[46,19,50,17],[46,22,50,20],[46,28,50,26,"SecureStorageService"],[46,41,50,46],[46,42,50,46,"SecureStorageService"],[46,62,50,46],[46,63,50,47,"getAccessToken"],[46,77,50,61],[46,78,50,62],[46,79,50,63],[47,8,52,6,"console"],[47,15,52,13],[47,16,52,14,"log"],[47,19,52,17],[47,20,52,18],[47,39,52,37],[47,41,52,39],[48,10,53,8,"hasUserData"],[48,21,53,19],[48,23,53,21],[48,24,53,22],[48,25,53,23,"userData"],[48,33,53,31],[49,10,54,8,"hasToken"],[49,18,54,16],[49,20,54,18],[49,21,54,19],[49,22,54,20,"token"],[49,27,54,25],[50,10,55,8,"userEmail"],[50,19,55,17],[50,21,55,19,"userData"],[50,29,55,27],[50,31,55,29,"email"],[51,8,56,6],[51,9,56,7],[51,10,56,8],[53,8,58,6],[54,8,59,6],[54,12,59,10,"userData"],[54,20,59,18],[54,24,59,22,"token"],[54,29,59,27],[54,31,59,29],[55,10,60,8,"console"],[55,17,60,15],[55,18,60,16,"log"],[55,21,60,19],[55,22,60,20],[55,66,60,64],[55,67,60,65],[56,10,62,8],[56,14,62,12],[57,12,63,10],[57,18,63,16,"response"],[57,26,63,24],[57,29,63,27],[57,35,63,33,"fetch"],[57,40,63,38],[57,41,63,39],[57,44,63,42,"API_BASE_URL"],[57,56,63,54],[57,75,63,73],[57,77,63,75],[58,14,64,12,"headers"],[58,21,64,19],[58,23,64,21],[59,16,65,14],[59,31,65,29],[59,33,65,31],[59,43,65,41,"token"],[59,48,65,46],[59,50,65,48],[60,16,66,14],[60,30,66,28],[60,32,66,30],[61,14,67,12],[62,12,68,10],[62,13,68,11],[62,14,68,12],[63,12,70,10],[63,16,70,14,"response"],[63,24,70,22],[63,25,70,23,"ok"],[63,27,70,25],[63,29,70,27],[64,14,71,12],[64,20,71,18,"userProfile"],[64,31,71,29],[64,34,71,32],[64,40,71,38,"response"],[64,48,71,46],[64,49,71,47,"json"],[64,53,71,51],[64,54,71,52],[64,55,71,53],[65,14,72,12,"console"],[65,21,72,19],[65,22,72,20,"log"],[65,25,72,23],[65,26,72,24],[65,65,72,63],[65,66,72,64],[66,14,74,12,"setUser"],[66,21,74,19],[66,22,74,20,"userProfile"],[66,33,74,31],[66,34,74,32],[68,14,76,12],[69,14,77,12],[69,20,77,18,"storedKey"],[69,29,77,27],[69,32,77,30],[69,38,77,36,"SecureStorageService"],[69,51,77,56],[69,52,77,56,"SecureStorageService"],[69,72,77,56],[69,73,77,57,"getMasterKey"],[69,85,77,69],[69,86,77,70],[69,87,77,71],[70,14,78,12],[70,18,78,16,"storedKey"],[70,27,78,25],[70,29,78,27],[71,16,79,14,"setMasterKeyState"],[71,33,79,31],[71,34,79,32,"storedKey"],[71,43,79,41],[71,44,79,42],[72,16,80,14,"console"],[72,23,80,21],[72,24,80,22,"log"],[72,27,80,25],[72,28,80,26],[72,52,80,50],[72,53,80,51],[73,14,81,12],[75,14,83,12],[76,14,84,12,"setIsFirstTime"],[76,28,84,26],[76,29,84,27],[76,34,84,32],[76,35,84,33],[77,14,85,12,"setIsLoading"],[77,26,85,24],[77,27,85,25],[77,32,85,30],[77,33,85,31],[78,14,86,12],[79,12,87,10],[79,13,87,11],[79,19,87,17],[80,14,88,12,"console"],[80,21,88,19],[80,22,88,20,"log"],[80,25,88,23],[80,26,88,24],[80,58,88,56],[80,59,88,57],[81,14,89,12],[81,20,89,18,"SecureStorageService"],[81,33,89,38],[81,34,89,38,"SecureStorageService"],[81,54,89,38],[81,55,89,39,"clearAllData"],[81,67,89,51],[81,68,89,52],[81,69,89,53],[82,12,90,10],[83,10,91,8],[83,11,91,9],[83,12,91,10],[83,19,91,17,"error"],[83,24,91,22],[83,26,91,24],[84,12,92,10,"console"],[84,19,92,17],[84,20,92,18,"error"],[84,25,92,23],[84,26,92,24],[84,55,92,53],[84,57,92,55,"error"],[84,62,92,60],[84,63,92,61],[85,12,93,10],[85,18,93,16,"SecureStorageService"],[85,31,93,36],[85,32,93,36,"SecureStorageService"],[85,52,93,36],[85,53,93,37,"clearAllData"],[85,65,93,49],[85,66,93,50],[85,67,93,51],[86,10,94,8],[87,8,95,6],[89,8,97,6],[90,8,98,6],[90,12,98,10],[90,13,98,11,"userData"],[90,21,98,19],[90,23,98,21],[91,10,99,8,"console"],[91,17,99,15],[91,18,99,16,"log"],[91,21,99,19],[91,22,99,20],[91,62,99,60],[91,63,99,61],[92,10,100,8,"setIsFirstTime"],[92,24,100,22],[92,25,100,23],[92,29,100,27],[92,30,100,28],[93,8,101,6],[93,9,101,7],[93,15,101,13],[94,10,102,8,"console"],[94,17,102,15],[94,18,102,16,"log"],[94,21,102,19],[94,22,102,20],[94,55,102,53],[94,56,102,54],[95,10,103,8,"setIsFirstTime"],[95,24,103,22],[95,25,103,23],[95,30,103,28],[95,31,103,29],[96,8,104,6],[97,6,106,4],[97,7,106,5],[97,8,106,6],[97,15,106,13,"error"],[97,20,106,18],[97,22,106,20],[98,8,107,6,"console"],[98,15,107,13],[98,16,107,14,"error"],[98,21,107,19],[98,22,107,20],[98,53,107,51],[98,55,107,53,"error"],[98,60,107,58],[98,61,107,59],[99,8,108,6],[100,8,109,6,"setIsFirstTime"],[100,22,109,20],[100,23,109,21],[100,27,109,25],[100,28,109,26],[101,6,110,4],[101,7,110,5],[101,16,110,14],[102,8,111,6,"setIsLoading"],[102,20,111,18],[102,21,111,19],[102,26,111,24],[102,27,111,25],[103,8,112,6,"console"],[103,15,112,13],[103,16,112,14,"log"],[103,19,112,17],[103,20,112,18],[103,52,112,50],[103,53,112,51],[104,6,113,4],[105,4,114,2],[105,5,114,3],[106,4,116,2],[106,10,116,8,"register"],[106,18,116,16],[106,21,116,19],[106,27,116,19,"register"],[106,28,117,4,"email"],[106,33,117,17],[106,35,118,4,"password"],[106,43,118,20],[106,45,119,4,"biometricEnabled"],[106,61,119,29],[106,66,120,22],[107,6,121,4],[107,10,121,8],[108,8,122,6,"setIsLoading"],[108,20,122,18],[108,21,122,19],[108,25,122,23],[108,26,122,24],[110,8,124,6],[111,8,125,6],[111,14,125,12,"salt"],[111,18,125,16],[111,21,125,19,"EncryptionService"],[111,37,125,36],[111,38,125,36,"EncryptionService"],[111,55,125,36],[111,56,125,37,"generateSalt"],[111,68,125,49],[111,69,125,50],[111,70,125,51],[113,8,127,6],[114,8,128,6],[114,14,128,12,"masterPasswordHash"],[114,32,128,30],[114,35,128,33],[114,41,128,39,"EncryptionService"],[114,57,128,56],[114,58,128,56,"EncryptionService"],[114,75,128,56],[114,76,128,57,"hashMasterPassword"],[114,94,128,75],[114,95,128,76,"password"],[114,103,128,84],[114,105,128,86,"salt"],[114,109,128,90],[114,110,128,91],[116,8,130,6],[117,8,131,6],[117,14,131,12,"encryptionKey"],[117,27,131,25],[117,30,131,28],[117,36,131,34,"EncryptionService"],[117,52,131,51],[117,53,131,51,"EncryptionService"],[117,70,131,51],[117,71,131,52,"deriveKey"],[117,80,131,61],[117,81,131,62,"password"],[117,89,131,70],[117,91,131,72,"salt"],[117,95,131,76],[117,96,131,77],[118,8,133,6,"console"],[118,15,133,13],[118,16,133,14,"log"],[118,19,133,17],[118,20,133,18],[118,50,133,48],[118,52,133,50,"email"],[118,57,133,55],[118,58,133,56],[119,8,135,6],[119,14,135,12,"response"],[119,22,135,20],[119,25,135,23],[119,31,135,29,"fetch"],[119,36,135,34],[119,37,135,35],[119,40,135,38,"API_BASE_URL"],[119,52,135,50],[119,72,135,70],[119,74,135,72],[120,10,136,8,"method"],[120,16,136,14],[120,18,136,16],[120,24,136,22],[121,10,137,8,"headers"],[121,17,137,15],[121,19,137,17],[122,12,138,10],[122,26,138,24],[122,28,138,26],[123,10,139,8],[123,11,139,9],[124,10,140,8,"body"],[124,14,140,12],[124,16,140,14,"JSON"],[124,20,140,18],[124,21,140,19,"stringify"],[124,30,140,28],[124,31,140,29],[125,12,141,10,"email"],[125,17,141,15],[126,12,142,10,"master_password_hash"],[126,32,142,30],[126,34,142,32,"masterPasswordHash"],[126,52,142,50],[127,12,143,10,"biometric_enabled"],[127,29,143,27],[127,31,143,29,"biometricEnabled"],[128,10,144,8],[128,11,144,9],[129,8,145,6],[129,9,145,7],[129,10,145,8],[130,8,147,6],[130,14,147,12,"responseText"],[130,26,147,24],[130,29,147,27],[130,35,147,33,"response"],[130,43,147,41],[130,44,147,42,"text"],[130,48,147,46],[130,49,147,47],[130,50,147,48],[131,8,148,6,"console"],[131,15,148,13],[131,16,148,14,"log"],[131,19,148,17],[131,20,148,18],[131,44,148,42],[131,46,148,44,"response"],[131,54,148,52],[131,55,148,53,"status"],[131,61,148,59],[131,63,148,61,"responseText"],[131,75,148,73],[131,76,148,74],[132,8,150,6],[132,12,150,10],[132,13,150,11,"response"],[132,21,150,19],[132,22,150,20,"ok"],[132,24,150,22],[132,26,150,24],[133,10,151,8],[133,14,151,12,"errorMessage"],[133,26,151,24],[133,29,151,27],[133,48,151,46],[134,10,152,8],[134,14,152,12],[135,12,153,10],[135,18,153,16,"error"],[135,23,153,21],[135,26,153,24,"JSON"],[135,30,153,28],[135,31,153,29,"parse"],[135,36,153,34],[135,37,153,35,"responseText"],[135,49,153,47],[135,50,153,48],[136,12,154,10,"errorMessage"],[136,24,154,22],[136,27,154,25,"error"],[136,32,154,30],[136,33,154,31,"detail"],[136,39,154,37],[136,43,154,41,"errorMessage"],[136,55,154,53],[137,10,155,8],[137,11,155,9],[137,12,155,10],[137,19,155,17,"parseError"],[137,29,155,27],[137,31,155,29],[138,12,156,10,"console"],[138,19,156,17],[138,20,156,18,"error"],[138,25,156,23],[138,26,156,24],[138,51,156,49],[138,53,156,51,"parseError"],[138,63,156,61],[138,64,156,62],[139,12,157,10,"errorMessage"],[139,24,157,22],[139,27,157,25],[139,35,157,33,"response"],[139,43,157,41],[139,44,157,42,"status"],[139,50,157,48],[139,55,157,53,"responseText"],[139,67,157,65],[139,69,157,67],[140,10,158,8],[141,10,159,8],[141,16,159,14],[141,20,159,18,"Error"],[141,25,159,23],[141,26,159,24,"errorMessage"],[141,38,159,36],[141,39,159,37],[142,8,160,6],[143,8,162,6],[143,14,162,12,"data"],[143,18,162,16],[143,21,162,19,"JSON"],[143,25,162,23],[143,26,162,24,"parse"],[143,31,162,29],[143,32,162,30,"responseText"],[143,44,162,42],[143,45,162,43],[145,8,164,6],[146,8,165,6],[146,14,165,12,"SecureStorageService"],[146,27,165,32],[146,28,165,32,"SecureStorageService"],[146,48,165,32],[146,49,165,33,"storeAccessToken"],[146,65,165,49],[146,66,165,50,"data"],[146,70,165,54],[146,71,165,55,"access_token"],[146,83,165,67],[146,84,165,68],[147,8,166,6],[147,14,166,12,"SecureStorageService"],[147,27,166,32],[147,28,166,32,"SecureStorageService"],[147,48,166,32],[147,49,166,33,"storeUserData"],[147,62,166,46],[147,63,166,47,"data"],[147,67,166,51],[147,68,166,52,"user"],[147,72,166,56],[147,73,166,57],[148,8,167,6],[148,14,167,12,"SecureStorageService"],[148,27,167,32],[148,28,167,32,"SecureStorageService"],[148,48,167,32],[148,49,167,33,"storeUserSalt"],[148,62,167,46],[148,63,167,47,"salt"],[148,67,167,51],[148,68,167,52],[149,8,168,6],[149,14,168,12,"SecureStorageService"],[149,27,168,32],[149,28,168,32,"SecureStorageService"],[149,48,168,32],[149,49,168,33,"storeMasterKey"],[149,63,168,47],[149,64,168,48,"encryptionKey"],[149,77,168,61],[149,78,168,62],[150,8,169,6],[150,14,169,12,"SecureStorageService"],[150,27,169,32],[150,28,169,32,"SecureStorageService"],[150,48,169,32],[150,49,169,33,"setBiometricEnabled"],[150,68,169,52],[150,69,169,53,"biometricEnabled"],[150,85,169,69],[150,86,169,70],[152,8,171,6],[153,8,172,6],[153,12,172,10,"biometricEnabled"],[153,28,172,26],[153,30,172,28],[154,10,173,8],[154,16,173,14,"SecureStorageService"],[154,29,173,34],[154,30,173,34,"SecureStorageService"],[154,50,173,34],[154,51,173,35,"storeBiometricKey"],[154,68,173,52],[154,69,173,53,"encryptionKey"],[154,82,173,66],[154,83,173,67],[155,8,174,6],[156,8,176,6,"setUser"],[156,15,176,13],[156,16,176,14,"data"],[156,20,176,18],[156,21,176,19,"user"],[156,25,176,23],[156,26,176,24],[157,8,177,6,"setMasterKeyState"],[157,25,177,23],[157,26,177,24,"encryptionKey"],[157,39,177,37],[157,40,177,38],[158,8,178,6,"setIsFirstTime"],[158,22,178,20],[158,23,178,21],[158,28,178,26],[158,29,178,27],[159,8,180,6,"console"],[159,15,180,13],[159,16,180,14,"log"],[159,19,180,17],[159,20,180,18],[159,50,180,48],[159,52,180,50,"email"],[159,57,180,55],[159,58,180,56],[160,6,181,4],[160,7,181,5],[160,8,181,6],[160,15,181,13,"error"],[160,20,181,18],[160,22,181,20],[161,8,182,6,"console"],[161,15,182,13],[161,16,182,14,"error"],[161,21,182,19],[161,22,182,20],[161,43,182,41],[161,45,182,43,"error"],[161,50,182,48],[161,51,182,49],[162,8,183,6],[162,14,183,12,"error"],[162,19,183,17],[163,6,184,4],[163,7,184,5],[163,16,184,14],[164,8,185,6,"setIsLoading"],[164,20,185,18],[164,21,185,19],[164,26,185,24],[164,27,185,25],[165,6,186,4],[166,4,187,2],[166,5,187,3],[167,4,189,2],[167,10,189,8,"login"],[167,15,189,13],[167,18,189,16],[167,24,189,16,"login"],[167,25,189,23,"email"],[167,30,189,36],[167,32,189,38,"password"],[167,40,189,54],[167,45,189,74],[168,6,190,4],[168,10,190,8],[169,8,191,6,"setIsLoading"],[169,20,191,18],[169,21,191,19],[169,25,191,23],[169,26,191,24],[170,8,192,6,"console"],[170,15,192,13],[170,16,192,14,"log"],[170,19,192,17],[170,20,192,18],[170,49,192,47],[170,51,192,49,"email"],[170,56,192,54],[170,57,192,55],[172,8,194,6],[173,8,195,6],[173,12,195,10,"salt"],[173,16,195,14],[173,19,195,17],[173,25,195,23,"SecureStorageService"],[173,38,195,43],[173,39,195,43,"SecureStorageService"],[173,59,195,43],[173,60,195,44,"getUserSalt"],[173,71,195,55],[173,72,195,56],[173,73,195,57],[174,8,197,6],[174,12,197,10],[174,13,197,11,"salt"],[174,17,197,15],[174,19,197,17],[175,10,198,8,"console"],[175,17,198,15],[175,18,198,16,"log"],[175,21,198,19],[175,22,198,20],[175,57,198,55],[175,58,198,56],[176,10,199,8],[177,10,200,8],[178,10,201,8,"Alert"],[178,15,201,13],[178,16,201,14,"alert"],[178,21,201,19],[178,22,202,10],[178,45,202,33],[178,47,203,10],[178,133,203,96],[178,135,204,10],[178,136,204,11],[179,12,204,13,"text"],[179,16,204,17],[179,18,204,19],[180,10,204,24],[180,11,204,25],[180,12,205,8],[180,13,205,9],[181,10,206,8,"setIsFirstTime"],[181,24,206,22],[181,25,206,23],[181,29,206,27],[181,30,206,28],[182,10,207,8],[183,8,208,6],[184,8,210,6,"console"],[184,15,210,13],[184,16,210,14,"log"],[184,19,210,17],[184,20,210,18],[184,49,210,47],[184,50,210,48],[186,8,212,6],[187,8,213,6],[187,14,213,12,"masterPasswordHash"],[187,32,213,30],[187,35,213,33],[187,41,213,39,"EncryptionService"],[187,57,213,56],[187,58,213,56,"EncryptionService"],[187,75,213,56],[187,76,213,57,"hashMasterPassword"],[187,94,213,75],[187,95,213,76,"password"],[187,103,213,84],[187,105,213,86,"salt"],[187,109,213,90],[187,110,213,91],[189,8,215,6],[190,8,216,6],[190,14,216,12,"encryptionKey"],[190,27,216,25],[190,30,216,28],[190,36,216,34,"EncryptionService"],[190,52,216,51],[190,53,216,51,"EncryptionService"],[190,70,216,51],[190,71,216,52,"deriveKey"],[190,80,216,61],[190,81,216,62,"password"],[190,89,216,70],[190,91,216,72,"salt"],[190,95,216,76],[190,96,216,77],[191,8,218,6,"console"],[191,15,218,13],[191,16,218,14,"log"],[191,19,218,17],[191,20,218,18],[191,59,218,57],[191,60,218,58],[192,8,220,6],[192,14,220,12,"response"],[192,22,220,20],[192,25,220,23],[192,31,220,29,"fetch"],[192,36,220,34],[192,37,220,35],[192,40,220,38,"API_BASE_URL"],[192,52,220,50],[192,69,220,67],[192,71,220,69],[193,10,221,8,"method"],[193,16,221,14],[193,18,221,16],[193,24,221,22],[194,10,222,8,"headers"],[194,17,222,15],[194,19,222,17],[195,12,223,10],[195,26,223,24],[195,28,223,26],[196,10,224,8],[196,11,224,9],[197,10,225,8,"body"],[197,14,225,12],[197,16,225,14,"JSON"],[197,20,225,18],[197,21,225,19,"stringify"],[197,30,225,28],[197,31,225,29],[198,12,226,10,"email"],[198,17,226,15],[199,12,227,10,"master_password_hash"],[199,32,227,30],[199,34,227,32,"masterPasswordHash"],[200,10,228,8],[200,11,228,9],[201,8,229,6],[201,9,229,7],[201,10,229,8],[202,8,231,6],[202,14,231,12,"responseText"],[202,26,231,24],[202,29,231,27],[202,35,231,33,"response"],[202,43,231,41],[202,44,231,42,"text"],[202,48,231,46],[202,49,231,47],[202,50,231,48],[203,8,232,6,"console"],[203,15,232,13],[203,16,232,14,"log"],[203,19,232,17],[203,20,232,18],[203,37,232,35],[203,39,232,37,"response"],[203,47,232,45],[203,48,232,46,"status"],[203,54,232,52],[203,56,232,54,"responseText"],[203,68,232,66],[203,69,232,67],[204,8,234,6],[204,12,234,10],[204,13,234,11,"response"],[204,21,234,19],[204,22,234,20,"ok"],[204,24,234,22],[204,26,234,24],[205,10,235,8],[205,14,235,12,"errorMessage"],[205,26,235,24],[205,29,235,27],[205,52,235,50],[206,10,236,8],[206,14,236,12],[207,12,237,10],[207,18,237,16,"error"],[207,23,237,21],[207,26,237,24,"JSON"],[207,30,237,28],[207,31,237,29,"parse"],[207,36,237,34],[207,37,237,35,"responseText"],[207,49,237,47],[207,50,237,48],[208,12,238,10,"errorMessage"],[208,24,238,22],[208,27,238,25,"error"],[208,32,238,30],[208,33,238,31,"detail"],[208,39,238,37],[208,43,238,41,"errorMessage"],[208,55,238,53],[209,10,239,8],[209,11,239,9],[209,12,239,10],[209,19,239,17,"parseError"],[209,29,239,27],[209,31,239,29],[210,12,240,10,"console"],[210,19,240,17],[210,20,240,18,"error"],[210,25,240,23],[210,26,240,24],[210,57,240,55],[210,59,240,57,"parseError"],[210,69,240,67],[210,70,240,68],[211,10,241,8],[212,10,243,8],[212,14,243,12,"response"],[212,22,243,20],[212,23,243,21,"status"],[212,29,243,27],[212,34,243,32],[212,37,243,35],[212,39,243,37],[213,12,244,10],[214,12,245,10,"console"],[214,19,245,17],[214,20,245,18,"log"],[214,23,245,21],[214,24,245,22],[214,61,245,59],[214,62,245,60],[215,12,246,10],[215,18,246,16,"SecureStorageService"],[215,31,246,36],[215,32,246,36,"SecureStorageService"],[215,52,246,36],[215,53,246,37,"clearAllData"],[215,65,246,49],[215,66,246,50],[215,67,246,51],[216,12,247,10,"setIsFirstTime"],[216,26,247,24],[216,27,247,25],[216,31,247,29],[216,32,247,30],[217,12,248,10,"errorMessage"],[217,24,248,22],[217,27,248,25],[217,108,248,106],[218,10,249,8],[219,10,251,8],[219,16,251,14],[219,20,251,18,"Error"],[219,25,251,23],[219,26,251,24,"errorMessage"],[219,38,251,36],[219,39,251,37],[220,8,252,6],[221,8,254,6],[221,14,254,12,"data"],[221,18,254,16],[221,21,254,19,"JSON"],[221,25,254,23],[221,26,254,24,"parse"],[221,31,254,29],[221,32,254,30,"responseText"],[221,44,254,42],[221,45,254,43],[222,8,255,6,"console"],[222,15,255,13],[222,16,255,14,"log"],[222,19,255,17],[222,20,255,18],[222,38,255,36],[222,39,255,37],[224,8,257,6],[225,8,258,6],[225,14,258,12,"SecureStorageService"],[225,27,258,32],[225,28,258,32,"SecureStorageService"],[225,48,258,32],[225,49,258,33,"storeAccessToken"],[225,65,258,49],[225,66,258,50,"data"],[225,70,258,54],[225,71,258,55,"access_token"],[225,83,258,67],[225,84,258,68],[226,8,259,6],[226,14,259,12,"SecureStorageService"],[226,27,259,32],[226,28,259,32,"SecureStorageService"],[226,48,259,32],[226,49,259,33,"storeUserData"],[226,62,259,46],[226,63,259,47,"data"],[226,67,259,51],[226,68,259,52,"user"],[226,72,259,56],[226,73,259,57],[227,8,260,6],[227,14,260,12,"SecureStorageService"],[227,27,260,32],[227,28,260,32,"SecureStorageService"],[227,48,260,32],[227,49,260,33,"storeMasterKey"],[227,63,260,47],[227,64,260,48,"encryptionKey"],[227,77,260,61],[227,78,260,62],[228,8,262,6,"setUser"],[228,15,262,13],[228,16,262,14,"data"],[228,20,262,18],[228,21,262,19,"user"],[228,25,262,23],[228,26,262,24],[229,8,263,6,"setMasterKeyState"],[229,25,263,23],[229,26,263,24,"encryptionKey"],[229,39,263,37],[229,40,263,38],[230,8,265,6,"console"],[230,15,265,13],[230,16,265,14,"log"],[230,19,265,17],[230,20,265,18],[230,50,265,48],[230,51,265,49],[231,6,266,4],[231,7,266,5],[231,8,266,6],[231,15,266,13,"error"],[231,20,266,18],[231,22,266,20],[232,8,267,6,"console"],[232,15,267,13],[232,16,267,14,"error"],[232,21,267,19],[232,22,267,20],[232,36,267,34],[232,38,267,36,"error"],[232,43,267,41],[232,44,267,42],[233,8,268,6],[233,14,268,12,"error"],[233,19,268,17],[234,6,269,4],[234,7,269,5],[234,16,269,14],[235,8,270,6,"setIsLoading"],[235,20,270,18],[235,21,270,19],[235,26,270,24],[235,27,270,25],[236,6,271,4],[237,4,272,2],[237,5,272,3],[238,4,274,2],[238,10,274,8,"logout"],[238,16,274,14],[238,19,274,17],[238,25,274,17,"logout"],[238,26,274,17],[238,31,274,44],[239,6,275,4],[239,10,275,8],[240,8,276,6],[240,14,276,12,"SecureStorageService"],[240,27,276,32],[240,28,276,32,"SecureStorageService"],[240,48,276,32],[240,49,276,33,"clearAllData"],[240,61,276,45],[240,62,276,46],[240,63,276,47],[241,8,277,6,"setUser"],[241,15,277,13],[241,16,277,14],[241,20,277,18],[241,21,277,19],[242,8,278,6,"setMasterKeyState"],[242,25,278,23],[242,26,278,24],[242,30,278,28],[242,31,278,29],[243,6,279,4],[243,7,279,5],[243,8,279,6],[243,15,279,13,"error"],[243,20,279,18],[243,22,279,20],[244,8,280,6,"console"],[244,15,280,13],[244,16,280,14,"error"],[244,21,280,19],[244,22,280,20],[244,37,280,35],[244,39,280,37,"error"],[244,44,280,42],[244,45,280,43],[245,6,281,4],[246,4,282,2],[246,5,282,3],[247,4,284,2],[247,10,284,8,"setMasterKey"],[247,22,284,20],[247,25,284,24,"key"],[247,28,284,35],[247,32,284,40],[248,6,285,4,"setMasterKeyState"],[248,23,285,21],[248,24,285,22,"key"],[248,27,285,25],[248,28,285,26],[249,4,286,2],[249,5,286,3],[250,4,288,2],[250,10,288,8,"setBiometricRecovery"],[250,30,288,28],[250,33,288,31],[250,39,288,38,"enabled"],[250,46,288,54],[250,50,288,74],[251,6,289,4],[251,10,289,8],[252,8,290,6],[252,12,290,10,"enabled"],[252,19,290,17],[252,23,290,21,"masterKey"],[252,32,290,30],[252,34,290,32],[253,10,291,8],[253,16,291,14,"SecureStorageService"],[253,29,291,34],[253,30,291,34,"SecureStorageService"],[253,50,291,34],[253,51,291,35,"storeBiometricKey"],[253,68,291,52],[253,69,291,53,"masterKey"],[253,78,291,62],[253,79,291,63],[254,8,292,6],[255,8,293,6],[255,14,293,12,"SecureStorageService"],[255,27,293,32],[255,28,293,32,"SecureStorageService"],[255,48,293,32],[255,49,293,33,"setBiometricEnabled"],[255,68,293,52],[255,69,293,53,"enabled"],[255,76,293,60],[255,77,293,61],[256,8,295,6],[256,12,295,10,"user"],[256,16,295,14],[256,18,295,16],[257,10,296,8,"setUser"],[257,17,296,15],[257,18,296,16],[258,12,296,18],[258,15,296,21,"user"],[258,19,296,25],[259,12,296,27,"biometric_enabled"],[259,29,296,44],[259,31,296,46,"enabled"],[260,10,296,54],[260,11,296,55],[260,12,296,56],[261,8,297,6],[262,6,298,4],[262,7,298,5],[262,8,298,6],[262,15,298,13,"error"],[262,20,298,18],[262,22,298,20],[263,8,299,6,"console"],[263,15,299,13],[263,16,299,14,"error"],[263,21,299,19],[263,22,299,20],[263,46,299,44],[263,48,299,46,"error"],[263,53,299,51],[263,54,299,52],[264,8,300,6],[264,14,300,12,"error"],[264,19,300,17],[265,6,301,4],[266,4,302,2],[266,5,302,3],[267,4,304,2],[267,10,304,8,"value"],[267,15,304,30],[267,18,304,33],[268,6,305,4,"user"],[268,10,305,8],[269,6,306,4,"isLoading"],[269,15,306,13],[270,6,307,4,"isFirstTime"],[270,17,307,15],[271,6,308,4,"masterKey"],[271,15,308,13],[272,6,309,4,"login"],[272,11,309,9],[273,6,310,4,"register"],[273,14,310,12],[274,6,311,4,"logout"],[274,12,311,10],[275,6,312,4,"setMasterKey"],[275,18,312,16],[276,6,313,4,"setBiometricRecovery"],[277,4,314,2],[277,5,314,3],[278,4,316,2],[278,24,316,9],[278,28,316,9,"_reactJsxDevRuntime"],[278,47,316,9],[278,48,316,9,"jsxDEV"],[278,54,316,9],[278,56,316,10,"AuthContext"],[278,67,316,21],[278,68,316,22,"Provider"],[278,76,316,30],[279,6,316,31,"value"],[279,11,316,36],[279,13,316,38,"value"],[279,18,316,44],[280,6,316,44,"children"],[280,14,316,44],[280,16,316,46,"children"],[281,4,316,54],[282,6,316,54,"fileName"],[282,14,316,54],[282,16,316,54,"_jsxFileName"],[282,28,316,54],[283,6,316,54,"lineNumber"],[283,16,316,54],[284,6,316,54,"columnNumber"],[284,18,316,54],[285,4,316,54],[285,11,316,77],[285,12,316,78],[286,2,317,0],[286,3,317,1],[287,2,317,2,"_s"],[287,4,317,2],[287,5,34,13,"AuthProvider"],[287,17,34,54],[288,2,34,54,"_c"],[288,4,34,54],[288,7,34,13,"AuthProvider"],[288,19,34,54],[289,2,319,7],[289,8,319,13,"useAuth"],[289,15,319,20],[289,18,319,23,"useAuth"],[289,19,319,23],[289,24,319,46],[290,4,319,46,"_s2"],[290,7,319,46],[291,4,320,2],[291,10,320,8,"context"],[291,17,320,15],[291,20,320,18],[291,24,320,18,"useContext"],[291,30,320,28],[291,31,320,28,"useContext"],[291,41,320,28],[291,43,320,29,"AuthContext"],[291,54,320,40],[291,55,320,41],[292,4,321,2],[292,8,321,6,"context"],[292,15,321,13],[292,20,321,18,"undefined"],[292,29,321,27],[292,31,321,29],[293,6,322,4],[293,12,322,10],[293,16,322,14,"Error"],[293,21,322,19],[293,22,322,20],[293,67,322,65],[293,68,322,66],[294,4,323,2],[295,4,324,2],[295,11,324,9,"context"],[295,18,324,16],[296,2,325,0],[296,3,325,1],[297,2,325,2,"_s2"],[297,5,325,2],[297,6,319,13,"useAuth"],[297,13,319,20],[298,2,319,20],[298,6,319,20,"_c"],[298,8,319,20],[299,2,319,20,"$RefreshReg$"],[299,14,319,20],[299,15,319,20,"_c"],[299,17,319,20],[300,0,319,20],[300,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFsE;mBGE;GHuE;gBIE;GJmF;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"},"hasCjsExports":false},"type":"js/module"}]}