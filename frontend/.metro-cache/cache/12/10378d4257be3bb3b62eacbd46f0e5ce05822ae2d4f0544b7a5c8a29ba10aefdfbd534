{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _utilsStorage = require(_dependencyMap[2], \"../utils/storage\");\n  var _utilsEncryption = require(_dependencyMap[3], \"../utils/encryption\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        // Check if user has been through onboarding\n        const userData = await _utilsStorage.SecureStorageService.getUserData();\n        const token = await _utilsStorage.SecureStorageService.getAccessToken();\n        if (!userData) {\n          setIsFirstTime(true);\n          setIsLoading(false);\n          return;\n        }\n        if (token && userData) {\n          // Validate token with backend\n          const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            const userProfile = await response.json();\n            setUser(userProfile);\n\n            // Try to restore master key\n            const storedKey = await _utilsStorage.SecureStorageService.getMasterKey();\n            if (storedKey) {\n              setMasterKeyState(storedKey);\n            }\n          } else {\n            // Token invalid, clear stored data\n            await _utilsStorage.SecureStorageService.clearAllData();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _utilsEncryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Registration failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeUserSalt(salt);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n\n        // Get stored salt\n        const salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          throw new Error('User salt not found. Please register again.');\n        }\n\n        // Hash password for server verification\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Login failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _utilsStorage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser({\n            ...user,\n            biometric_enabled: enabled\n          });\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 10\n    }, this);\n  };\n  _s(AuthProvider, \"mGwwgojCgQ3U20j04pMnc9audNY=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":234,"map":[[10,2,34,0,"Object"],[10,8,34,0],[10,9,34,0,"defineProperty"],[10,23,34,0],[10,24,34,0,"exports"],[10,31,34,0],[11,4,34,0,"enumerable"],[11,14,34,0],[12,4,34,0,"get"],[12,7,34,0],[12,18,34,0,"get"],[12,19,34,0],[13,6,34,0],[13,13,34,0,"AuthProvider"],[13,25,34,0],[14,4,34,0],[15,2,34,0],[16,2,239,0,"Object"],[16,8,239,0],[16,9,239,0,"defineProperty"],[16,23,239,0],[16,24,239,0,"exports"],[16,31,239,0],[17,4,239,0,"enumerable"],[17,14,239,0],[18,4,239,0,"get"],[18,7,239,0],[18,18,239,0,"get"],[18,19,239,0],[19,6,239,0],[19,13,239,0,"useAuth"],[19,20,239,0],[20,4,239,0],[21,2,239,0],[22,2,245,2],[22,6,245,2,"_expoVirtualEnv"],[22,21,245,2],[22,24,245,2,"require"],[22,31,245,2],[22,32,245,2,"_dependencyMap"],[22,46,245,2],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_utilsStorage"],[24,19,2,0],[24,22,2,0,"require"],[24,29,2,0],[24,30,2,0,"_dependencyMap"],[24,44,2,0],[25,2,3,0],[25,6,3,0,"_utilsEncryption"],[25,22,3,0],[25,25,3,0,"require"],[25,32,3,0],[25,33,3,0,"_dependencyMap"],[25,47,3,0],[26,2,3,56],[26,6,3,56,"_reactJsxDevRuntime"],[26,25,3,56],[26,28,3,56,"require"],[26,35,3,56],[26,36,3,56,"_dependencyMap"],[26,50,3,56],[27,2,26,0],[27,8,26,6,"AuthContext"],[27,19,26,17],[27,35,26,20],[27,39,26,20,"createContext"],[27,45,26,33],[27,46,26,33,"createContext"],[27,59,26,33],[27,61,26,63,"undefined"],[27,70,26,72],[27,71,26,73],[28,2,32,0],[28,8,32,6,"API_BASE_URL"],[28,20,32,18],[28,23,32,21,"_expoVirtualEnv"],[28,38,32,21],[28,39,32,21,"env"],[28,42,32,21],[28,43,32,21,"EXPO_PUBLIC_BACKEND_URL"],[28,66,32,21],[28,70,32,60],[28,72,32,62],[29,2,34,7],[29,8,34,13,"AuthProvider"],[29,20,34,54],[29,23,34,57,"AuthProvider"],[29,24,34,58],[30,4,34,60,"children"],[31,2,34,69],[31,3,34,70],[31,8,34,75],[32,4,34,75,"_s"],[32,6,34,75],[33,4,35,2],[33,10,35,8],[33,11,35,9,"user"],[33,15,35,13],[33,17,35,15,"setUser"],[33,24,35,22],[33,25,35,23],[33,28,35,26],[33,32,35,26,"useState"],[33,38,35,34],[33,39,35,34,"useState"],[33,47,35,34],[33,49,35,48],[33,53,35,52],[33,54,35,53],[34,4,36,2],[34,10,36,8],[34,11,36,9,"isLoading"],[34,20,36,18],[34,22,36,20,"setIsLoading"],[34,34,36,32],[34,35,36,33],[34,38,36,36],[34,42,36,36,"useState"],[34,48,36,44],[34,49,36,44,"useState"],[34,57,36,44],[34,59,36,45],[34,63,36,49],[34,64,36,50],[35,4,37,2],[35,10,37,8],[35,11,37,9,"isFirstTime"],[35,22,37,20],[35,24,37,22,"setIsFirstTime"],[35,38,37,36],[35,39,37,37],[35,42,37,40],[35,46,37,40,"useState"],[35,52,37,48],[35,53,37,48,"useState"],[35,61,37,48],[35,63,37,49],[35,68,37,54],[35,69,37,55],[36,4,38,2],[36,10,38,8],[36,11,38,9,"masterKey"],[36,20,38,18],[36,22,38,20,"setMasterKeyState"],[36,39,38,37],[36,40,38,38],[36,43,38,41],[36,47,38,41,"useState"],[36,53,38,49],[36,54,38,49,"useState"],[36,62,38,49],[36,64,38,65],[36,68,38,69],[36,69,38,70],[37,4,40,2],[37,8,40,2,"useEffect"],[37,14,40,11],[37,15,40,11,"useEffect"],[37,24,40,11],[37,26,40,12],[37,32,40,18],[38,6,41,4,"initializeAuth"],[38,20,41,18],[38,21,41,19],[38,22,41,20],[39,4,42,2],[39,5,42,3],[39,7,42,5],[39,9,42,7],[39,10,42,8],[40,4,44,2],[40,10,44,8,"initializeAuth"],[40,24,44,22],[40,27,44,25],[40,33,44,25,"initializeAuth"],[40,34,44,25],[40,39,44,37],[41,6,45,4],[41,10,45,8],[42,8,46,6],[43,8,47,6],[43,14,47,12,"userData"],[43,22,47,20],[43,25,47,23],[43,31,47,29,"SecureStorageService"],[43,44,47,49],[43,45,47,49,"SecureStorageService"],[43,65,47,49],[43,66,47,50,"getUserData"],[43,77,47,61],[43,78,47,62],[43,79,47,63],[44,8,48,6],[44,14,48,12,"token"],[44,19,48,17],[44,22,48,20],[44,28,48,26,"SecureStorageService"],[44,41,48,46],[44,42,48,46,"SecureStorageService"],[44,62,48,46],[44,63,48,47,"getAccessToken"],[44,77,48,61],[44,78,48,62],[44,79,48,63],[45,8,50,6],[45,12,50,10],[45,13,50,11,"userData"],[45,21,50,19],[45,23,50,21],[46,10,51,8,"setIsFirstTime"],[46,24,51,22],[46,25,51,23],[46,29,51,27],[46,30,51,28],[47,10,52,8,"setIsLoading"],[47,22,52,20],[47,23,52,21],[47,28,52,26],[47,29,52,27],[48,10,53,8],[49,8,54,6],[50,8,56,6],[50,12,56,10,"token"],[50,17,56,15],[50,21,56,19,"userData"],[50,29,56,27],[50,31,56,29],[51,10,57,8],[52,10,58,8],[52,16,58,14,"response"],[52,24,58,22],[52,27,58,25],[52,33,58,31,"fetch"],[52,38,58,36],[52,39,58,37],[52,42,58,40,"API_BASE_URL"],[52,54,58,52],[52,73,58,71],[52,75,58,73],[53,12,59,10,"headers"],[53,19,59,17],[53,21,59,19],[54,14,60,12],[54,29,60,27],[54,31,60,29],[54,41,60,39,"token"],[54,46,60,44],[54,48,60,46],[55,14,61,12],[55,28,61,26],[55,30,61,28],[56,12,62,10],[57,10,63,8],[57,11,63,9],[57,12,63,10],[58,10,65,8],[58,14,65,12,"response"],[58,22,65,20],[58,23,65,21,"ok"],[58,25,65,23],[58,27,65,25],[59,12,66,10],[59,18,66,16,"userProfile"],[59,29,66,27],[59,32,66,30],[59,38,66,36,"response"],[59,46,66,44],[59,47,66,45,"json"],[59,51,66,49],[59,52,66,50],[59,53,66,51],[60,12,67,10,"setUser"],[60,19,67,17],[60,20,67,18,"userProfile"],[60,31,67,29],[60,32,67,30],[62,12,69,10],[63,12,70,10],[63,18,70,16,"storedKey"],[63,27,70,25],[63,30,70,28],[63,36,70,34,"SecureStorageService"],[63,49,70,54],[63,50,70,54,"SecureStorageService"],[63,70,70,54],[63,71,70,55,"getMasterKey"],[63,83,70,67],[63,84,70,68],[63,85,70,69],[64,12,71,10],[64,16,71,14,"storedKey"],[64,25,71,23],[64,27,71,25],[65,14,72,12,"setMasterKeyState"],[65,31,72,29],[65,32,72,30,"storedKey"],[65,41,72,39],[65,42,72,40],[66,12,73,10],[67,10,74,8],[67,11,74,9],[67,17,74,15],[68,12,75,10],[69,12,76,10],[69,18,76,16,"SecureStorageService"],[69,31,76,36],[69,32,76,36,"SecureStorageService"],[69,52,76,36],[69,53,76,37,"clearAllData"],[69,65,76,49],[69,66,76,50],[69,67,76,51],[70,10,77,8],[71,8,78,6],[72,6,79,4],[72,7,79,5],[72,8,79,6],[72,15,79,13,"error"],[72,20,79,18],[72,22,79,20],[73,8,80,6,"console"],[73,15,80,13],[73,16,80,14,"error"],[73,21,80,19],[73,22,80,20],[73,50,80,48],[73,52,80,50,"error"],[73,57,80,55],[73,58,80,56],[74,6,81,4],[74,7,81,5],[74,16,81,14],[75,8,82,6,"setIsLoading"],[75,20,82,18],[75,21,82,19],[75,26,82,24],[75,27,82,25],[76,6,83,4],[77,4,84,2],[77,5,84,3],[78,4,86,2],[78,10,86,8,"register"],[78,18,86,16],[78,21,86,19],[78,27,86,19,"register"],[78,28,87,4,"email"],[78,33,87,17],[78,35,88,4,"password"],[78,43,88,20],[78,45,89,4,"biometricEnabled"],[78,61,89,29],[78,66,90,22],[79,6,91,4],[79,10,91,8],[80,8,92,6,"setIsLoading"],[80,20,92,18],[80,21,92,19],[80,25,92,23],[80,26,92,24],[82,8,94,6],[83,8,95,6],[83,14,95,12,"salt"],[83,18,95,16],[83,21,95,19,"EncryptionService"],[83,37,95,36],[83,38,95,36,"EncryptionService"],[83,55,95,36],[83,56,95,37,"generateSalt"],[83,68,95,49],[83,69,95,50],[83,70,95,51],[85,8,97,6],[86,8,98,6],[86,14,98,12,"masterPasswordHash"],[86,32,98,30],[86,35,98,33],[86,41,98,39,"EncryptionService"],[86,57,98,56],[86,58,98,56,"EncryptionService"],[86,75,98,56],[86,76,98,57,"hashMasterPassword"],[86,94,98,75],[86,95,98,76,"password"],[86,103,98,84],[86,105,98,86,"salt"],[86,109,98,90],[86,110,98,91],[88,8,100,6],[89,8,101,6],[89,14,101,12,"encryptionKey"],[89,27,101,25],[89,30,101,28],[89,36,101,34,"EncryptionService"],[89,52,101,51],[89,53,101,51,"EncryptionService"],[89,70,101,51],[89,71,101,52,"deriveKey"],[89,80,101,61],[89,81,101,62,"password"],[89,89,101,70],[89,91,101,72,"salt"],[89,95,101,76],[89,96,101,77],[90,8,103,6],[90,14,103,12,"response"],[90,22,103,20],[90,25,103,23],[90,31,103,29,"fetch"],[90,36,103,34],[90,37,103,35],[90,40,103,38,"API_BASE_URL"],[90,52,103,50],[90,72,103,70],[90,74,103,72],[91,10,104,8,"method"],[91,16,104,14],[91,18,104,16],[91,24,104,22],[92,10,105,8,"headers"],[92,17,105,15],[92,19,105,17],[93,12,106,10],[93,26,106,24],[93,28,106,26],[94,10,107,8],[94,11,107,9],[95,10,108,8,"body"],[95,14,108,12],[95,16,108,14,"JSON"],[95,20,108,18],[95,21,108,19,"stringify"],[95,30,108,28],[95,31,108,29],[96,12,109,10,"email"],[96,17,109,15],[97,12,110,10,"master_password_hash"],[97,32,110,30],[97,34,110,32,"masterPasswordHash"],[97,52,110,50],[98,12,111,10,"biometric_enabled"],[98,29,111,27],[98,31,111,29,"biometricEnabled"],[99,10,112,8],[99,11,112,9],[100,8,113,6],[100,9,113,7],[100,10,113,8],[101,8,115,6],[101,12,115,10],[101,13,115,11,"response"],[101,21,115,19],[101,22,115,20,"ok"],[101,24,115,22],[101,26,115,24],[102,10,116,8],[102,16,116,14,"error"],[102,21,116,19],[102,24,116,22],[102,30,116,28,"response"],[102,38,116,36],[102,39,116,37,"json"],[102,43,116,41],[102,44,116,42],[102,45,116,43],[103,10,117,8],[103,16,117,14],[103,20,117,18,"Error"],[103,25,117,23],[103,26,117,24,"error"],[103,31,117,29],[103,32,117,30,"detail"],[103,38,117,36],[103,42,117,40],[103,63,117,61],[103,64,117,62],[104,8,118,6],[105,8,120,6],[105,14,120,12,"data"],[105,18,120,16],[105,21,120,19],[105,27,120,25,"response"],[105,35,120,33],[105,36,120,34,"json"],[105,40,120,38],[105,41,120,39],[105,42,120,40],[107,8,122,6],[108,8,123,6],[108,14,123,12,"SecureStorageService"],[108,27,123,32],[108,28,123,32,"SecureStorageService"],[108,48,123,32],[108,49,123,33,"storeAccessToken"],[108,65,123,49],[108,66,123,50,"data"],[108,70,123,54],[108,71,123,55,"access_token"],[108,83,123,67],[108,84,123,68],[109,8,124,6],[109,14,124,12,"SecureStorageService"],[109,27,124,32],[109,28,124,32,"SecureStorageService"],[109,48,124,32],[109,49,124,33,"storeUserData"],[109,62,124,46],[109,63,124,47,"data"],[109,67,124,51],[109,68,124,52,"user"],[109,72,124,56],[109,73,124,57],[110,8,125,6],[110,14,125,12,"SecureStorageService"],[110,27,125,32],[110,28,125,32,"SecureStorageService"],[110,48,125,32],[110,49,125,33,"storeUserSalt"],[110,62,125,46],[110,63,125,47,"salt"],[110,67,125,51],[110,68,125,52],[111,8,126,6],[111,14,126,12,"SecureStorageService"],[111,27,126,32],[111,28,126,32,"SecureStorageService"],[111,48,126,32],[111,49,126,33,"storeMasterKey"],[111,63,126,47],[111,64,126,48,"encryptionKey"],[111,77,126,61],[111,78,126,62],[112,8,127,6],[112,14,127,12,"SecureStorageService"],[112,27,127,32],[112,28,127,32,"SecureStorageService"],[112,48,127,32],[112,49,127,33,"setBiometricEnabled"],[112,68,127,52],[112,69,127,53,"biometricEnabled"],[112,85,127,69],[112,86,127,70],[114,8,129,6],[115,8,130,6],[115,12,130,10,"biometricEnabled"],[115,28,130,26],[115,30,130,28],[116,10,131,8],[116,16,131,14,"SecureStorageService"],[116,29,131,34],[116,30,131,34,"SecureStorageService"],[116,50,131,34],[116,51,131,35,"storeBiometricKey"],[116,68,131,52],[116,69,131,53,"encryptionKey"],[116,82,131,66],[116,83,131,67],[117,8,132,6],[118,8,134,6,"setUser"],[118,15,134,13],[118,16,134,14,"data"],[118,20,134,18],[118,21,134,19,"user"],[118,25,134,23],[118,26,134,24],[119,8,135,6,"setMasterKeyState"],[119,25,135,23],[119,26,135,24,"encryptionKey"],[119,39,135,37],[119,40,135,38],[120,8,136,6,"setIsFirstTime"],[120,22,136,20],[120,23,136,21],[120,28,136,26],[120,29,136,27],[121,6,137,4],[121,7,137,5],[121,8,137,6],[121,15,137,13,"error"],[121,20,137,18],[121,22,137,20],[122,8,138,6,"console"],[122,15,138,13],[122,16,138,14,"error"],[122,21,138,19],[122,22,138,20],[122,43,138,41],[122,45,138,43,"error"],[122,50,138,48],[122,51,138,49],[123,8,139,6],[123,14,139,12,"error"],[123,19,139,17],[124,6,140,4],[124,7,140,5],[124,16,140,14],[125,8,141,6,"setIsLoading"],[125,20,141,18],[125,21,141,19],[125,26,141,24],[125,27,141,25],[126,6,142,4],[127,4,143,2],[127,5,143,3],[128,4,145,2],[128,10,145,8,"login"],[128,15,145,13],[128,18,145,16],[128,24,145,16,"login"],[128,25,145,23,"email"],[128,30,145,36],[128,32,145,38,"password"],[128,40,145,54],[128,45,145,74],[129,6,146,4],[129,10,146,8],[130,8,147,6,"setIsLoading"],[130,20,147,18],[130,21,147,19],[130,25,147,23],[130,26,147,24],[132,8,149,6],[133,8,150,6],[133,14,150,12,"salt"],[133,18,150,16],[133,21,150,19],[133,27,150,25,"SecureStorageService"],[133,40,150,45],[133,41,150,45,"SecureStorageService"],[133,61,150,45],[133,62,150,46,"getUserSalt"],[133,73,150,57],[133,74,150,58],[133,75,150,59],[134,8,151,6],[134,12,151,10],[134,13,151,11,"salt"],[134,17,151,15],[134,19,151,17],[135,10,152,8],[135,16,152,14],[135,20,152,18,"Error"],[135,25,152,23],[135,26,152,24],[135,71,152,69],[135,72,152,70],[136,8,153,6],[138,8,155,6],[139,8,156,6],[139,14,156,12,"masterPasswordHash"],[139,32,156,30],[139,35,156,33],[139,41,156,39,"EncryptionService"],[139,57,156,56],[139,58,156,56,"EncryptionService"],[139,75,156,56],[139,76,156,57,"hashMasterPassword"],[139,94,156,75],[139,95,156,76,"password"],[139,103,156,84],[139,105,156,86,"salt"],[139,109,156,90],[139,110,156,91],[141,8,158,6],[142,8,159,6],[142,14,159,12,"encryptionKey"],[142,27,159,25],[142,30,159,28],[142,36,159,34,"EncryptionService"],[142,52,159,51],[142,53,159,51,"EncryptionService"],[142,70,159,51],[142,71,159,52,"deriveKey"],[142,80,159,61],[142,81,159,62,"password"],[142,89,159,70],[142,91,159,72,"salt"],[142,95,159,76],[142,96,159,77],[143,8,161,6],[143,14,161,12,"response"],[143,22,161,20],[143,25,161,23],[143,31,161,29,"fetch"],[143,36,161,34],[143,37,161,35],[143,40,161,38,"API_BASE_URL"],[143,52,161,50],[143,69,161,67],[143,71,161,69],[144,10,162,8,"method"],[144,16,162,14],[144,18,162,16],[144,24,162,22],[145,10,163,8,"headers"],[145,17,163,15],[145,19,163,17],[146,12,164,10],[146,26,164,24],[146,28,164,26],[147,10,165,8],[147,11,165,9],[148,10,166,8,"body"],[148,14,166,12],[148,16,166,14,"JSON"],[148,20,166,18],[148,21,166,19,"stringify"],[148,30,166,28],[148,31,166,29],[149,12,167,10,"email"],[149,17,167,15],[150,12,168,10,"master_password_hash"],[150,32,168,30],[150,34,168,32,"masterPasswordHash"],[151,10,169,8],[151,11,169,9],[152,8,170,6],[152,9,170,7],[152,10,170,8],[153,8,172,6],[153,12,172,10],[153,13,172,11,"response"],[153,21,172,19],[153,22,172,20,"ok"],[153,24,172,22],[153,26,172,24],[154,10,173,8],[154,16,173,14,"error"],[154,21,173,19],[154,24,173,22],[154,30,173,28,"response"],[154,38,173,36],[154,39,173,37,"json"],[154,43,173,41],[154,44,173,42],[154,45,173,43],[155,10,174,8],[155,16,174,14],[155,20,174,18,"Error"],[155,25,174,23],[155,26,174,24,"error"],[155,31,174,29],[155,32,174,30,"detail"],[155,38,174,36],[155,42,174,40],[155,56,174,54],[155,57,174,55],[156,8,175,6],[157,8,177,6],[157,14,177,12,"data"],[157,18,177,16],[157,21,177,19],[157,27,177,25,"response"],[157,35,177,33],[157,36,177,34,"json"],[157,40,177,38],[157,41,177,39],[157,42,177,40],[159,8,179,6],[160,8,180,6],[160,14,180,12,"SecureStorageService"],[160,27,180,32],[160,28,180,32,"SecureStorageService"],[160,48,180,32],[160,49,180,33,"storeAccessToken"],[160,65,180,49],[160,66,180,50,"data"],[160,70,180,54],[160,71,180,55,"access_token"],[160,83,180,67],[160,84,180,68],[161,8,181,6],[161,14,181,12,"SecureStorageService"],[161,27,181,32],[161,28,181,32,"SecureStorageService"],[161,48,181,32],[161,49,181,33,"storeUserData"],[161,62,181,46],[161,63,181,47,"data"],[161,67,181,51],[161,68,181,52,"user"],[161,72,181,56],[161,73,181,57],[162,8,182,6],[162,14,182,12,"SecureStorageService"],[162,27,182,32],[162,28,182,32,"SecureStorageService"],[162,48,182,32],[162,49,182,33,"storeMasterKey"],[162,63,182,47],[162,64,182,48,"encryptionKey"],[162,77,182,61],[162,78,182,62],[163,8,184,6,"setUser"],[163,15,184,13],[163,16,184,14,"data"],[163,20,184,18],[163,21,184,19,"user"],[163,25,184,23],[163,26,184,24],[164,8,185,6,"setMasterKeyState"],[164,25,185,23],[164,26,185,24,"encryptionKey"],[164,39,185,37],[164,40,185,38],[165,6,186,4],[165,7,186,5],[165,8,186,6],[165,15,186,13,"error"],[165,20,186,18],[165,22,186,20],[166,8,187,6,"console"],[166,15,187,13],[166,16,187,14,"error"],[166,21,187,19],[166,22,187,20],[166,36,187,34],[166,38,187,36,"error"],[166,43,187,41],[166,44,187,42],[167,8,188,6],[167,14,188,12,"error"],[167,19,188,17],[168,6,189,4],[168,7,189,5],[168,16,189,14],[169,8,190,6,"setIsLoading"],[169,20,190,18],[169,21,190,19],[169,26,190,24],[169,27,190,25],[170,6,191,4],[171,4,192,2],[171,5,192,3],[172,4,194,2],[172,10,194,8,"logout"],[172,16,194,14],[172,19,194,17],[172,25,194,17,"logout"],[172,26,194,17],[172,31,194,44],[173,6,195,4],[173,10,195,8],[174,8,196,6],[174,14,196,12,"SecureStorageService"],[174,27,196,32],[174,28,196,32,"SecureStorageService"],[174,48,196,32],[174,49,196,33,"clearAllData"],[174,61,196,45],[174,62,196,46],[174,63,196,47],[175,8,197,6,"setUser"],[175,15,197,13],[175,16,197,14],[175,20,197,18],[175,21,197,19],[176,8,198,6,"setMasterKeyState"],[176,25,198,23],[176,26,198,24],[176,30,198,28],[176,31,198,29],[177,6,199,4],[177,7,199,5],[177,8,199,6],[177,15,199,13,"error"],[177,20,199,18],[177,22,199,20],[178,8,200,6,"console"],[178,15,200,13],[178,16,200,14,"error"],[178,21,200,19],[178,22,200,20],[178,37,200,35],[178,39,200,37,"error"],[178,44,200,42],[178,45,200,43],[179,6,201,4],[180,4,202,2],[180,5,202,3],[181,4,204,2],[181,10,204,8,"setMasterKey"],[181,22,204,20],[181,25,204,24,"key"],[181,28,204,35],[181,32,204,40],[182,6,205,4,"setMasterKeyState"],[182,23,205,21],[182,24,205,22,"key"],[182,27,205,25],[182,28,205,26],[183,4,206,2],[183,5,206,3],[184,4,208,2],[184,10,208,8,"setBiometricRecovery"],[184,30,208,28],[184,33,208,31],[184,39,208,38,"enabled"],[184,46,208,54],[184,50,208,74],[185,6,209,4],[185,10,209,8],[186,8,210,6],[186,12,210,10,"enabled"],[186,19,210,17],[186,23,210,21,"masterKey"],[186,32,210,30],[186,34,210,32],[187,10,211,8],[187,16,211,14,"SecureStorageService"],[187,29,211,34],[187,30,211,34,"SecureStorageService"],[187,50,211,34],[187,51,211,35,"storeBiometricKey"],[187,68,211,52],[187,69,211,53,"masterKey"],[187,78,211,62],[187,79,211,63],[188,8,212,6],[189,8,213,6],[189,14,213,12,"SecureStorageService"],[189,27,213,32],[189,28,213,32,"SecureStorageService"],[189,48,213,32],[189,49,213,33,"setBiometricEnabled"],[189,68,213,52],[189,69,213,53,"enabled"],[189,76,213,60],[189,77,213,61],[190,8,215,6],[190,12,215,10,"user"],[190,16,215,14],[190,18,215,16],[191,10,216,8,"setUser"],[191,17,216,15],[191,18,216,16],[192,12,216,18],[192,15,216,21,"user"],[192,19,216,25],[193,12,216,27,"biometric_enabled"],[193,29,216,44],[193,31,216,46,"enabled"],[194,10,216,54],[194,11,216,55],[194,12,216,56],[195,8,217,6],[196,6,218,4],[196,7,218,5],[196,8,218,6],[196,15,218,13,"error"],[196,20,218,18],[196,22,218,20],[197,8,219,6,"console"],[197,15,219,13],[197,16,219,14,"error"],[197,21,219,19],[197,22,219,20],[197,46,219,44],[197,48,219,46,"error"],[197,53,219,51],[197,54,219,52],[198,8,220,6],[198,14,220,12,"error"],[198,19,220,17],[199,6,221,4],[200,4,222,2],[200,5,222,3],[201,4,224,2],[201,10,224,8,"value"],[201,15,224,30],[201,18,224,33],[202,6,225,4,"user"],[202,10,225,8],[203,6,226,4,"isLoading"],[203,15,226,13],[204,6,227,4,"isFirstTime"],[204,17,227,15],[205,6,228,4,"masterKey"],[205,15,228,13],[206,6,229,4,"login"],[206,11,229,9],[207,6,230,4,"register"],[207,14,230,12],[208,6,231,4,"logout"],[208,12,231,10],[209,6,232,4,"setMasterKey"],[209,18,232,16],[210,6,233,4,"setBiometricRecovery"],[211,4,234,2],[211,5,234,3],[212,4,236,2],[212,24,236,9],[212,28,236,9,"_reactJsxDevRuntime"],[212,47,236,9],[212,48,236,9,"jsxDEV"],[212,54,236,9],[212,56,236,10,"AuthContext"],[212,67,236,21],[212,68,236,22,"Provider"],[212,76,236,30],[213,6,236,31,"value"],[213,11,236,36],[213,13,236,38,"value"],[213,18,236,44],[214,6,236,44,"children"],[214,14,236,44],[214,16,236,46,"children"],[215,4,236,54],[216,6,236,54,"fileName"],[216,14,236,54],[216,16,236,54,"_jsxFileName"],[216,28,236,54],[217,6,236,54,"lineNumber"],[217,16,236,54],[218,6,236,54,"columnNumber"],[218,18,236,54],[219,4,236,54],[219,11,236,77],[219,12,236,78],[220,2,237,0],[220,3,237,1],[221,2,237,2,"_s"],[221,4,237,2],[221,5,34,13,"AuthProvider"],[221,17,34,54],[222,2,34,54,"_c"],[222,4,34,54],[222,7,34,13,"AuthProvider"],[222,19,34,54],[223,2,239,7],[223,8,239,13,"useAuth"],[223,15,239,20],[223,18,239,23,"useAuth"],[223,19,239,23],[223,24,239,46],[224,4,239,46,"_s2"],[224,7,239,46],[225,4,240,2],[225,10,240,8,"context"],[225,17,240,15],[225,20,240,18],[225,24,240,18,"useContext"],[225,30,240,28],[225,31,240,28,"useContext"],[225,41,240,28],[225,43,240,29,"AuthContext"],[225,54,240,40],[225,55,240,41],[226,4,241,2],[226,8,241,6,"context"],[226,15,241,13],[226,20,241,18,"undefined"],[226,29,241,27],[226,31,241,29],[227,6,242,4],[227,12,242,10],[227,16,242,14,"Error"],[227,21,242,19],[227,22,242,20],[227,67,242,65],[227,68,242,66],[228,4,243,2],[229,4,244,2],[229,11,244,9,"context"],[229,18,244,16],[230,2,245,0],[230,3,245,1],[231,2,245,2,"_s2"],[231,5,245,2],[231,6,239,13,"useAuth"],[231,13,239,20],[232,2,239,20],[232,6,239,20,"_c"],[232,8,239,20],[233,2,239,20,"$RefreshReg$"],[233,14,239,20],[233,15,239,20,"_c"],[233,17,239,20],[234,0,239,20],[234,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFwC;mBGE;GHyD;gBIE;GJ+C;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"},"hasCjsExports":false},"type":"js/module"}]}