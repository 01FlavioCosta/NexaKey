{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _utilsStorage = require(_dependencyMap[2], \"../utils/storage\");\n  var _utilsEncryption = require(_dependencyMap[3], \"../utils/encryption\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        // Check if user has been through onboarding\n        const userData = await _utilsStorage.SecureStorageService.getUserData();\n        const token = await _utilsStorage.SecureStorageService.getAccessToken();\n        if (!userData) {\n          setIsFirstTime(true);\n          setIsLoading(false);\n          return;\n        }\n        if (token && userData) {\n          // Validate token with backend\n          const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            const userProfile = await response.json();\n            setUser(userProfile);\n\n            // Try to restore master key\n            const storedKey = await _utilsStorage.SecureStorageService.getMasterKey();\n            if (storedKey) {\n              setMasterKeyState(storedKey);\n            }\n          } else {\n            // Token invalid, clear stored data\n            await _utilsStorage.SecureStorageService.clearAllData();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _utilsEncryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        console.log('Registering user with email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        const responseText = await response.text();\n        console.log('Registration response:', response.status, responseText);\n        if (!response.ok) {\n          let errorMessage = 'Falha no registro';\n          try {\n            const error = JSON.parse(responseText);\n            errorMessage = error.detail || errorMessage;\n          } catch (parseError) {\n            console.error('Error parsing response:', parseError);\n            errorMessage = `Erro ${response.status}: ${responseText}`;\n          }\n          throw new Error(errorMessage);\n        }\n        const data = JSON.parse(responseText);\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeUserSalt(salt);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n        console.log('Registration successful for:', email);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n\n        // Get stored salt\n        const salt = await _utilsStorage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          throw new Error('User salt not found. Please register again.');\n        }\n\n        // Hash password for server verification\n        const masterPasswordHash = await _utilsEncryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key\n        const encryptionKey = await _utilsEncryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Login failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _utilsStorage.SecureStorageService.storeAccessToken(data.access_token);\n        await _utilsStorage.SecureStorageService.storeUserData(data.user);\n        await _utilsStorage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _utilsStorage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _utilsStorage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _utilsStorage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser(Object.assign({}, user, {\n            biometric_enabled: enabled\n          }));\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 10\n    }, this);\n  };\n  _s(AuthProvider, \"mGwwgojCgQ3U20j04pMnc9audNY=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":244,"map":[[10,2,34,0,"Object"],[10,8,34,0],[10,9,34,0,"defineProperty"],[10,23,34,0],[10,24,34,0,"exports"],[10,31,34,0],[11,4,34,0,"enumerable"],[11,14,34,0],[12,4,34,0,"get"],[12,7,34,0],[12,18,34,0,"get"],[12,19,34,0],[13,6,34,0],[13,13,34,0,"AuthProvider"],[13,25,34,0],[14,4,34,0],[15,2,34,0],[16,2,253,0,"Object"],[16,8,253,0],[16,9,253,0,"defineProperty"],[16,23,253,0],[16,24,253,0,"exports"],[16,31,253,0],[17,4,253,0,"enumerable"],[17,14,253,0],[18,4,253,0,"get"],[18,7,253,0],[18,18,253,0,"get"],[18,19,253,0],[19,6,253,0],[19,13,253,0,"useAuth"],[19,20,253,0],[20,4,253,0],[21,2,253,0],[22,2,259,2],[22,6,259,2,"_expoVirtualEnv"],[22,21,259,2],[22,24,259,2,"require"],[22,31,259,2],[22,32,259,2,"_dependencyMap"],[22,46,259,2],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_utilsStorage"],[24,19,2,0],[24,22,2,0,"require"],[24,29,2,0],[24,30,2,0,"_dependencyMap"],[24,44,2,0],[25,2,3,0],[25,6,3,0,"_utilsEncryption"],[25,22,3,0],[25,25,3,0,"require"],[25,32,3,0],[25,33,3,0,"_dependencyMap"],[25,47,3,0],[26,2,3,56],[26,6,3,56,"_reactJsxDevRuntime"],[26,25,3,56],[26,28,3,56,"require"],[26,35,3,56],[26,36,3,56,"_dependencyMap"],[26,50,3,56],[27,2,26,0],[27,8,26,6,"AuthContext"],[27,19,26,17],[27,35,26,20],[27,39,26,20,"createContext"],[27,45,26,33],[27,46,26,33,"createContext"],[27,59,26,33],[27,61,26,63,"undefined"],[27,70,26,72],[27,71,26,73],[28,2,32,0],[28,8,32,6,"API_BASE_URL"],[28,20,32,18],[28,23,32,21,"_expoVirtualEnv"],[28,38,32,21],[28,39,32,21,"env"],[28,42,32,21],[28,43,32,21,"EXPO_PUBLIC_BACKEND_URL"],[28,66,32,21],[28,70,32,60],[28,72,32,62],[29,2,34,7],[29,8,34,13,"AuthProvider"],[29,20,34,54],[29,23,34,57,"AuthProvider"],[29,24,34,58],[30,4,34,60,"children"],[31,2,34,69],[31,3,34,70],[31,8,34,75],[32,4,34,75,"_s"],[32,6,34,75],[33,4,35,2],[33,10,35,8],[33,11,35,9,"user"],[33,15,35,13],[33,17,35,15,"setUser"],[33,24,35,22],[33,25,35,23],[33,28,35,26],[33,32,35,26,"useState"],[33,38,35,34],[33,39,35,34,"useState"],[33,47,35,34],[33,49,35,48],[33,53,35,52],[33,54,35,53],[34,4,36,2],[34,10,36,8],[34,11,36,9,"isLoading"],[34,20,36,18],[34,22,36,20,"setIsLoading"],[34,34,36,32],[34,35,36,33],[34,38,36,36],[34,42,36,36,"useState"],[34,48,36,44],[34,49,36,44,"useState"],[34,57,36,44],[34,59,36,45],[34,63,36,49],[34,64,36,50],[35,4,37,2],[35,10,37,8],[35,11,37,9,"isFirstTime"],[35,22,37,20],[35,24,37,22,"setIsFirstTime"],[35,38,37,36],[35,39,37,37],[35,42,37,40],[35,46,37,40,"useState"],[35,52,37,48],[35,53,37,48,"useState"],[35,61,37,48],[35,63,37,49],[35,68,37,54],[35,69,37,55],[36,4,38,2],[36,10,38,8],[36,11,38,9,"masterKey"],[36,20,38,18],[36,22,38,20,"setMasterKeyState"],[36,39,38,37],[36,40,38,38],[36,43,38,41],[36,47,38,41,"useState"],[36,53,38,49],[36,54,38,49,"useState"],[36,62,38,49],[36,64,38,65],[36,68,38,69],[36,69,38,70],[37,4,40,2],[37,8,40,2,"useEffect"],[37,14,40,11],[37,15,40,11,"useEffect"],[37,24,40,11],[37,26,40,12],[37,32,40,18],[38,6,41,4,"initializeAuth"],[38,20,41,18],[38,21,41,19],[38,22,41,20],[39,4,42,2],[39,5,42,3],[39,7,42,5],[39,9,42,7],[39,10,42,8],[40,4,44,2],[40,10,44,8,"initializeAuth"],[40,24,44,22],[40,27,44,25],[40,33,44,25,"initializeAuth"],[40,34,44,25],[40,39,44,37],[41,6,45,4],[41,10,45,8],[42,8,46,6],[43,8,47,6],[43,14,47,12,"userData"],[43,22,47,20],[43,25,47,23],[43,31,47,29,"SecureStorageService"],[43,44,47,49],[43,45,47,49,"SecureStorageService"],[43,65,47,49],[43,66,47,50,"getUserData"],[43,77,47,61],[43,78,47,62],[43,79,47,63],[44,8,48,6],[44,14,48,12,"token"],[44,19,48,17],[44,22,48,20],[44,28,48,26,"SecureStorageService"],[44,41,48,46],[44,42,48,46,"SecureStorageService"],[44,62,48,46],[44,63,48,47,"getAccessToken"],[44,77,48,61],[44,78,48,62],[44,79,48,63],[45,8,50,6],[45,12,50,10],[45,13,50,11,"userData"],[45,21,50,19],[45,23,50,21],[46,10,51,8,"setIsFirstTime"],[46,24,51,22],[46,25,51,23],[46,29,51,27],[46,30,51,28],[47,10,52,8,"setIsLoading"],[47,22,52,20],[47,23,52,21],[47,28,52,26],[47,29,52,27],[48,10,53,8],[49,8,54,6],[50,8,56,6],[50,12,56,10,"token"],[50,17,56,15],[50,21,56,19,"userData"],[50,29,56,27],[50,31,56,29],[51,10,57,8],[52,10,58,8],[52,16,58,14,"response"],[52,24,58,22],[52,27,58,25],[52,33,58,31,"fetch"],[52,38,58,36],[52,39,58,37],[52,42,58,40,"API_BASE_URL"],[52,54,58,52],[52,73,58,71],[52,75,58,73],[53,12,59,10,"headers"],[53,19,59,17],[53,21,59,19],[54,14,60,12],[54,29,60,27],[54,31,60,29],[54,41,60,39,"token"],[54,46,60,44],[54,48,60,46],[55,14,61,12],[55,28,61,26],[55,30,61,28],[56,12,62,10],[57,10,63,8],[57,11,63,9],[57,12,63,10],[58,10,65,8],[58,14,65,12,"response"],[58,22,65,20],[58,23,65,21,"ok"],[58,25,65,23],[58,27,65,25],[59,12,66,10],[59,18,66,16,"userProfile"],[59,29,66,27],[59,32,66,30],[59,38,66,36,"response"],[59,46,66,44],[59,47,66,45,"json"],[59,51,66,49],[59,52,66,50],[59,53,66,51],[60,12,67,10,"setUser"],[60,19,67,17],[60,20,67,18,"userProfile"],[60,31,67,29],[60,32,67,30],[62,12,69,10],[63,12,70,10],[63,18,70,16,"storedKey"],[63,27,70,25],[63,30,70,28],[63,36,70,34,"SecureStorageService"],[63,49,70,54],[63,50,70,54,"SecureStorageService"],[63,70,70,54],[63,71,70,55,"getMasterKey"],[63,83,70,67],[63,84,70,68],[63,85,70,69],[64,12,71,10],[64,16,71,14,"storedKey"],[64,25,71,23],[64,27,71,25],[65,14,72,12,"setMasterKeyState"],[65,31,72,29],[65,32,72,30,"storedKey"],[65,41,72,39],[65,42,72,40],[66,12,73,10],[67,10,74,8],[67,11,74,9],[67,17,74,15],[68,12,75,10],[69,12,76,10],[69,18,76,16,"SecureStorageService"],[69,31,76,36],[69,32,76,36,"SecureStorageService"],[69,52,76,36],[69,53,76,37,"clearAllData"],[69,65,76,49],[69,66,76,50],[69,67,76,51],[70,10,77,8],[71,8,78,6],[72,6,79,4],[72,7,79,5],[72,8,79,6],[72,15,79,13,"error"],[72,20,79,18],[72,22,79,20],[73,8,80,6,"console"],[73,15,80,13],[73,16,80,14,"error"],[73,21,80,19],[73,22,80,20],[73,50,80,48],[73,52,80,50,"error"],[73,57,80,55],[73,58,80,56],[74,6,81,4],[74,7,81,5],[74,16,81,14],[75,8,82,6,"setIsLoading"],[75,20,82,18],[75,21,82,19],[75,26,82,24],[75,27,82,25],[76,6,83,4],[77,4,84,2],[77,5,84,3],[78,4,86,2],[78,10,86,8,"register"],[78,18,86,16],[78,21,86,19],[78,27,86,19,"register"],[78,28,87,4,"email"],[78,33,87,17],[78,35,88,4,"password"],[78,43,88,20],[78,45,89,4,"biometricEnabled"],[78,61,89,29],[78,66,90,22],[79,6,91,4],[79,10,91,8],[80,8,92,6,"setIsLoading"],[80,20,92,18],[80,21,92,19],[80,25,92,23],[80,26,92,24],[82,8,94,6],[83,8,95,6],[83,14,95,12,"salt"],[83,18,95,16],[83,21,95,19,"EncryptionService"],[83,37,95,36],[83,38,95,36,"EncryptionService"],[83,55,95,36],[83,56,95,37,"generateSalt"],[83,68,95,49],[83,69,95,50],[83,70,95,51],[85,8,97,6],[86,8,98,6],[86,14,98,12,"masterPasswordHash"],[86,32,98,30],[86,35,98,33],[86,41,98,39,"EncryptionService"],[86,57,98,56],[86,58,98,56,"EncryptionService"],[86,75,98,56],[86,76,98,57,"hashMasterPassword"],[86,94,98,75],[86,95,98,76,"password"],[86,103,98,84],[86,105,98,86,"salt"],[86,109,98,90],[86,110,98,91],[88,8,100,6],[89,8,101,6],[89,14,101,12,"encryptionKey"],[89,27,101,25],[89,30,101,28],[89,36,101,34,"EncryptionService"],[89,52,101,51],[89,53,101,51,"EncryptionService"],[89,70,101,51],[89,71,101,52,"deriveKey"],[89,80,101,61],[89,81,101,62,"password"],[89,89,101,70],[89,91,101,72,"salt"],[89,95,101,76],[89,96,101,77],[90,8,103,6,"console"],[90,15,103,13],[90,16,103,14,"log"],[90,19,103,17],[90,20,103,18],[90,50,103,48],[90,52,103,50,"email"],[90,57,103,55],[90,58,103,56],[91,8,105,6],[91,14,105,12,"response"],[91,22,105,20],[91,25,105,23],[91,31,105,29,"fetch"],[91,36,105,34],[91,37,105,35],[91,40,105,38,"API_BASE_URL"],[91,52,105,50],[91,72,105,70],[91,74,105,72],[92,10,106,8,"method"],[92,16,106,14],[92,18,106,16],[92,24,106,22],[93,10,107,8,"headers"],[93,17,107,15],[93,19,107,17],[94,12,108,10],[94,26,108,24],[94,28,108,26],[95,10,109,8],[95,11,109,9],[96,10,110,8,"body"],[96,14,110,12],[96,16,110,14,"JSON"],[96,20,110,18],[96,21,110,19,"stringify"],[96,30,110,28],[96,31,110,29],[97,12,111,10,"email"],[97,17,111,15],[98,12,112,10,"master_password_hash"],[98,32,112,30],[98,34,112,32,"masterPasswordHash"],[98,52,112,50],[99,12,113,10,"biometric_enabled"],[99,29,113,27],[99,31,113,29,"biometricEnabled"],[100,10,114,8],[100,11,114,9],[101,8,115,6],[101,9,115,7],[101,10,115,8],[102,8,117,6],[102,14,117,12,"responseText"],[102,26,117,24],[102,29,117,27],[102,35,117,33,"response"],[102,43,117,41],[102,44,117,42,"text"],[102,48,117,46],[102,49,117,47],[102,50,117,48],[103,8,118,6,"console"],[103,15,118,13],[103,16,118,14,"log"],[103,19,118,17],[103,20,118,18],[103,44,118,42],[103,46,118,44,"response"],[103,54,118,52],[103,55,118,53,"status"],[103,61,118,59],[103,63,118,61,"responseText"],[103,75,118,73],[103,76,118,74],[104,8,120,6],[104,12,120,10],[104,13,120,11,"response"],[104,21,120,19],[104,22,120,20,"ok"],[104,24,120,22],[104,26,120,24],[105,10,121,8],[105,14,121,12,"errorMessage"],[105,26,121,24],[105,29,121,27],[105,48,121,46],[106,10,122,8],[106,14,122,12],[107,12,123,10],[107,18,123,16,"error"],[107,23,123,21],[107,26,123,24,"JSON"],[107,30,123,28],[107,31,123,29,"parse"],[107,36,123,34],[107,37,123,35,"responseText"],[107,49,123,47],[107,50,123,48],[108,12,124,10,"errorMessage"],[108,24,124,22],[108,27,124,25,"error"],[108,32,124,30],[108,33,124,31,"detail"],[108,39,124,37],[108,43,124,41,"errorMessage"],[108,55,124,53],[109,10,125,8],[109,11,125,9],[109,12,125,10],[109,19,125,17,"parseError"],[109,29,125,27],[109,31,125,29],[110,12,126,10,"console"],[110,19,126,17],[110,20,126,18,"error"],[110,25,126,23],[110,26,126,24],[110,51,126,49],[110,53,126,51,"parseError"],[110,63,126,61],[110,64,126,62],[111,12,127,10,"errorMessage"],[111,24,127,22],[111,27,127,25],[111,35,127,33,"response"],[111,43,127,41],[111,44,127,42,"status"],[111,50,127,48],[111,55,127,53,"responseText"],[111,67,127,65],[111,69,127,67],[112,10,128,8],[113,10,129,8],[113,16,129,14],[113,20,129,18,"Error"],[113,25,129,23],[113,26,129,24,"errorMessage"],[113,38,129,36],[113,39,129,37],[114,8,130,6],[115,8,132,6],[115,14,132,12,"data"],[115,18,132,16],[115,21,132,19,"JSON"],[115,25,132,23],[115,26,132,24,"parse"],[115,31,132,29],[115,32,132,30,"responseText"],[115,44,132,42],[115,45,132,43],[117,8,134,6],[118,8,135,6],[118,14,135,12,"SecureStorageService"],[118,27,135,32],[118,28,135,32,"SecureStorageService"],[118,48,135,32],[118,49,135,33,"storeAccessToken"],[118,65,135,49],[118,66,135,50,"data"],[118,70,135,54],[118,71,135,55,"access_token"],[118,83,135,67],[118,84,135,68],[119,8,136,6],[119,14,136,12,"SecureStorageService"],[119,27,136,32],[119,28,136,32,"SecureStorageService"],[119,48,136,32],[119,49,136,33,"storeUserData"],[119,62,136,46],[119,63,136,47,"data"],[119,67,136,51],[119,68,136,52,"user"],[119,72,136,56],[119,73,136,57],[120,8,137,6],[120,14,137,12,"SecureStorageService"],[120,27,137,32],[120,28,137,32,"SecureStorageService"],[120,48,137,32],[120,49,137,33,"storeUserSalt"],[120,62,137,46],[120,63,137,47,"salt"],[120,67,137,51],[120,68,137,52],[121,8,138,6],[121,14,138,12,"SecureStorageService"],[121,27,138,32],[121,28,138,32,"SecureStorageService"],[121,48,138,32],[121,49,138,33,"storeMasterKey"],[121,63,138,47],[121,64,138,48,"encryptionKey"],[121,77,138,61],[121,78,138,62],[122,8,139,6],[122,14,139,12,"SecureStorageService"],[122,27,139,32],[122,28,139,32,"SecureStorageService"],[122,48,139,32],[122,49,139,33,"setBiometricEnabled"],[122,68,139,52],[122,69,139,53,"biometricEnabled"],[122,85,139,69],[122,86,139,70],[124,8,141,6],[125,8,142,6],[125,12,142,10,"biometricEnabled"],[125,28,142,26],[125,30,142,28],[126,10,143,8],[126,16,143,14,"SecureStorageService"],[126,29,143,34],[126,30,143,34,"SecureStorageService"],[126,50,143,34],[126,51,143,35,"storeBiometricKey"],[126,68,143,52],[126,69,143,53,"encryptionKey"],[126,82,143,66],[126,83,143,67],[127,8,144,6],[128,8,146,6,"setUser"],[128,15,146,13],[128,16,146,14,"data"],[128,20,146,18],[128,21,146,19,"user"],[128,25,146,23],[128,26,146,24],[129,8,147,6,"setMasterKeyState"],[129,25,147,23],[129,26,147,24,"encryptionKey"],[129,39,147,37],[129,40,147,38],[130,8,148,6,"setIsFirstTime"],[130,22,148,20],[130,23,148,21],[130,28,148,26],[130,29,148,27],[131,8,150,6,"console"],[131,15,150,13],[131,16,150,14,"log"],[131,19,150,17],[131,20,150,18],[131,50,150,48],[131,52,150,50,"email"],[131,57,150,55],[131,58,150,56],[132,6,151,4],[132,7,151,5],[132,8,151,6],[132,15,151,13,"error"],[132,20,151,18],[132,22,151,20],[133,8,152,6,"console"],[133,15,152,13],[133,16,152,14,"error"],[133,21,152,19],[133,22,152,20],[133,43,152,41],[133,45,152,43,"error"],[133,50,152,48],[133,51,152,49],[134,8,153,6],[134,14,153,12,"error"],[134,19,153,17],[135,6,154,4],[135,7,154,5],[135,16,154,14],[136,8,155,6,"setIsLoading"],[136,20,155,18],[136,21,155,19],[136,26,155,24],[136,27,155,25],[137,6,156,4],[138,4,157,2],[138,5,157,3],[139,4,159,2],[139,10,159,8,"login"],[139,15,159,13],[139,18,159,16],[139,24,159,16,"login"],[139,25,159,23,"email"],[139,30,159,36],[139,32,159,38,"password"],[139,40,159,54],[139,45,159,74],[140,6,160,4],[140,10,160,8],[141,8,161,6,"setIsLoading"],[141,20,161,18],[141,21,161,19],[141,25,161,23],[141,26,161,24],[143,8,163,6],[144,8,164,6],[144,14,164,12,"salt"],[144,18,164,16],[144,21,164,19],[144,27,164,25,"SecureStorageService"],[144,40,164,45],[144,41,164,45,"SecureStorageService"],[144,61,164,45],[144,62,164,46,"getUserSalt"],[144,73,164,57],[144,74,164,58],[144,75,164,59],[145,8,165,6],[145,12,165,10],[145,13,165,11,"salt"],[145,17,165,15],[145,19,165,17],[146,10,166,8],[146,16,166,14],[146,20,166,18,"Error"],[146,25,166,23],[146,26,166,24],[146,71,166,69],[146,72,166,70],[147,8,167,6],[149,8,169,6],[150,8,170,6],[150,14,170,12,"masterPasswordHash"],[150,32,170,30],[150,35,170,33],[150,41,170,39,"EncryptionService"],[150,57,170,56],[150,58,170,56,"EncryptionService"],[150,75,170,56],[150,76,170,57,"hashMasterPassword"],[150,94,170,75],[150,95,170,76,"password"],[150,103,170,84],[150,105,170,86,"salt"],[150,109,170,90],[150,110,170,91],[152,8,172,6],[153,8,173,6],[153,14,173,12,"encryptionKey"],[153,27,173,25],[153,30,173,28],[153,36,173,34,"EncryptionService"],[153,52,173,51],[153,53,173,51,"EncryptionService"],[153,70,173,51],[153,71,173,52,"deriveKey"],[153,80,173,61],[153,81,173,62,"password"],[153,89,173,70],[153,91,173,72,"salt"],[153,95,173,76],[153,96,173,77],[154,8,175,6],[154,14,175,12,"response"],[154,22,175,20],[154,25,175,23],[154,31,175,29,"fetch"],[154,36,175,34],[154,37,175,35],[154,40,175,38,"API_BASE_URL"],[154,52,175,50],[154,69,175,67],[154,71,175,69],[155,10,176,8,"method"],[155,16,176,14],[155,18,176,16],[155,24,176,22],[156,10,177,8,"headers"],[156,17,177,15],[156,19,177,17],[157,12,178,10],[157,26,178,24],[157,28,178,26],[158,10,179,8],[158,11,179,9],[159,10,180,8,"body"],[159,14,180,12],[159,16,180,14,"JSON"],[159,20,180,18],[159,21,180,19,"stringify"],[159,30,180,28],[159,31,180,29],[160,12,181,10,"email"],[160,17,181,15],[161,12,182,10,"master_password_hash"],[161,32,182,30],[161,34,182,32,"masterPasswordHash"],[162,10,183,8],[162,11,183,9],[163,8,184,6],[163,9,184,7],[163,10,184,8],[164,8,186,6],[164,12,186,10],[164,13,186,11,"response"],[164,21,186,19],[164,22,186,20,"ok"],[164,24,186,22],[164,26,186,24],[165,10,187,8],[165,16,187,14,"error"],[165,21,187,19],[165,24,187,22],[165,30,187,28,"response"],[165,38,187,36],[165,39,187,37,"json"],[165,43,187,41],[165,44,187,42],[165,45,187,43],[166,10,188,8],[166,16,188,14],[166,20,188,18,"Error"],[166,25,188,23],[166,26,188,24,"error"],[166,31,188,29],[166,32,188,30,"detail"],[166,38,188,36],[166,42,188,40],[166,56,188,54],[166,57,188,55],[167,8,189,6],[168,8,191,6],[168,14,191,12,"data"],[168,18,191,16],[168,21,191,19],[168,27,191,25,"response"],[168,35,191,33],[168,36,191,34,"json"],[168,40,191,38],[168,41,191,39],[168,42,191,40],[170,8,193,6],[171,8,194,6],[171,14,194,12,"SecureStorageService"],[171,27,194,32],[171,28,194,32,"SecureStorageService"],[171,48,194,32],[171,49,194,33,"storeAccessToken"],[171,65,194,49],[171,66,194,50,"data"],[171,70,194,54],[171,71,194,55,"access_token"],[171,83,194,67],[171,84,194,68],[172,8,195,6],[172,14,195,12,"SecureStorageService"],[172,27,195,32],[172,28,195,32,"SecureStorageService"],[172,48,195,32],[172,49,195,33,"storeUserData"],[172,62,195,46],[172,63,195,47,"data"],[172,67,195,51],[172,68,195,52,"user"],[172,72,195,56],[172,73,195,57],[173,8,196,6],[173,14,196,12,"SecureStorageService"],[173,27,196,32],[173,28,196,32,"SecureStorageService"],[173,48,196,32],[173,49,196,33,"storeMasterKey"],[173,63,196,47],[173,64,196,48,"encryptionKey"],[173,77,196,61],[173,78,196,62],[174,8,198,6,"setUser"],[174,15,198,13],[174,16,198,14,"data"],[174,20,198,18],[174,21,198,19,"user"],[174,25,198,23],[174,26,198,24],[175,8,199,6,"setMasterKeyState"],[175,25,199,23],[175,26,199,24,"encryptionKey"],[175,39,199,37],[175,40,199,38],[176,6,200,4],[176,7,200,5],[176,8,200,6],[176,15,200,13,"error"],[176,20,200,18],[176,22,200,20],[177,8,201,6,"console"],[177,15,201,13],[177,16,201,14,"error"],[177,21,201,19],[177,22,201,20],[177,36,201,34],[177,38,201,36,"error"],[177,43,201,41],[177,44,201,42],[178,8,202,6],[178,14,202,12,"error"],[178,19,202,17],[179,6,203,4],[179,7,203,5],[179,16,203,14],[180,8,204,6,"setIsLoading"],[180,20,204,18],[180,21,204,19],[180,26,204,24],[180,27,204,25],[181,6,205,4],[182,4,206,2],[182,5,206,3],[183,4,208,2],[183,10,208,8,"logout"],[183,16,208,14],[183,19,208,17],[183,25,208,17,"logout"],[183,26,208,17],[183,31,208,44],[184,6,209,4],[184,10,209,8],[185,8,210,6],[185,14,210,12,"SecureStorageService"],[185,27,210,32],[185,28,210,32,"SecureStorageService"],[185,48,210,32],[185,49,210,33,"clearAllData"],[185,61,210,45],[185,62,210,46],[185,63,210,47],[186,8,211,6,"setUser"],[186,15,211,13],[186,16,211,14],[186,20,211,18],[186,21,211,19],[187,8,212,6,"setMasterKeyState"],[187,25,212,23],[187,26,212,24],[187,30,212,28],[187,31,212,29],[188,6,213,4],[188,7,213,5],[188,8,213,6],[188,15,213,13,"error"],[188,20,213,18],[188,22,213,20],[189,8,214,6,"console"],[189,15,214,13],[189,16,214,14,"error"],[189,21,214,19],[189,22,214,20],[189,37,214,35],[189,39,214,37,"error"],[189,44,214,42],[189,45,214,43],[190,6,215,4],[191,4,216,2],[191,5,216,3],[192,4,218,2],[192,10,218,8,"setMasterKey"],[192,22,218,20],[192,25,218,24,"key"],[192,28,218,35],[192,32,218,40],[193,6,219,4,"setMasterKeyState"],[193,23,219,21],[193,24,219,22,"key"],[193,27,219,25],[193,28,219,26],[194,4,220,2],[194,5,220,3],[195,4,222,2],[195,10,222,8,"setBiometricRecovery"],[195,30,222,28],[195,33,222,31],[195,39,222,38,"enabled"],[195,46,222,54],[195,50,222,74],[196,6,223,4],[196,10,223,8],[197,8,224,6],[197,12,224,10,"enabled"],[197,19,224,17],[197,23,224,21,"masterKey"],[197,32,224,30],[197,34,224,32],[198,10,225,8],[198,16,225,14,"SecureStorageService"],[198,29,225,34],[198,30,225,34,"SecureStorageService"],[198,50,225,34],[198,51,225,35,"storeBiometricKey"],[198,68,225,52],[198,69,225,53,"masterKey"],[198,78,225,62],[198,79,225,63],[199,8,226,6],[200,8,227,6],[200,14,227,12,"SecureStorageService"],[200,27,227,32],[200,28,227,32,"SecureStorageService"],[200,48,227,32],[200,49,227,33,"setBiometricEnabled"],[200,68,227,52],[200,69,227,53,"enabled"],[200,76,227,60],[200,77,227,61],[201,8,229,6],[201,12,229,10,"user"],[201,16,229,14],[201,18,229,16],[202,10,230,8,"setUser"],[202,17,230,15],[202,18,230,15,"Object"],[202,24,230,15],[202,25,230,15,"assign"],[202,31,230,15],[202,36,230,21,"user"],[202,40,230,25],[203,12,230,27,"biometric_enabled"],[203,29,230,44],[203,31,230,46,"enabled"],[204,10,230,53],[204,12,230,55],[204,13,230,56],[205,8,231,6],[206,6,232,4],[206,7,232,5],[206,8,232,6],[206,15,232,13,"error"],[206,20,232,18],[206,22,232,20],[207,8,233,6,"console"],[207,15,233,13],[207,16,233,14,"error"],[207,21,233,19],[207,22,233,20],[207,46,233,44],[207,48,233,46,"error"],[207,53,233,51],[207,54,233,52],[208,8,234,6],[208,14,234,12,"error"],[208,19,234,17],[209,6,235,4],[210,4,236,2],[210,5,236,3],[211,4,238,2],[211,10,238,8,"value"],[211,15,238,30],[211,18,238,33],[212,6,239,4,"user"],[212,10,239,8],[213,6,240,4,"isLoading"],[213,15,240,13],[214,6,241,4,"isFirstTime"],[214,17,241,15],[215,6,242,4,"masterKey"],[215,15,242,13],[216,6,243,4,"login"],[216,11,243,9],[217,6,244,4,"register"],[217,14,244,12],[218,6,245,4,"logout"],[218,12,245,10],[219,6,246,4,"setMasterKey"],[219,18,246,16],[220,6,247,4,"setBiometricRecovery"],[221,4,248,2],[221,5,248,3],[222,4,250,2],[222,24,250,9],[222,28,250,9,"_reactJsxDevRuntime"],[222,47,250,9],[222,48,250,9,"jsxDEV"],[222,54,250,9],[222,56,250,10,"AuthContext"],[222,67,250,21],[222,68,250,22,"Provider"],[222,76,250,30],[223,6,250,31,"value"],[223,11,250,36],[223,13,250,38,"value"],[223,18,250,44],[224,6,250,44,"children"],[224,14,250,44],[224,16,250,46,"children"],[225,4,250,54],[226,6,250,54,"fileName"],[226,14,250,54],[226,16,250,54,"_jsxFileName"],[226,28,250,54],[227,6,250,54,"lineNumber"],[227,16,250,54],[228,6,250,54,"columnNumber"],[228,18,250,54],[229,4,250,54],[229,11,250,77],[229,12,250,78],[230,2,251,0],[230,3,251,1],[231,2,251,2,"_s"],[231,4,251,2],[231,5,34,13,"AuthProvider"],[231,17,34,54],[232,2,34,54,"_c"],[232,4,34,54],[232,7,34,13,"AuthProvider"],[232,19,34,54],[233,2,253,7],[233,8,253,13,"useAuth"],[233,15,253,20],[233,18,253,23,"useAuth"],[233,19,253,23],[233,24,253,46],[234,4,253,46,"_s2"],[234,7,253,46],[235,4,254,2],[235,10,254,8,"context"],[235,17,254,15],[235,20,254,18],[235,24,254,18,"useContext"],[235,30,254,28],[235,31,254,28,"useContext"],[235,41,254,28],[235,43,254,29,"AuthContext"],[235,54,254,40],[235,55,254,41],[236,4,255,2],[236,8,255,6,"context"],[236,15,255,13],[236,20,255,18,"undefined"],[236,29,255,27],[236,31,255,29],[237,6,256,4],[237,12,256,10],[237,16,256,14,"Error"],[237,21,256,19],[237,22,256,20],[237,67,256,65],[237,68,256,66],[238,4,257,2],[239,4,258,2],[239,11,258,9,"context"],[239,18,258,16],[240,2,259,0],[240,3,259,1],[241,2,259,2,"_s2"],[241,5,259,2],[241,6,253,13,"useAuth"],[241,13,253,20],[242,2,253,20],[242,6,253,20,"_c"],[242,8,253,20],[243,2,253,20,"$RefreshReg$"],[243,14,253,20],[243,15,253,20,"_c"],[243,17,253,20],[244,0,253,20],[244,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFwC;mBGE;GHuE;gBIE;GJ+C;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"},"hasCjsExports":false},"type":"js/module"}]}