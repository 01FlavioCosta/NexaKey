{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"]}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.VaultService = void 0;\n  var _env2 = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _encryption = require(_dependencyMap[1], \"../utils/encryption\");\n  var _storage = require(_dependencyMap[2], \"../utils/storage\");\n  const API_BASE_URL = _env2.env.EXPO_PUBLIC_BACKEND_URL || '';\n  class VaultService {\n    async getAuthHeaders() {\n      const token = await _storage.SecureStorageService.getAccessToken();\n      return {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n    async getVaultItems(masterKey) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          headers\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch vault items');\n        }\n        const encryptedItems = await response.json();\n\n        // Decrypt items client-side\n        const decryptedItems = [];\n        for (const item of encryptedItems) {\n          try {\n            const decryptedDataStr = _encryption.EncryptionService.decrypt(item.encrypted_data, masterKey);\n            const decryptedData = JSON.parse(decryptedDataStr);\n            decryptedItems.push({\n              id: item.id,\n              item_type: item.item_type,\n              decrypted_data: decryptedData,\n              created_at: item.created_at,\n              updated_at: item.updated_at\n            });\n          } catch (decryptError) {\n            console.error('Failed to decrypt item:', item.id, decryptError);\n            // Skip items that can't be decrypted\n          }\n        }\n        return decryptedItems;\n      } catch (error) {\n        console.error('VaultService.getVaultItems error:', error);\n        throw error;\n      }\n    }\n    async createVaultItem(itemType, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _encryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({\n            item_type: itemType,\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to create vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.createVaultItem error:', error);\n        throw error;\n      }\n    }\n    async updateVaultItem(itemId, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _encryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify({\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to update vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.updateVaultItem error:', error);\n        throw error;\n      }\n    }\n    async deleteVaultItem(itemId) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'DELETE',\n          headers\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.deleteVaultItem error:', error);\n        throw error;\n      }\n    }\n\n    // Template methods for different item types\n    createPasswordTemplate() {\n      return {\n        name: '',\n        username: '',\n        password: '',\n        website: '',\n        notes: ''\n      };\n    }\n    createCreditCardTemplate() {\n      return {\n        name: '',\n        cardNumber: '',\n        expiryDate: '',\n        cvv: '',\n        cardholderName: '',\n        notes: ''\n      };\n    }\n    createSecureNoteTemplate() {\n      return {\n        name: '',\n        notes: ''\n      };\n    }\n\n    // Generate strong password\n    generateStrongPassword(length = 16, includeSymbols = true) {\n      return _encryption.EncryptionService.generatePassword(length, true,\n      // uppercase\n      true,\n      // lowercase  \n      true,\n      // numbers\n      includeSymbols);\n    }\n\n    // Calculate password strength\n    calculatePasswordStrength(password) {\n      return _encryption.EncryptionService.calculatePasswordStrength(password);\n    }\n  }\n  exports.VaultService = VaultService;\n});","lineCount":159,"map":[[7,2,1,0],[7,6,1,0,"_encryption"],[7,17,1,0],[7,20,1,0,"require"],[7,27,1,0],[7,28,1,0,"_dependencyMap"],[7,42,1,0],[8,2,2,0],[8,6,2,0,"_storage"],[8,14,2,0],[8,17,2,0,"require"],[8,24,2,0],[8,25,2,0,"_dependencyMap"],[8,39,2,0],[9,2,34,0],[9,8,34,6,"API_BASE_URL"],[9,20,34,18],[9,23,34,21,"_env2"],[9,28,34,21],[9,29,34,21,"env"],[9,32,34,21],[9,33,34,21,"EXPO_PUBLIC_BACKEND_URL"],[9,56,34,21],[9,60,34,60],[9,62,34,62],[10,2,36,7],[10,8,36,13,"VaultService"],[10,20,36,25],[10,21,36,26],[11,4,37,2],[11,10,37,16,"getAuthHeaders"],[11,24,37,30,"getAuthHeaders"],[11,25,37,30],[11,27,37,66],[12,6,38,4],[12,12,38,10,"token"],[12,17,38,15],[12,20,38,18],[12,26,38,24,"SecureStorageService"],[12,55,38,44],[12,56,38,45,"getAccessToken"],[12,70,38,59],[12,71,38,60],[12,72,38,61],[13,6,39,4],[13,13,39,11],[14,8,40,6],[14,23,40,21],[14,25,40,23],[14,35,40,33,"token"],[14,40,40,38],[14,42,40,40],[15,8,41,6],[15,22,41,20],[15,24,41,22],[16,6,42,4],[16,7,42,5],[17,4,43,2],[18,4,45,2],[18,10,45,8,"getVaultItems"],[18,23,45,21,"getVaultItems"],[18,24,45,22,"masterKey"],[18,33,45,39],[18,35,45,72],[19,6,46,4],[19,10,46,8],[20,8,47,6],[20,14,47,12,"headers"],[20,21,47,19],[20,24,47,22],[20,30,47,28],[20,34,47,32],[20,35,47,33,"getAuthHeaders"],[20,49,47,47],[20,50,47,48],[20,51,47,49],[21,8,48,6],[21,14,48,12,"response"],[21,22,48,20],[21,25,48,23],[21,31,48,29,"fetch"],[21,36,48,34],[21,37,48,35],[21,40,48,38,"API_BASE_URL"],[21,52,48,50],[21,70,48,68],[21,72,48,70],[22,10,49,8,"headers"],[23,8,50,6],[23,9,50,7],[23,10,50,8],[24,8,52,6],[24,12,52,10],[24,13,52,11,"response"],[24,21,52,19],[24,22,52,20,"ok"],[24,24,52,22],[24,26,52,24],[25,10,53,8],[25,16,53,14],[25,20,53,18,"Error"],[25,25,53,23],[25,26,53,24],[25,55,53,53],[25,56,53,54],[26,8,54,6],[27,8,56,6],[27,14,56,12,"encryptedItems"],[27,28,56,39],[27,31,56,42],[27,37,56,48,"response"],[27,45,56,56],[27,46,56,57,"json"],[27,50,56,61],[27,51,56,62],[27,52,56,63],[29,8,58,6],[30,8,59,6],[30,14,59,12,"decryptedItems"],[30,28,59,48],[30,31,59,51],[30,33,59,53],[31,8,61,6],[31,13,61,11],[31,19,61,17,"item"],[31,23,61,21],[31,27,61,25,"encryptedItems"],[31,41,61,39],[31,43,61,41],[32,10,62,8],[32,14,62,12],[33,12,63,10],[33,18,63,16,"decryptedDataStr"],[33,34,63,32],[33,37,63,35,"EncryptionService"],[33,66,63,52],[33,67,63,53,"decrypt"],[33,74,63,60],[33,75,63,61,"item"],[33,79,63,65],[33,80,63,66,"encrypted_data"],[33,94,63,80],[33,96,63,82,"masterKey"],[33,105,63,91],[33,106,63,92],[34,12,64,10],[34,18,64,16,"decryptedData"],[34,31,64,29],[34,34,64,32,"JSON"],[34,38,64,36],[34,39,64,37,"parse"],[34,44,64,42],[34,45,64,43,"decryptedDataStr"],[34,61,64,59],[34,62,64,60],[35,12,66,10,"decryptedItems"],[35,26,66,24],[35,27,66,25,"push"],[35,31,66,29],[35,32,66,30],[36,14,67,12,"id"],[36,16,67,14],[36,18,67,16,"item"],[36,22,67,20],[36,23,67,21,"id"],[36,25,67,23],[37,14,68,12,"item_type"],[37,23,68,21],[37,25,68,23,"item"],[37,29,68,27],[37,30,68,28,"item_type"],[37,39,68,37],[38,14,69,12,"decrypted_data"],[38,28,69,26],[38,30,69,28,"decryptedData"],[38,43,69,41],[39,14,70,12,"created_at"],[39,24,70,22],[39,26,70,24,"item"],[39,30,70,28],[39,31,70,29,"created_at"],[39,41,70,39],[40,14,71,12,"updated_at"],[40,24,71,22],[40,26,71,24,"item"],[40,30,71,28],[40,31,71,29,"updated_at"],[41,12,72,10],[41,13,72,11],[41,14,72,12],[42,10,73,8],[42,11,73,9],[42,12,73,10],[42,19,73,17,"decryptError"],[42,31,73,29],[42,33,73,31],[43,12,74,10,"console"],[43,19,74,17],[43,20,74,18,"error"],[43,25,74,23],[43,26,74,24],[43,51,74,49],[43,53,74,51,"item"],[43,57,74,55],[43,58,74,56,"id"],[43,60,74,58],[43,62,74,60,"decryptError"],[43,74,74,72],[43,75,74,73],[44,12,75,10],[45,10,76,8],[46,8,77,6],[47,8,79,6],[47,15,79,13,"decryptedItems"],[47,29,79,27],[48,6,80,4],[48,7,80,5],[48,8,80,6],[48,15,80,13,"error"],[48,20,80,18],[48,22,80,20],[49,8,81,6,"console"],[49,15,81,13],[49,16,81,14,"error"],[49,21,81,19],[49,22,81,20],[49,57,81,55],[49,59,81,57,"error"],[49,64,81,62],[49,65,81,63],[50,8,82,6],[50,14,82,12,"error"],[50,19,82,17],[51,6,83,4],[52,4,84,2],[53,4,86,2],[53,10,86,8,"createVaultItem"],[53,25,86,23,"createVaultItem"],[53,26,87,4,"itemType"],[53,34,87,56],[53,36,88,4,"itemData"],[53,44,88,27],[53,46,89,4,"masterKey"],[53,55,89,21],[53,57,90,19],[54,6,91,4],[54,10,91,8],[55,8,92,6],[56,8,93,6],[56,14,93,12,"dataToEncrypt"],[56,27,93,25],[56,30,93,28,"JSON"],[56,34,93,32],[56,35,93,33,"stringify"],[56,44,93,42],[56,45,93,43,"itemData"],[56,53,93,51],[56,54,93,52],[57,8,94,6],[57,14,94,12,"encryptedData"],[57,27,94,25],[57,30,94,28,"EncryptionService"],[57,59,94,45],[57,60,94,46,"encrypt"],[57,67,94,53],[57,68,94,54,"dataToEncrypt"],[57,81,94,67],[57,83,94,69,"masterKey"],[57,92,94,78],[57,93,94,79],[58,8,96,6],[58,14,96,12,"headers"],[58,21,96,19],[58,24,96,22],[58,30,96,28],[58,34,96,32],[58,35,96,33,"getAuthHeaders"],[58,49,96,47],[58,50,96,48],[58,51,96,49],[59,8,97,6],[59,14,97,12,"response"],[59,22,97,20],[59,25,97,23],[59,31,97,29,"fetch"],[59,36,97,34],[59,37,97,35],[59,40,97,38,"API_BASE_URL"],[59,52,97,50],[59,70,97,68],[59,72,97,70],[60,10,98,8,"method"],[60,16,98,14],[60,18,98,16],[60,24,98,22],[61,10,99,8,"headers"],[61,17,99,15],[62,10,100,8,"body"],[62,14,100,12],[62,16,100,14,"JSON"],[62,20,100,18],[62,21,100,19,"stringify"],[62,30,100,28],[62,31,100,29],[63,12,101,10,"item_type"],[63,21,101,19],[63,23,101,21,"itemType"],[63,31,101,29],[64,12,102,10,"encrypted_data"],[64,26,102,24],[64,28,102,26,"encryptedData"],[65,10,103,8],[65,11,103,9],[66,8,104,6],[66,9,104,7],[66,10,104,8],[67,8,106,6],[67,12,106,10],[67,13,106,11,"response"],[67,21,106,19],[67,22,106,20,"ok"],[67,24,106,22],[67,26,106,24],[68,10,107,8],[68,16,107,14,"error"],[68,21,107,19],[68,24,107,22],[68,30,107,28,"response"],[68,38,107,36],[68,39,107,37,"json"],[68,43,107,41],[68,44,107,42],[68,45,107,43],[69,10,108,8],[69,16,108,14],[69,20,108,18,"Error"],[69,25,108,23],[69,26,108,24,"error"],[69,31,108,29],[69,32,108,30,"detail"],[69,38,108,36],[69,42,108,40],[69,71,108,69],[69,72,108,70],[70,8,109,6],[71,6,110,4],[71,7,110,5],[71,8,110,6],[71,15,110,13,"error"],[71,20,110,18],[71,22,110,20],[72,8,111,6,"console"],[72,15,111,13],[72,16,111,14,"error"],[72,21,111,19],[72,22,111,20],[72,59,111,57],[72,61,111,59,"error"],[72,66,111,64],[72,67,111,65],[73,8,112,6],[73,14,112,12,"error"],[73,19,112,17],[74,6,113,4],[75,4,114,2],[76,4,116,2],[76,10,116,8,"updateVaultItem"],[76,25,116,23,"updateVaultItem"],[76,26,117,4,"itemId"],[76,32,117,18],[76,34,118,4,"itemData"],[76,42,118,27],[76,44,119,4,"masterKey"],[76,53,119,21],[76,55,120,19],[77,6,121,4],[77,10,121,8],[78,8,122,6],[79,8,123,6],[79,14,123,12,"dataToEncrypt"],[79,27,123,25],[79,30,123,28,"JSON"],[79,34,123,32],[79,35,123,33,"stringify"],[79,44,123,42],[79,45,123,43,"itemData"],[79,53,123,51],[79,54,123,52],[80,8,124,6],[80,14,124,12,"encryptedData"],[80,27,124,25],[80,30,124,28,"EncryptionService"],[80,59,124,45],[80,60,124,46,"encrypt"],[80,67,124,53],[80,68,124,54,"dataToEncrypt"],[80,81,124,67],[80,83,124,69,"masterKey"],[80,92,124,78],[80,93,124,79],[81,8,126,6],[81,14,126,12,"headers"],[81,21,126,19],[81,24,126,22],[81,30,126,28],[81,34,126,32],[81,35,126,33,"getAuthHeaders"],[81,49,126,47],[81,50,126,48],[81,51,126,49],[82,8,127,6],[82,14,127,12,"response"],[82,22,127,20],[82,25,127,23],[82,31,127,29,"fetch"],[82,36,127,34],[82,37,127,35],[82,40,127,38,"API_BASE_URL"],[82,52,127,50],[82,72,127,70,"itemId"],[82,78,127,76],[82,80,127,78],[82,82,127,80],[83,10,128,8,"method"],[83,16,128,14],[83,18,128,16],[83,23,128,21],[84,10,129,8,"headers"],[84,17,129,15],[85,10,130,8,"body"],[85,14,130,12],[85,16,130,14,"JSON"],[85,20,130,18],[85,21,130,19,"stringify"],[85,30,130,28],[85,31,130,29],[86,12,131,10,"encrypted_data"],[86,26,131,24],[86,28,131,26,"encryptedData"],[87,10,132,8],[87,11,132,9],[88,8,133,6],[88,9,133,7],[88,10,133,8],[89,8,135,6],[89,12,135,10],[89,13,135,11,"response"],[89,21,135,19],[89,22,135,20,"ok"],[89,24,135,22],[89,26,135,24],[90,10,136,8],[90,16,136,14,"error"],[90,21,136,19],[90,24,136,22],[90,30,136,28,"response"],[90,38,136,36],[90,39,136,37,"json"],[90,43,136,41],[90,44,136,42],[90,45,136,43],[91,10,137,8],[91,16,137,14],[91,20,137,18,"Error"],[91,25,137,23],[91,26,137,24,"error"],[91,31,137,29],[91,32,137,30,"detail"],[91,38,137,36],[91,42,137,40],[91,71,137,69],[91,72,137,70],[92,8,138,6],[93,6,139,4],[93,7,139,5],[93,8,139,6],[93,15,139,13,"error"],[93,20,139,18],[93,22,139,20],[94,8,140,6,"console"],[94,15,140,13],[94,16,140,14,"error"],[94,21,140,19],[94,22,140,20],[94,59,140,57],[94,61,140,59,"error"],[94,66,140,64],[94,67,140,65],[95,8,141,6],[95,14,141,12,"error"],[95,19,141,17],[96,6,142,4],[97,4,143,2],[98,4,145,2],[98,10,145,8,"deleteVaultItem"],[98,25,145,23,"deleteVaultItem"],[98,26,145,24,"itemId"],[98,32,145,38],[98,34,145,55],[99,6,146,4],[99,10,146,8],[100,8,147,6],[100,14,147,12,"headers"],[100,21,147,19],[100,24,147,22],[100,30,147,28],[100,34,147,32],[100,35,147,33,"getAuthHeaders"],[100,49,147,47],[100,50,147,48],[100,51,147,49],[101,8,148,6],[101,14,148,12,"response"],[101,22,148,20],[101,25,148,23],[101,31,148,29,"fetch"],[101,36,148,34],[101,37,148,35],[101,40,148,38,"API_BASE_URL"],[101,52,148,50],[101,72,148,70,"itemId"],[101,78,148,76],[101,80,148,78],[101,82,148,80],[102,10,149,8,"method"],[102,16,149,14],[102,18,149,16],[102,26,149,24],[103,10,150,8,"headers"],[104,8,151,6],[104,9,151,7],[104,10,151,8],[105,8,153,6],[105,12,153,10],[105,13,153,11,"response"],[105,21,153,19],[105,22,153,20,"ok"],[105,24,153,22],[105,26,153,24],[106,10,154,8],[106,16,154,14,"error"],[106,21,154,19],[106,24,154,22],[106,30,154,28,"response"],[106,38,154,36],[106,39,154,37,"json"],[106,43,154,41],[106,44,154,42],[106,45,154,43],[107,10,155,8],[107,16,155,14],[107,20,155,18,"Error"],[107,25,155,23],[107,26,155,24,"error"],[107,31,155,29],[107,32,155,30,"detail"],[107,38,155,36],[107,42,155,40],[107,71,155,69],[107,72,155,70],[108,8,156,6],[109,6,157,4],[109,7,157,5],[109,8,157,6],[109,15,157,13,"error"],[109,20,157,18],[109,22,157,20],[110,8,158,6,"console"],[110,15,158,13],[110,16,158,14,"error"],[110,21,158,19],[110,22,158,20],[110,59,158,57],[110,61,158,59,"error"],[110,66,158,64],[110,67,158,65],[111,8,159,6],[111,14,159,12,"error"],[111,19,159,17],[112,6,160,4],[113,4,161,2],[115,4,163,2],[116,4,164,2,"createPasswordTemplate"],[116,26,164,24,"createPasswordTemplate"],[116,27,164,24],[116,29,164,42],[117,6,165,4],[117,13,165,11],[118,8,166,6,"name"],[118,12,166,10],[118,14,166,12],[118,16,166,14],[119,8,167,6,"username"],[119,16,167,14],[119,18,167,16],[119,20,167,18],[120,8,168,6,"password"],[120,16,168,14],[120,18,168,16],[120,20,168,18],[121,8,169,6,"website"],[121,15,169,13],[121,17,169,15],[121,19,169,17],[122,8,170,6,"notes"],[122,13,170,11],[122,15,170,13],[123,6,171,4],[123,7,171,5],[124,4,172,2],[125,4,174,2,"createCreditCardTemplate"],[125,28,174,26,"createCreditCardTemplate"],[125,29,174,26],[125,31,174,44],[126,6,175,4],[126,13,175,11],[127,8,176,6,"name"],[127,12,176,10],[127,14,176,12],[127,16,176,14],[128,8,177,6,"cardNumber"],[128,18,177,16],[128,20,177,18],[128,22,177,20],[129,8,178,6,"expiryDate"],[129,18,178,16],[129,20,178,18],[129,22,178,20],[130,8,179,6,"cvv"],[130,11,179,9],[130,13,179,11],[130,15,179,13],[131,8,180,6,"cardholderName"],[131,22,180,20],[131,24,180,22],[131,26,180,24],[132,8,181,6,"notes"],[132,13,181,11],[132,15,181,13],[133,6,182,4],[133,7,182,5],[134,4,183,2],[135,4,185,2,"createSecureNoteTemplate"],[135,28,185,26,"createSecureNoteTemplate"],[135,29,185,26],[135,31,185,44],[136,6,186,4],[136,13,186,11],[137,8,187,6,"name"],[137,12,187,10],[137,14,187,12],[137,16,187,14],[138,8,188,6,"notes"],[138,13,188,11],[138,15,188,13],[139,6,189,4],[139,7,189,5],[140,4,190,2],[142,4,192,2],[143,4,193,2,"generateStrongPassword"],[143,26,193,24,"generateStrongPassword"],[143,27,194,4,"length"],[143,33,194,18],[143,36,194,21],[143,38,194,23],[143,40,195,4,"includeSymbols"],[143,54,195,27],[143,57,195,30],[143,61,195,34],[143,63,196,12],[144,6,197,4],[144,13,197,11,"EncryptionService"],[144,42,197,28],[144,43,197,29,"generatePassword"],[144,59,197,45],[144,60,198,6,"length"],[144,66,198,12],[144,68,199,6],[144,72,199,10],[145,6,199,12],[146,6,200,6],[146,10,200,10],[147,6,200,12],[148,6,201,6],[148,10,201,10],[149,6,201,12],[150,6,202,6,"includeSymbols"],[150,20,203,4],[150,21,203,5],[151,4,204,2],[153,4,206,2],[154,4,207,2,"calculatePasswordStrength"],[154,29,207,27,"calculatePasswordStrength"],[154,30,207,28,"password"],[154,38,207,44],[154,40,207,46],[155,6,208,4],[155,13,208,11,"EncryptionService"],[155,42,208,28],[155,43,208,29,"calculatePasswordStrength"],[155,68,208,54],[155,69,208,55,"password"],[155,77,208,63],[155,78,208,64],[156,4,209,2],[157,2,210,0],[158,2,210,1,"exports"],[158,9,210,1],[158,10,210,1,"VaultService"],[158,22,210,1],[158,25,210,1,"VaultService"],[158,37,210,1],[159,0,210,1],[159,3]],"functionMap":{"names":["<global>","VaultService","getAuthHeaders","getVaultItems","createVaultItem","updateVaultItem","deleteVaultItem","createPasswordTemplate","createCreditCardTemplate","createSecureNoteTemplate","generateStrongPassword","calculatePasswordStrength"],"mappings":"AAA;OCmC;ECC;GDM;EEE;GFuC;EGE;GH4B;EIE;GJ2B;EKE;GLgB;EMG;GNQ;EOE;GPS;EQE;GRK;ESG;GTW;EUG;GVE"}},"type":"js/module"}]}