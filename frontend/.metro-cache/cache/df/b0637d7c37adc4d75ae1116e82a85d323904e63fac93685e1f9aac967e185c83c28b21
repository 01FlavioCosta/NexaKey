{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":34,"index":91}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"]}},{"name":"./ExpoLocalAuthentication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":64,"index":156}}],"key":"wO9yrMIaEu6Su2W3h/wpxu7Gg+g=","exportNames":["*"]}},{"name":"./LocalAuthentication.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":157},"end":{"line":4,"column":81,"index":238}}],"key":"lDec6gGZYHDsSqpXcagYVqewIdo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"AuthenticationType\", {\n    enumerable: true,\n    get: function () {\n      return _LocalAuthentication.AuthenticationType;\n    }\n  });\n  Object.defineProperty(exports, \"SecurityLevel\", {\n    enumerable: true,\n    get: function () {\n      return _LocalAuthentication.SecurityLevel;\n    }\n  });\n  exports.authenticateAsync = authenticateAsync;\n  exports.cancelAuthenticate = cancelAuthenticate;\n  exports.getEnrolledLevelAsync = getEnrolledLevelAsync;\n  exports.hasHardwareAsync = hasHardwareAsync;\n  exports.isEnrolledAsync = isEnrolledAsync;\n  exports.supportedAuthenticationTypesAsync = supportedAuthenticationTypesAsync;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _invariant = _interopRequireDefault(require(_dependencyMap[2], \"invariant\"));\n  var _ExpoLocalAuthentication = _interopRequireDefault(require(_dependencyMap[3], \"./ExpoLocalAuthentication\"));\n  var _LocalAuthentication = require(_dependencyMap[4], \"./LocalAuthentication.types\");\n  // @needsAudit\n  /**\n   * Determine whether a face or fingerprint scanner is available on the device.\n   * @return Returns a promise which fulfils with a `boolean` value indicating whether a face or\n   * fingerprint scanner is available on this device.\n   */\n  async function hasHardwareAsync() {\n    if (!_ExpoLocalAuthentication.default.hasHardwareAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'hasHardwareAsync');\n    }\n    return await _ExpoLocalAuthentication.default.hasHardwareAsync();\n  }\n  // @needsAudit\n  /**\n   * Determine what kinds of authentications are available on the device.\n   * @return Returns a promise which fulfils to an array containing [`AuthenticationType`s](#authenticationtype).\n   *\n   * Devices can support multiple authentication methods - i.e. `[1,2]` means the device supports both\n   * fingerprint and facial recognition. If none are supported, this method returns an empty array.\n   */\n  async function supportedAuthenticationTypesAsync() {\n    if (!_ExpoLocalAuthentication.default.supportedAuthenticationTypesAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'supportedAuthenticationTypesAsync');\n    }\n    return await _ExpoLocalAuthentication.default.supportedAuthenticationTypesAsync();\n  }\n  // @needsAudit\n  /**\n   * Determine whether the device has saved fingerprints or facial data to use for authentication.\n   * @return Returns a promise which fulfils to `boolean` value indicating whether the device has\n   * saved fingerprints or facial data for authentication.\n   */\n  async function isEnrolledAsync() {\n    if (!_ExpoLocalAuthentication.default.isEnrolledAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'isEnrolledAsync');\n    }\n    return await _ExpoLocalAuthentication.default.isEnrolledAsync();\n  }\n  // @needsAudit\n  /**\n   * Determine what kind of authentication is enrolled on the device.\n   * @return Returns a promise which fulfils with [`SecurityLevel`](#securitylevel).\n   * > **Note:** On Android devices prior to M, `SECRET` can be returned if only the SIM lock has been\n   * enrolled, which is not the method that [`authenticateAsync`](#localauthenticationauthenticateasyncoptions)\n   * prompts.\n   */\n  async function getEnrolledLevelAsync() {\n    if (!_ExpoLocalAuthentication.default.getEnrolledLevelAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'getEnrolledLevelAsync');\n    }\n    return await _ExpoLocalAuthentication.default.getEnrolledLevelAsync();\n  }\n  // @needsAudit\n  /**\n   * Attempts to authenticate via Fingerprint/TouchID (or FaceID if available on the device).\n   * > **Note:** Apple requires apps which use FaceID to provide a description of why they use this API.\n   * If you try to use FaceID on an iPhone with FaceID without providing `infoPlist.NSFaceIDUsageDescription`\n   * in `app.json`, the module will authenticate using device passcode. For more information about\n   * usage descriptions on iOS, see [permissions guide](/guides/permissions/#ios).\n   * @param options\n   * @return Returns a promise which fulfils with [`LocalAuthenticationResult`](#localauthenticationresult).\n   */\n  async function authenticateAsync(options = {}) {\n    if (!_ExpoLocalAuthentication.default.authenticateAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'authenticateAsync');\n    }\n    if (options.hasOwnProperty('promptMessage')) {\n      (0, _invariant.default)(typeof options.promptMessage === 'string' && options.promptMessage.length, 'LocalAuthentication.authenticateAsync : `options.promptMessage` must be a non-empty string.');\n    }\n    const promptMessage = options.promptMessage || 'Authenticate';\n    const cancelLabel = options.cancelLabel || 'Cancel';\n    const result = await _ExpoLocalAuthentication.default.authenticateAsync(Object.assign({}, options, {\n      promptMessage,\n      cancelLabel\n    }));\n    return result;\n  }\n  // @needsAudit\n  /**\n   * Cancels authentication flow.\n   * @platform android\n   */\n  async function cancelAuthenticate() {\n    if (!_ExpoLocalAuthentication.default.cancelAuthenticate) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'cancelAuthenticate');\n    }\n    await _ExpoLocalAuthentication.default.cancelAuthenticate();\n  }\n});","lineCount":116,"map":[[24,2,1,0],[24,6,1,0,"_expoModulesCore"],[24,22,1,0],[24,25,1,0,"require"],[24,32,1,0],[24,33,1,0,"_dependencyMap"],[24,47,1,0],[25,2,2,0],[25,6,2,0,"_invariant"],[25,16,2,0],[25,19,2,0,"_interopRequireDefault"],[25,41,2,0],[25,42,2,0,"require"],[25,49,2,0],[25,50,2,0,"_dependencyMap"],[25,64,2,0],[26,2,3,0],[26,6,3,0,"_ExpoLocalAuthentication"],[26,30,3,0],[26,33,3,0,"_interopRequireDefault"],[26,55,3,0],[26,56,3,0,"require"],[26,63,3,0],[26,64,3,0,"_dependencyMap"],[26,78,3,0],[27,2,4,0],[27,6,4,0,"_LocalAuthentication"],[27,26,4,0],[27,29,4,0,"require"],[27,36,4,0],[27,37,4,0,"_dependencyMap"],[27,51,4,0],[28,2,6,0],[29,2,7,0],[30,0,8,0],[31,0,9,0],[32,0,10,0],[33,0,11,0],[34,2,12,7],[34,17,12,22,"hasHardwareAsync"],[34,33,12,38,"hasHardwareAsync"],[34,34,12,38],[34,36,12,41],[35,4,13,4],[35,8,13,8],[35,9,13,9,"ExpoLocalAuthentication"],[35,41,13,32],[35,42,13,33,"hasHardwareAsync"],[35,58,13,49],[35,60,13,51],[36,6,14,8],[36,12,14,14],[36,16,14,18,"UnavailabilityError"],[36,52,14,37],[36,53,14,38],[36,80,14,65],[36,82,14,67],[36,100,14,85],[36,101,14,86],[37,4,15,4],[38,4,16,4],[38,11,16,11],[38,17,16,17,"ExpoLocalAuthentication"],[38,49,16,40],[38,50,16,41,"hasHardwareAsync"],[38,66,16,57],[38,67,16,58],[38,68,16,59],[39,2,17,0],[40,2,18,0],[41,2,19,0],[42,0,20,0],[43,0,21,0],[44,0,22,0],[45,0,23,0],[46,0,24,0],[47,0,25,0],[48,2,26,7],[48,17,26,22,"supportedAuthenticationTypesAsync"],[48,50,26,55,"supportedAuthenticationTypesAsync"],[48,51,26,55],[48,53,26,58],[49,4,27,4],[49,8,27,8],[49,9,27,9,"ExpoLocalAuthentication"],[49,41,27,32],[49,42,27,33,"supportedAuthenticationTypesAsync"],[49,75,27,66],[49,77,27,68],[50,6,28,8],[50,12,28,14],[50,16,28,18,"UnavailabilityError"],[50,52,28,37],[50,53,28,38],[50,80,28,65],[50,82,28,67],[50,117,28,102],[50,118,28,103],[51,4,29,4],[52,4,30,4],[52,11,30,11],[52,17,30,17,"ExpoLocalAuthentication"],[52,49,30,40],[52,50,30,41,"supportedAuthenticationTypesAsync"],[52,83,30,74],[52,84,30,75],[52,85,30,76],[53,2,31,0],[54,2,32,0],[55,2,33,0],[56,0,34,0],[57,0,35,0],[58,0,36,0],[59,0,37,0],[60,2,38,7],[60,17,38,22,"isEnrolledAsync"],[60,32,38,37,"isEnrolledAsync"],[60,33,38,37],[60,35,38,40],[61,4,39,4],[61,8,39,8],[61,9,39,9,"ExpoLocalAuthentication"],[61,41,39,32],[61,42,39,33,"isEnrolledAsync"],[61,57,39,48],[61,59,39,50],[62,6,40,8],[62,12,40,14],[62,16,40,18,"UnavailabilityError"],[62,52,40,37],[62,53,40,38],[62,80,40,65],[62,82,40,67],[62,99,40,84],[62,100,40,85],[63,4,41,4],[64,4,42,4],[64,11,42,11],[64,17,42,17,"ExpoLocalAuthentication"],[64,49,42,40],[64,50,42,41,"isEnrolledAsync"],[64,65,42,56],[64,66,42,57],[64,67,42,58],[65,2,43,0],[66,2,44,0],[67,2,45,0],[68,0,46,0],[69,0,47,0],[70,0,48,0],[71,0,49,0],[72,0,50,0],[73,0,51,0],[74,2,52,7],[74,17,52,22,"getEnrolledLevelAsync"],[74,38,52,43,"getEnrolledLevelAsync"],[74,39,52,43],[74,41,52,46],[75,4,53,4],[75,8,53,8],[75,9,53,9,"ExpoLocalAuthentication"],[75,41,53,32],[75,42,53,33,"getEnrolledLevelAsync"],[75,63,53,54],[75,65,53,56],[76,6,54,8],[76,12,54,14],[76,16,54,18,"UnavailabilityError"],[76,52,54,37],[76,53,54,38],[76,80,54,65],[76,82,54,67],[76,105,54,90],[76,106,54,91],[77,4,55,4],[78,4,56,4],[78,11,56,11],[78,17,56,17,"ExpoLocalAuthentication"],[78,49,56,40],[78,50,56,41,"getEnrolledLevelAsync"],[78,71,56,62],[78,72,56,63],[78,73,56,64],[79,2,57,0],[80,2,58,0],[81,2,59,0],[82,0,60,0],[83,0,61,0],[84,0,62,0],[85,0,63,0],[86,0,64,0],[87,0,65,0],[88,0,66,0],[89,0,67,0],[90,2,68,7],[90,17,68,22,"authenticateAsync"],[90,34,68,39,"authenticateAsync"],[90,35,68,40,"options"],[90,42,68,47],[90,45,68,50],[90,46,68,51],[90,47,68,52],[90,49,68,54],[91,4,69,4],[91,8,69,8],[91,9,69,9,"ExpoLocalAuthentication"],[91,41,69,32],[91,42,69,33,"authenticateAsync"],[91,59,69,50],[91,61,69,52],[92,6,70,8],[92,12,70,14],[92,16,70,18,"UnavailabilityError"],[92,52,70,37],[92,53,70,38],[92,80,70,65],[92,82,70,67],[92,101,70,86],[92,102,70,87],[93,4,71,4],[94,4,72,4],[94,8,72,8,"options"],[94,15,72,15],[94,16,72,16,"hasOwnProperty"],[94,30,72,30],[94,31,72,31],[94,46,72,46],[94,47,72,47],[94,49,72,49],[95,6,73,8],[95,10,73,8,"invariant"],[95,28,73,17],[95,30,73,18],[95,37,73,25,"options"],[95,44,73,32],[95,45,73,33,"promptMessage"],[95,58,73,46],[95,63,73,51],[95,71,73,59],[95,75,73,63,"options"],[95,82,73,70],[95,83,73,71,"promptMessage"],[95,96,73,84],[95,97,73,85,"length"],[95,103,73,91],[95,105,73,93],[95,198,73,186],[95,199,73,187],[96,4,74,4],[97,4,75,4],[97,10,75,10,"promptMessage"],[97,23,75,23],[97,26,75,26,"options"],[97,33,75,33],[97,34,75,34,"promptMessage"],[97,47,75,47],[97,51,75,51],[97,65,75,65],[98,4,76,4],[98,10,76,10,"cancelLabel"],[98,21,76,21],[98,24,76,24,"options"],[98,31,76,31],[98,32,76,32,"cancelLabel"],[98,43,76,43],[98,47,76,47],[98,55,76,55],[99,4,77,4],[99,10,77,10,"result"],[99,16,77,16],[99,19,77,19],[99,25,77,25,"ExpoLocalAuthentication"],[99,57,77,48],[99,58,77,49,"authenticateAsync"],[99,75,77,66],[99,76,77,66,"Object"],[99,82,77,66],[99,83,77,66,"assign"],[99,89,77,66],[99,94,78,11,"options"],[99,101,78,18],[100,6,79,8,"promptMessage"],[100,19,79,21],[101,6,80,8,"cancelLabel"],[102,4,80,19],[102,6,81,5],[102,7,81,6],[103,4,82,4],[103,11,82,11,"result"],[103,17,82,17],[104,2,83,0],[105,2,84,0],[106,2,85,0],[107,0,86,0],[108,0,87,0],[109,0,88,0],[110,2,89,7],[110,17,89,22,"cancelAuthenticate"],[110,35,89,40,"cancelAuthenticate"],[110,36,89,40],[110,38,89,43],[111,4,90,4],[111,8,90,8],[111,9,90,9,"ExpoLocalAuthentication"],[111,41,90,32],[111,42,90,33,"cancelAuthenticate"],[111,60,90,51],[111,62,90,53],[112,6,91,8],[112,12,91,14],[112,16,91,18,"UnavailabilityError"],[112,52,91,37],[112,53,91,38],[112,80,91,65],[112,82,91,67],[112,102,91,87],[112,103,91,88],[113,4,92,4],[114,4,93,4],[114,10,93,10,"ExpoLocalAuthentication"],[114,42,93,33],[114,43,93,34,"cancelAuthenticate"],[114,61,93,52],[114,62,93,53],[114,63,93,54],[115,2,94,0],[116,0,94,1],[116,3]],"functionMap":{"names":["<global>","hasHardwareAsync","supportedAuthenticationTypesAsync","isEnrolledAsync","getEnrolledLevelAsync","authenticateAsync","cancelAuthenticate"],"mappings":"AAA;OCW;CDK;OES;CFK;OGO;CHK;OIS;CJK;OKW;CLe;OMM;CNK"}},"type":"js/module"}]}