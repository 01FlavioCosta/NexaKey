{"dependencies":[{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"VaultService\", {\n    enumerable: true,\n    get: function () {\n      return VaultService;\n    }\n  });\n  var _utilsEncryption = require(_dependencyMap[0], \"../utils/encryption\");\n  var _utilsStorage = require(_dependencyMap[1], \"../utils/storage\");\n  const API_BASE_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  class VaultService {\n    async getAuthHeaders() {\n      const token = await _utilsStorage.SecureStorageService.getAccessToken();\n      return {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n    async getVaultItems(masterKey) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          headers\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch vault items');\n        }\n        const encryptedItems = await response.json();\n\n        // Decrypt items client-side\n        const decryptedItems = [];\n        for (const item of encryptedItems) {\n          try {\n            const decryptedDataStr = _utilsEncryption.EncryptionService.decrypt(item.encrypted_data, masterKey);\n            const decryptedData = JSON.parse(decryptedDataStr);\n            decryptedItems.push({\n              id: item.id,\n              item_type: item.item_type,\n              decrypted_data: decryptedData,\n              created_at: item.created_at,\n              updated_at: item.updated_at\n            });\n          } catch (decryptError) {\n            console.error('Failed to decrypt item:', item.id, decryptError);\n            // Skip items that can't be decrypted\n          }\n        }\n        return decryptedItems;\n      } catch (error) {\n        console.error('VaultService.getVaultItems error:', error);\n        throw error;\n      }\n    }\n    async createVaultItem(itemType, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({\n            item_type: itemType,\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to create vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.createVaultItem error:', error);\n        throw error;\n      }\n    }\n    async updateVaultItem(itemId, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify({\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to update vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.updateVaultItem error:', error);\n        throw error;\n      }\n    }\n    async deleteVaultItem(itemId) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'DELETE',\n          headers\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.deleteVaultItem error:', error);\n        throw error;\n      }\n    }\n\n    // Template methods for different item types\n    createPasswordTemplate() {\n      return {\n        name: '',\n        username: '',\n        password: '',\n        website: '',\n        notes: ''\n      };\n    }\n    createCreditCardTemplate() {\n      return {\n        name: '',\n        cardNumber: '',\n        expiryDate: '',\n        cvv: '',\n        cardholderName: '',\n        notes: ''\n      };\n    }\n    createSecureNoteTemplate() {\n      return {\n        name: '',\n        notes: ''\n      };\n    }\n\n    // Generate strong password\n    generateStrongPassword(length = 16, includeSymbols = true) {\n      return _utilsEncryption.EncryptionService.generatePassword(length, true,\n      // uppercase\n      true,\n      // lowercase  \n      true,\n      // numbers\n      includeSymbols);\n    }\n\n    // Calculate password strength\n    calculatePasswordStrength(password) {\n      return _utilsEncryption.EncryptionService.calculatePasswordStrength(password);\n    }\n  }\n});","lineCount":164,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,0,"VaultService"],[10,25,36,0],[11,4,36,0],[12,2,36,0],[13,2,1,0],[13,6,1,0,"_utilsEncryption"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_utilsStorage"],[14,19,2,0],[14,22,2,0,"require"],[14,29,2,0],[14,30,2,0,"_dependencyMap"],[14,44,2,0],[15,2,34,0],[15,8,34,6,"API_BASE_URL"],[15,20,34,18],[15,23,34,21,"process"],[15,30,34,28],[15,31,34,29,"env"],[15,34,34,32],[15,35,34,33,"EXPO_PUBLIC_BACKEND_URL"],[15,58,34,56],[15,62,34,60],[15,64,34,62],[16,2,36,7],[16,8,36,13,"VaultService"],[16,20,36,25],[16,21,36,26],[17,4,37,2],[17,10,37,16,"getAuthHeaders"],[17,24,37,30,"getAuthHeaders"],[17,25,37,30],[17,27,37,66],[18,6,38,4],[18,12,38,10,"token"],[18,17,38,15],[18,20,38,18],[18,26,38,24,"SecureStorageService"],[18,39,38,44],[18,40,38,44,"SecureStorageService"],[18,60,38,44],[18,61,38,45,"getAccessToken"],[18,75,38,59],[18,76,38,60],[18,77,38,61],[19,6,39,4],[19,13,39,11],[20,8,40,6],[20,23,40,21],[20,25,40,23],[20,35,40,33,"token"],[20,40,40,38],[20,42,40,40],[21,8,41,6],[21,22,41,20],[21,24,41,22],[22,6,42,4],[22,7,42,5],[23,4,43,2],[24,4,45,2],[24,10,45,8,"getVaultItems"],[24,23,45,21,"getVaultItems"],[24,24,45,22,"masterKey"],[24,33,45,39],[24,35,45,72],[25,6,46,4],[25,10,46,8],[26,8,47,6],[26,14,47,12,"headers"],[26,21,47,19],[26,24,47,22],[26,30,47,28],[26,34,47,32],[26,35,47,33,"getAuthHeaders"],[26,49,47,47],[26,50,47,48],[26,51,47,49],[27,8,48,6],[27,14,48,12,"response"],[27,22,48,20],[27,25,48,23],[27,31,48,29,"fetch"],[27,36,48,34],[27,37,48,35],[27,40,48,38,"API_BASE_URL"],[27,52,48,50],[27,70,48,68],[27,72,48,70],[28,10,49,8,"headers"],[29,8,50,6],[29,9,50,7],[29,10,50,8],[30,8,52,6],[30,12,52,10],[30,13,52,11,"response"],[30,21,52,19],[30,22,52,20,"ok"],[30,24,52,22],[30,26,52,24],[31,10,53,8],[31,16,53,14],[31,20,53,18,"Error"],[31,25,53,23],[31,26,53,24],[31,55,53,53],[31,56,53,54],[32,8,54,6],[33,8,56,6],[33,14,56,12,"encryptedItems"],[33,28,56,39],[33,31,56,42],[33,37,56,48,"response"],[33,45,56,56],[33,46,56,57,"json"],[33,50,56,61],[33,51,56,62],[33,52,56,63],[35,8,58,6],[36,8,59,6],[36,14,59,12,"decryptedItems"],[36,28,59,48],[36,31,59,51],[36,33,59,53],[37,8,61,6],[37,13,61,11],[37,19,61,17,"item"],[37,23,61,21],[37,27,61,25,"encryptedItems"],[37,41,61,39],[37,43,61,41],[38,10,62,8],[38,14,62,12],[39,12,63,10],[39,18,63,16,"decryptedDataStr"],[39,34,63,32],[39,37,63,35,"EncryptionService"],[39,53,63,52],[39,54,63,52,"EncryptionService"],[39,71,63,52],[39,72,63,53,"decrypt"],[39,79,63,60],[39,80,63,61,"item"],[39,84,63,65],[39,85,63,66,"encrypted_data"],[39,99,63,80],[39,101,63,82,"masterKey"],[39,110,63,91],[39,111,63,92],[40,12,64,10],[40,18,64,16,"decryptedData"],[40,31,64,29],[40,34,64,32,"JSON"],[40,38,64,36],[40,39,64,37,"parse"],[40,44,64,42],[40,45,64,43,"decryptedDataStr"],[40,61,64,59],[40,62,64,60],[41,12,66,10,"decryptedItems"],[41,26,66,24],[41,27,66,25,"push"],[41,31,66,29],[41,32,66,30],[42,14,67,12,"id"],[42,16,67,14],[42,18,67,16,"item"],[42,22,67,20],[42,23,67,21,"id"],[42,25,67,23],[43,14,68,12,"item_type"],[43,23,68,21],[43,25,68,23,"item"],[43,29,68,27],[43,30,68,28,"item_type"],[43,39,68,37],[44,14,69,12,"decrypted_data"],[44,28,69,26],[44,30,69,28,"decryptedData"],[44,43,69,41],[45,14,70,12,"created_at"],[45,24,70,22],[45,26,70,24,"item"],[45,30,70,28],[45,31,70,29,"created_at"],[45,41,70,39],[46,14,71,12,"updated_at"],[46,24,71,22],[46,26,71,24,"item"],[46,30,71,28],[46,31,71,29,"updated_at"],[47,12,72,10],[47,13,72,11],[47,14,72,12],[48,10,73,8],[48,11,73,9],[48,12,73,10],[48,19,73,17,"decryptError"],[48,31,73,29],[48,33,73,31],[49,12,74,10,"console"],[49,19,74,17],[49,20,74,18,"error"],[49,25,74,23],[49,26,74,24],[49,51,74,49],[49,53,74,51,"item"],[49,57,74,55],[49,58,74,56,"id"],[49,60,74,58],[49,62,74,60,"decryptError"],[49,74,74,72],[49,75,74,73],[50,12,75,10],[51,10,76,8],[52,8,77,6],[53,8,79,6],[53,15,79,13,"decryptedItems"],[53,29,79,27],[54,6,80,4],[54,7,80,5],[54,8,80,6],[54,15,80,13,"error"],[54,20,80,18],[54,22,80,20],[55,8,81,6,"console"],[55,15,81,13],[55,16,81,14,"error"],[55,21,81,19],[55,22,81,20],[55,57,81,55],[55,59,81,57,"error"],[55,64,81,62],[55,65,81,63],[56,8,82,6],[56,14,82,12,"error"],[56,19,82,17],[57,6,83,4],[58,4,84,2],[59,4,86,2],[59,10,86,8,"createVaultItem"],[59,25,86,23,"createVaultItem"],[59,26,87,4,"itemType"],[59,34,87,56],[59,36,88,4,"itemData"],[59,44,88,27],[59,46,89,4,"masterKey"],[59,55,89,21],[59,57,90,19],[60,6,91,4],[60,10,91,8],[61,8,92,6],[62,8,93,6],[62,14,93,12,"dataToEncrypt"],[62,27,93,25],[62,30,93,28,"JSON"],[62,34,93,32],[62,35,93,33,"stringify"],[62,44,93,42],[62,45,93,43,"itemData"],[62,53,93,51],[62,54,93,52],[63,8,94,6],[63,14,94,12,"encryptedData"],[63,27,94,25],[63,30,94,28,"EncryptionService"],[63,46,94,45],[63,47,94,45,"EncryptionService"],[63,64,94,45],[63,65,94,46,"encrypt"],[63,72,94,53],[63,73,94,54,"dataToEncrypt"],[63,86,94,67],[63,88,94,69,"masterKey"],[63,97,94,78],[63,98,94,79],[64,8,96,6],[64,14,96,12,"headers"],[64,21,96,19],[64,24,96,22],[64,30,96,28],[64,34,96,32],[64,35,96,33,"getAuthHeaders"],[64,49,96,47],[64,50,96,48],[64,51,96,49],[65,8,97,6],[65,14,97,12,"response"],[65,22,97,20],[65,25,97,23],[65,31,97,29,"fetch"],[65,36,97,34],[65,37,97,35],[65,40,97,38,"API_BASE_URL"],[65,52,97,50],[65,70,97,68],[65,72,97,70],[66,10,98,8,"method"],[66,16,98,14],[66,18,98,16],[66,24,98,22],[67,10,99,8,"headers"],[67,17,99,15],[68,10,100,8,"body"],[68,14,100,12],[68,16,100,14,"JSON"],[68,20,100,18],[68,21,100,19,"stringify"],[68,30,100,28],[68,31,100,29],[69,12,101,10,"item_type"],[69,21,101,19],[69,23,101,21,"itemType"],[69,31,101,29],[70,12,102,10,"encrypted_data"],[70,26,102,24],[70,28,102,26,"encryptedData"],[71,10,103,8],[71,11,103,9],[72,8,104,6],[72,9,104,7],[72,10,104,8],[73,8,106,6],[73,12,106,10],[73,13,106,11,"response"],[73,21,106,19],[73,22,106,20,"ok"],[73,24,106,22],[73,26,106,24],[74,10,107,8],[74,16,107,14,"error"],[74,21,107,19],[74,24,107,22],[74,30,107,28,"response"],[74,38,107,36],[74,39,107,37,"json"],[74,43,107,41],[74,44,107,42],[74,45,107,43],[75,10,108,8],[75,16,108,14],[75,20,108,18,"Error"],[75,25,108,23],[75,26,108,24,"error"],[75,31,108,29],[75,32,108,30,"detail"],[75,38,108,36],[75,42,108,40],[75,71,108,69],[75,72,108,70],[76,8,109,6],[77,6,110,4],[77,7,110,5],[77,8,110,6],[77,15,110,13,"error"],[77,20,110,18],[77,22,110,20],[78,8,111,6,"console"],[78,15,111,13],[78,16,111,14,"error"],[78,21,111,19],[78,22,111,20],[78,59,111,57],[78,61,111,59,"error"],[78,66,111,64],[78,67,111,65],[79,8,112,6],[79,14,112,12,"error"],[79,19,112,17],[80,6,113,4],[81,4,114,2],[82,4,116,2],[82,10,116,8,"updateVaultItem"],[82,25,116,23,"updateVaultItem"],[82,26,117,4,"itemId"],[82,32,117,18],[82,34,118,4,"itemData"],[82,42,118,27],[82,44,119,4,"masterKey"],[82,53,119,21],[82,55,120,19],[83,6,121,4],[83,10,121,8],[84,8,122,6],[85,8,123,6],[85,14,123,12,"dataToEncrypt"],[85,27,123,25],[85,30,123,28,"JSON"],[85,34,123,32],[85,35,123,33,"stringify"],[85,44,123,42],[85,45,123,43,"itemData"],[85,53,123,51],[85,54,123,52],[86,8,124,6],[86,14,124,12,"encryptedData"],[86,27,124,25],[86,30,124,28,"EncryptionService"],[86,46,124,45],[86,47,124,45,"EncryptionService"],[86,64,124,45],[86,65,124,46,"encrypt"],[86,72,124,53],[86,73,124,54,"dataToEncrypt"],[86,86,124,67],[86,88,124,69,"masterKey"],[86,97,124,78],[86,98,124,79],[87,8,126,6],[87,14,126,12,"headers"],[87,21,126,19],[87,24,126,22],[87,30,126,28],[87,34,126,32],[87,35,126,33,"getAuthHeaders"],[87,49,126,47],[87,50,126,48],[87,51,126,49],[88,8,127,6],[88,14,127,12,"response"],[88,22,127,20],[88,25,127,23],[88,31,127,29,"fetch"],[88,36,127,34],[88,37,127,35],[88,40,127,38,"API_BASE_URL"],[88,52,127,50],[88,72,127,70,"itemId"],[88,78,127,76],[88,80,127,78],[88,82,127,80],[89,10,128,8,"method"],[89,16,128,14],[89,18,128,16],[89,23,128,21],[90,10,129,8,"headers"],[90,17,129,15],[91,10,130,8,"body"],[91,14,130,12],[91,16,130,14,"JSON"],[91,20,130,18],[91,21,130,19,"stringify"],[91,30,130,28],[91,31,130,29],[92,12,131,10,"encrypted_data"],[92,26,131,24],[92,28,131,26,"encryptedData"],[93,10,132,8],[93,11,132,9],[94,8,133,6],[94,9,133,7],[94,10,133,8],[95,8,135,6],[95,12,135,10],[95,13,135,11,"response"],[95,21,135,19],[95,22,135,20,"ok"],[95,24,135,22],[95,26,135,24],[96,10,136,8],[96,16,136,14,"error"],[96,21,136,19],[96,24,136,22],[96,30,136,28,"response"],[96,38,136,36],[96,39,136,37,"json"],[96,43,136,41],[96,44,136,42],[96,45,136,43],[97,10,137,8],[97,16,137,14],[97,20,137,18,"Error"],[97,25,137,23],[97,26,137,24,"error"],[97,31,137,29],[97,32,137,30,"detail"],[97,38,137,36],[97,42,137,40],[97,71,137,69],[97,72,137,70],[98,8,138,6],[99,6,139,4],[99,7,139,5],[99,8,139,6],[99,15,139,13,"error"],[99,20,139,18],[99,22,139,20],[100,8,140,6,"console"],[100,15,140,13],[100,16,140,14,"error"],[100,21,140,19],[100,22,140,20],[100,59,140,57],[100,61,140,59,"error"],[100,66,140,64],[100,67,140,65],[101,8,141,6],[101,14,141,12,"error"],[101,19,141,17],[102,6,142,4],[103,4,143,2],[104,4,145,2],[104,10,145,8,"deleteVaultItem"],[104,25,145,23,"deleteVaultItem"],[104,26,145,24,"itemId"],[104,32,145,38],[104,34,145,55],[105,6,146,4],[105,10,146,8],[106,8,147,6],[106,14,147,12,"headers"],[106,21,147,19],[106,24,147,22],[106,30,147,28],[106,34,147,32],[106,35,147,33,"getAuthHeaders"],[106,49,147,47],[106,50,147,48],[106,51,147,49],[107,8,148,6],[107,14,148,12,"response"],[107,22,148,20],[107,25,148,23],[107,31,148,29,"fetch"],[107,36,148,34],[107,37,148,35],[107,40,148,38,"API_BASE_URL"],[107,52,148,50],[107,72,148,70,"itemId"],[107,78,148,76],[107,80,148,78],[107,82,148,80],[108,10,149,8,"method"],[108,16,149,14],[108,18,149,16],[108,26,149,24],[109,10,150,8,"headers"],[110,8,151,6],[110,9,151,7],[110,10,151,8],[111,8,153,6],[111,12,153,10],[111,13,153,11,"response"],[111,21,153,19],[111,22,153,20,"ok"],[111,24,153,22],[111,26,153,24],[112,10,154,8],[112,16,154,14,"error"],[112,21,154,19],[112,24,154,22],[112,30,154,28,"response"],[112,38,154,36],[112,39,154,37,"json"],[112,43,154,41],[112,44,154,42],[112,45,154,43],[113,10,155,8],[113,16,155,14],[113,20,155,18,"Error"],[113,25,155,23],[113,26,155,24,"error"],[113,31,155,29],[113,32,155,30,"detail"],[113,38,155,36],[113,42,155,40],[113,71,155,69],[113,72,155,70],[114,8,156,6],[115,6,157,4],[115,7,157,5],[115,8,157,6],[115,15,157,13,"error"],[115,20,157,18],[115,22,157,20],[116,8,158,6,"console"],[116,15,158,13],[116,16,158,14,"error"],[116,21,158,19],[116,22,158,20],[116,59,158,57],[116,61,158,59,"error"],[116,66,158,64],[116,67,158,65],[117,8,159,6],[117,14,159,12,"error"],[117,19,159,17],[118,6,160,4],[119,4,161,2],[121,4,163,2],[122,4,164,2,"createPasswordTemplate"],[122,26,164,24,"createPasswordTemplate"],[122,27,164,24],[122,29,164,42],[123,6,165,4],[123,13,165,11],[124,8,166,6,"name"],[124,12,166,10],[124,14,166,12],[124,16,166,14],[125,8,167,6,"username"],[125,16,167,14],[125,18,167,16],[125,20,167,18],[126,8,168,6,"password"],[126,16,168,14],[126,18,168,16],[126,20,168,18],[127,8,169,6,"website"],[127,15,169,13],[127,17,169,15],[127,19,169,17],[128,8,170,6,"notes"],[128,13,170,11],[128,15,170,13],[129,6,171,4],[129,7,171,5],[130,4,172,2],[131,4,174,2,"createCreditCardTemplate"],[131,28,174,26,"createCreditCardTemplate"],[131,29,174,26],[131,31,174,44],[132,6,175,4],[132,13,175,11],[133,8,176,6,"name"],[133,12,176,10],[133,14,176,12],[133,16,176,14],[134,8,177,6,"cardNumber"],[134,18,177,16],[134,20,177,18],[134,22,177,20],[135,8,178,6,"expiryDate"],[135,18,178,16],[135,20,178,18],[135,22,178,20],[136,8,179,6,"cvv"],[136,11,179,9],[136,13,179,11],[136,15,179,13],[137,8,180,6,"cardholderName"],[137,22,180,20],[137,24,180,22],[137,26,180,24],[138,8,181,6,"notes"],[138,13,181,11],[138,15,181,13],[139,6,182,4],[139,7,182,5],[140,4,183,2],[141,4,185,2,"createSecureNoteTemplate"],[141,28,185,26,"createSecureNoteTemplate"],[141,29,185,26],[141,31,185,44],[142,6,186,4],[142,13,186,11],[143,8,187,6,"name"],[143,12,187,10],[143,14,187,12],[143,16,187,14],[144,8,188,6,"notes"],[144,13,188,11],[144,15,188,13],[145,6,189,4],[145,7,189,5],[146,4,190,2],[148,4,192,2],[149,4,193,2,"generateStrongPassword"],[149,26,193,24,"generateStrongPassword"],[149,27,194,4,"length"],[149,33,194,18],[149,36,194,21],[149,38,194,23],[149,40,195,4,"includeSymbols"],[149,54,195,27],[149,57,195,30],[149,61,195,34],[149,63,196,12],[150,6,197,4],[150,13,197,11,"EncryptionService"],[150,29,197,28],[150,30,197,28,"EncryptionService"],[150,47,197,28],[150,48,197,29,"generatePassword"],[150,64,197,45],[150,65,198,6,"length"],[150,71,198,12],[150,73,199,6],[150,77,199,10],[151,6,199,12],[152,6,200,6],[152,10,200,10],[153,6,200,12],[154,6,201,6],[154,10,201,10],[155,6,201,12],[156,6,202,6,"includeSymbols"],[156,20,203,4],[156,21,203,5],[157,4,204,2],[159,4,206,2],[160,4,207,2,"calculatePasswordStrength"],[160,29,207,27,"calculatePasswordStrength"],[160,30,207,28,"password"],[160,38,207,44],[160,40,207,46],[161,6,208,4],[161,13,208,11,"EncryptionService"],[161,29,208,28],[161,30,208,28,"EncryptionService"],[161,47,208,28],[161,48,208,29,"calculatePasswordStrength"],[161,73,208,54],[161,74,208,55,"password"],[161,82,208,63],[161,83,208,64],[162,4,209,2],[163,2,210,0],[164,0,210,1],[164,3]],"functionMap":{"names":["<global>","VaultService","getAuthHeaders","getVaultItems","createVaultItem","updateVaultItem","deleteVaultItem","createPasswordTemplate","createCreditCardTemplate","createSecureNoteTemplate","generateStrongPassword","calculatePasswordStrength"],"mappings":"AAA;OCmC;ECC;GDM;EEE;GFuC;EGE;GH4B;EIE;GJ2B;EKE;GLgB;EMG;GNQ;EOE;GPS;EQE;GRK;ESG;GTW;EUG;GVE"},"hasCjsExports":false},"type":"js/module"}]}