{"dependencies":[{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"VaultService\", {\n    enumerable: true,\n    get: function () {\n      return VaultService;\n    }\n  });\n  var _utilsEncryption = require(_dependencyMap[0], \"../utils/encryption\");\n  var _utilsStorage = require(_dependencyMap[1], \"../utils/storage\");\n  const API_BASE_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  class VaultService {\n    async getAuthHeaders() {\n      const token = await _utilsStorage.SecureStorageService.getAccessToken();\n      return {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n    async getVaultItems(masterKey) {\n      try {\n        console.log('Getting vault items with master key...');\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          headers\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch vault items');\n        }\n        const encryptedItems = await response.json();\n        console.log(`Retrieved ${encryptedItems.length} encrypted items from server`);\n\n        // Decrypt items client-side\n        const decryptedItems = [];\n        for (const item of encryptedItems) {\n          try {\n            console.log(`Attempting to decrypt item: ${item.id}`);\n            const decryptedDataStr = _utilsEncryption.EncryptionService.decrypt(item.encrypted_data, masterKey);\n            const decryptedData = JSON.parse(decryptedDataStr);\n            decryptedItems.push({\n              id: item.id,\n              item_type: item.item_type,\n              decrypted_data: decryptedData,\n              created_at: item.created_at,\n              updated_at: item.updated_at\n            });\n            console.log(`Successfully decrypted item: ${item.id}`);\n          } catch (decryptError) {\n            console.error(`Failed to decrypt item: ${item.id}`, decryptError);\n\n            // Instead of skipping, let's try to delete corrupted items\n            try {\n              console.log(`Attempting to delete corrupted item: ${item.id}`);\n              await this.deleteVaultItem(item.id);\n              console.log(`Deleted corrupted item: ${item.id}`);\n            } catch (deleteError) {\n              console.error(`Failed to delete corrupted item: ${item.id}`, deleteError);\n            }\n          }\n        }\n        console.log(`Successfully decrypted ${decryptedItems.length} items`);\n        return decryptedItems;\n      } catch (error) {\n        console.error('VaultService.getVaultItems error:', error);\n        throw error;\n      }\n    }\n    async createVaultItem(itemType, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({\n            item_type: itemType,\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to create vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.createVaultItem error:', error);\n        throw error;\n      }\n    }\n    async updateVaultItem(itemId, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify({\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to update vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.updateVaultItem error:', error);\n        throw error;\n      }\n    }\n    async deleteVaultItem(itemId) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'DELETE',\n          headers\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.deleteVaultItem error:', error);\n        throw error;\n      }\n    }\n\n    // Template methods for different item types\n    createPasswordTemplate() {\n      return {\n        name: '',\n        username: '',\n        password: '',\n        website: '',\n        notes: ''\n      };\n    }\n    createCreditCardTemplate() {\n      return {\n        name: '',\n        cardNumber: '',\n        expiryDate: '',\n        cvv: '',\n        cardholderName: '',\n        notes: ''\n      };\n    }\n    createSecureNoteTemplate() {\n      return {\n        name: '',\n        notes: ''\n      };\n    }\n\n    // Generate strong password\n    generateStrongPassword(length = 16, includeSymbols = true) {\n      return _utilsEncryption.EncryptionService.generatePassword(length, true,\n      // uppercase\n      true,\n      // lowercase  \n      true,\n      // numbers\n      includeSymbols);\n    }\n\n    // Calculate password strength\n    calculatePasswordStrength(password) {\n      return _utilsEncryption.EncryptionService.calculatePasswordStrength(password);\n    }\n  }\n});","lineCount":177,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,0,"VaultService"],[10,25,36,0],[11,4,36,0],[12,2,36,0],[13,2,1,0],[13,6,1,0,"_utilsEncryption"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_utilsStorage"],[14,19,2,0],[14,22,2,0,"require"],[14,29,2,0],[14,30,2,0,"_dependencyMap"],[14,44,2,0],[15,2,34,0],[15,8,34,6,"API_BASE_URL"],[15,20,34,18],[15,23,34,21,"process"],[15,30,34,28],[15,31,34,29,"env"],[15,34,34,32],[15,35,34,33,"EXPO_PUBLIC_BACKEND_URL"],[15,58,34,56],[15,62,34,60],[15,64,34,62],[16,2,36,7],[16,8,36,13,"VaultService"],[16,20,36,25],[16,21,36,26],[17,4,37,2],[17,10,37,16,"getAuthHeaders"],[17,24,37,30,"getAuthHeaders"],[17,25,37,30],[17,27,37,66],[18,6,38,4],[18,12,38,10,"token"],[18,17,38,15],[18,20,38,18],[18,26,38,24,"SecureStorageService"],[18,39,38,44],[18,40,38,44,"SecureStorageService"],[18,60,38,44],[18,61,38,45,"getAccessToken"],[18,75,38,59],[18,76,38,60],[18,77,38,61],[19,6,39,4],[19,13,39,11],[20,8,40,6],[20,23,40,21],[20,25,40,23],[20,35,40,33,"token"],[20,40,40,38],[20,42,40,40],[21,8,41,6],[21,22,41,20],[21,24,41,22],[22,6,42,4],[22,7,42,5],[23,4,43,2],[24,4,45,2],[24,10,45,8,"getVaultItems"],[24,23,45,21,"getVaultItems"],[24,24,45,22,"masterKey"],[24,33,45,39],[24,35,45,72],[25,6,46,4],[25,10,46,8],[26,8,47,6,"console"],[26,15,47,13],[26,16,47,14,"log"],[26,19,47,17],[26,20,47,18],[26,60,47,58],[26,61,47,59],[27,8,48,6],[27,14,48,12,"headers"],[27,21,48,19],[27,24,48,22],[27,30,48,28],[27,34,48,32],[27,35,48,33,"getAuthHeaders"],[27,49,48,47],[27,50,48,48],[27,51,48,49],[28,8,49,6],[28,14,49,12,"response"],[28,22,49,20],[28,25,49,23],[28,31,49,29,"fetch"],[28,36,49,34],[28,37,49,35],[28,40,49,38,"API_BASE_URL"],[28,52,49,50],[28,70,49,68],[28,72,49,70],[29,10,50,8,"headers"],[30,8,51,6],[30,9,51,7],[30,10,51,8],[31,8,53,6],[31,12,53,10],[31,13,53,11,"response"],[31,21,53,19],[31,22,53,20,"ok"],[31,24,53,22],[31,26,53,24],[32,10,54,8],[32,16,54,14],[32,20,54,18,"Error"],[32,25,54,23],[32,26,54,24],[32,55,54,53],[32,56,54,54],[33,8,55,6],[34,8,57,6],[34,14,57,12,"encryptedItems"],[34,28,57,39],[34,31,57,42],[34,37,57,48,"response"],[34,45,57,56],[34,46,57,57,"json"],[34,50,57,61],[34,51,57,62],[34,52,57,63],[35,8,58,6,"console"],[35,15,58,13],[35,16,58,14,"log"],[35,19,58,17],[35,20,58,18],[35,33,58,31,"encryptedItems"],[35,47,58,45],[35,48,58,46,"length"],[35,54,58,52],[35,84,58,82],[35,85,58,83],[37,8,60,6],[38,8,61,6],[38,14,61,12,"decryptedItems"],[38,28,61,48],[38,31,61,51],[38,33,61,53],[39,8,63,6],[39,13,63,11],[39,19,63,17,"item"],[39,23,63,21],[39,27,63,25,"encryptedItems"],[39,41,63,39],[39,43,63,41],[40,10,64,8],[40,14,64,12],[41,12,65,10,"console"],[41,19,65,17],[41,20,65,18,"log"],[41,23,65,21],[41,24,65,22],[41,55,65,53,"item"],[41,59,65,57],[41,60,65,58,"id"],[41,62,65,60],[41,64,65,62],[41,65,65,63],[42,12,66,10],[42,18,66,16,"decryptedDataStr"],[42,34,66,32],[42,37,66,35,"EncryptionService"],[42,53,66,52],[42,54,66,52,"EncryptionService"],[42,71,66,52],[42,72,66,53,"decrypt"],[42,79,66,60],[42,80,66,61,"item"],[42,84,66,65],[42,85,66,66,"encrypted_data"],[42,99,66,80],[42,101,66,82,"masterKey"],[42,110,66,91],[42,111,66,92],[43,12,67,10],[43,18,67,16,"decryptedData"],[43,31,67,29],[43,34,67,32,"JSON"],[43,38,67,36],[43,39,67,37,"parse"],[43,44,67,42],[43,45,67,43,"decryptedDataStr"],[43,61,67,59],[43,62,67,60],[44,12,69,10,"decryptedItems"],[44,26,69,24],[44,27,69,25,"push"],[44,31,69,29],[44,32,69,30],[45,14,70,12,"id"],[45,16,70,14],[45,18,70,16,"item"],[45,22,70,20],[45,23,70,21,"id"],[45,25,70,23],[46,14,71,12,"item_type"],[46,23,71,21],[46,25,71,23,"item"],[46,29,71,27],[46,30,71,28,"item_type"],[46,39,71,37],[47,14,72,12,"decrypted_data"],[47,28,72,26],[47,30,72,28,"decryptedData"],[47,43,72,41],[48,14,73,12,"created_at"],[48,24,73,22],[48,26,73,24,"item"],[48,30,73,28],[48,31,73,29,"created_at"],[48,41,73,39],[49,14,74,12,"updated_at"],[49,24,74,22],[49,26,74,24,"item"],[49,30,74,28],[49,31,74,29,"updated_at"],[50,12,75,10],[50,13,75,11],[50,14,75,12],[51,12,76,10,"console"],[51,19,76,17],[51,20,76,18,"log"],[51,23,76,21],[51,24,76,22],[51,56,76,54,"item"],[51,60,76,58],[51,61,76,59,"id"],[51,63,76,61],[51,65,76,63],[51,66,76,64],[52,10,77,8],[52,11,77,9],[52,12,77,10],[52,19,77,17,"decryptError"],[52,31,77,29],[52,33,77,31],[53,12,78,10,"console"],[53,19,78,17],[53,20,78,18,"error"],[53,25,78,23],[53,26,78,24],[53,53,78,51,"item"],[53,57,78,55],[53,58,78,56,"id"],[53,60,78,58],[53,62,78,60],[53,64,78,62,"decryptError"],[53,76,78,74],[53,77,78,75],[55,12,80,10],[56,12,81,10],[56,16,81,14],[57,14,82,12,"console"],[57,21,82,19],[57,22,82,20,"log"],[57,25,82,23],[57,26,82,24],[57,66,82,64,"item"],[57,70,82,68],[57,71,82,69,"id"],[57,73,82,71],[57,75,82,73],[57,76,82,74],[58,14,83,12],[58,20,83,18],[58,24,83,22],[58,25,83,23,"deleteVaultItem"],[58,40,83,38],[58,41,83,39,"item"],[58,45,83,43],[58,46,83,44,"id"],[58,48,83,46],[58,49,83,47],[59,14,84,12,"console"],[59,21,84,19],[59,22,84,20,"log"],[59,25,84,23],[59,26,84,24],[59,53,84,51,"item"],[59,57,84,55],[59,58,84,56,"id"],[59,60,84,58],[59,62,84,60],[59,63,84,61],[60,12,85,10],[60,13,85,11],[60,14,85,12],[60,21,85,19,"deleteError"],[60,32,85,30],[60,34,85,32],[61,14,86,12,"console"],[61,21,86,19],[61,22,86,20,"error"],[61,27,86,25],[61,28,86,26],[61,64,86,62,"item"],[61,68,86,66],[61,69,86,67,"id"],[61,71,86,69],[61,73,86,71],[61,75,86,73,"deleteError"],[61,86,86,84],[61,87,86,85],[62,12,87,10],[63,10,88,8],[64,8,89,6],[65,8,91,6,"console"],[65,15,91,13],[65,16,91,14,"log"],[65,19,91,17],[65,20,91,18],[65,46,91,44,"decryptedItems"],[65,60,91,58],[65,61,91,59,"length"],[65,67,91,65],[65,75,91,73],[65,76,91,74],[66,8,92,6],[66,15,92,13,"decryptedItems"],[66,29,92,27],[67,6,93,4],[67,7,93,5],[67,8,93,6],[67,15,93,13,"error"],[67,20,93,18],[67,22,93,20],[68,8,94,6,"console"],[68,15,94,13],[68,16,94,14,"error"],[68,21,94,19],[68,22,94,20],[68,57,94,55],[68,59,94,57,"error"],[68,64,94,62],[68,65,94,63],[69,8,95,6],[69,14,95,12,"error"],[69,19,95,17],[70,6,96,4],[71,4,97,2],[72,4,99,2],[72,10,99,8,"createVaultItem"],[72,25,99,23,"createVaultItem"],[72,26,100,4,"itemType"],[72,34,100,56],[72,36,101,4,"itemData"],[72,44,101,27],[72,46,102,4,"masterKey"],[72,55,102,21],[72,57,103,19],[73,6,104,4],[73,10,104,8],[74,8,105,6],[75,8,106,6],[75,14,106,12,"dataToEncrypt"],[75,27,106,25],[75,30,106,28,"JSON"],[75,34,106,32],[75,35,106,33,"stringify"],[75,44,106,42],[75,45,106,43,"itemData"],[75,53,106,51],[75,54,106,52],[76,8,107,6],[76,14,107,12,"encryptedData"],[76,27,107,25],[76,30,107,28,"EncryptionService"],[76,46,107,45],[76,47,107,45,"EncryptionService"],[76,64,107,45],[76,65,107,46,"encrypt"],[76,72,107,53],[76,73,107,54,"dataToEncrypt"],[76,86,107,67],[76,88,107,69,"masterKey"],[76,97,107,78],[76,98,107,79],[77,8,109,6],[77,14,109,12,"headers"],[77,21,109,19],[77,24,109,22],[77,30,109,28],[77,34,109,32],[77,35,109,33,"getAuthHeaders"],[77,49,109,47],[77,50,109,48],[77,51,109,49],[78,8,110,6],[78,14,110,12,"response"],[78,22,110,20],[78,25,110,23],[78,31,110,29,"fetch"],[78,36,110,34],[78,37,110,35],[78,40,110,38,"API_BASE_URL"],[78,52,110,50],[78,70,110,68],[78,72,110,70],[79,10,111,8,"method"],[79,16,111,14],[79,18,111,16],[79,24,111,22],[80,10,112,8,"headers"],[80,17,112,15],[81,10,113,8,"body"],[81,14,113,12],[81,16,113,14,"JSON"],[81,20,113,18],[81,21,113,19,"stringify"],[81,30,113,28],[81,31,113,29],[82,12,114,10,"item_type"],[82,21,114,19],[82,23,114,21,"itemType"],[82,31,114,29],[83,12,115,10,"encrypted_data"],[83,26,115,24],[83,28,115,26,"encryptedData"],[84,10,116,8],[84,11,116,9],[85,8,117,6],[85,9,117,7],[85,10,117,8],[86,8,119,6],[86,12,119,10],[86,13,119,11,"response"],[86,21,119,19],[86,22,119,20,"ok"],[86,24,119,22],[86,26,119,24],[87,10,120,8],[87,16,120,14,"error"],[87,21,120,19],[87,24,120,22],[87,30,120,28,"response"],[87,38,120,36],[87,39,120,37,"json"],[87,43,120,41],[87,44,120,42],[87,45,120,43],[88,10,121,8],[88,16,121,14],[88,20,121,18,"Error"],[88,25,121,23],[88,26,121,24,"error"],[88,31,121,29],[88,32,121,30,"detail"],[88,38,121,36],[88,42,121,40],[88,71,121,69],[88,72,121,70],[89,8,122,6],[90,6,123,4],[90,7,123,5],[90,8,123,6],[90,15,123,13,"error"],[90,20,123,18],[90,22,123,20],[91,8,124,6,"console"],[91,15,124,13],[91,16,124,14,"error"],[91,21,124,19],[91,22,124,20],[91,59,124,57],[91,61,124,59,"error"],[91,66,124,64],[91,67,124,65],[92,8,125,6],[92,14,125,12,"error"],[92,19,125,17],[93,6,126,4],[94,4,127,2],[95,4,129,2],[95,10,129,8,"updateVaultItem"],[95,25,129,23,"updateVaultItem"],[95,26,130,4,"itemId"],[95,32,130,18],[95,34,131,4,"itemData"],[95,42,131,27],[95,44,132,4,"masterKey"],[95,53,132,21],[95,55,133,19],[96,6,134,4],[96,10,134,8],[97,8,135,6],[98,8,136,6],[98,14,136,12,"dataToEncrypt"],[98,27,136,25],[98,30,136,28,"JSON"],[98,34,136,32],[98,35,136,33,"stringify"],[98,44,136,42],[98,45,136,43,"itemData"],[98,53,136,51],[98,54,136,52],[99,8,137,6],[99,14,137,12,"encryptedData"],[99,27,137,25],[99,30,137,28,"EncryptionService"],[99,46,137,45],[99,47,137,45,"EncryptionService"],[99,64,137,45],[99,65,137,46,"encrypt"],[99,72,137,53],[99,73,137,54,"dataToEncrypt"],[99,86,137,67],[99,88,137,69,"masterKey"],[99,97,137,78],[99,98,137,79],[100,8,139,6],[100,14,139,12,"headers"],[100,21,139,19],[100,24,139,22],[100,30,139,28],[100,34,139,32],[100,35,139,33,"getAuthHeaders"],[100,49,139,47],[100,50,139,48],[100,51,139,49],[101,8,140,6],[101,14,140,12,"response"],[101,22,140,20],[101,25,140,23],[101,31,140,29,"fetch"],[101,36,140,34],[101,37,140,35],[101,40,140,38,"API_BASE_URL"],[101,52,140,50],[101,72,140,70,"itemId"],[101,78,140,76],[101,80,140,78],[101,82,140,80],[102,10,141,8,"method"],[102,16,141,14],[102,18,141,16],[102,23,141,21],[103,10,142,8,"headers"],[103,17,142,15],[104,10,143,8,"body"],[104,14,143,12],[104,16,143,14,"JSON"],[104,20,143,18],[104,21,143,19,"stringify"],[104,30,143,28],[104,31,143,29],[105,12,144,10,"encrypted_data"],[105,26,144,24],[105,28,144,26,"encryptedData"],[106,10,145,8],[106,11,145,9],[107,8,146,6],[107,9,146,7],[107,10,146,8],[108,8,148,6],[108,12,148,10],[108,13,148,11,"response"],[108,21,148,19],[108,22,148,20,"ok"],[108,24,148,22],[108,26,148,24],[109,10,149,8],[109,16,149,14,"error"],[109,21,149,19],[109,24,149,22],[109,30,149,28,"response"],[109,38,149,36],[109,39,149,37,"json"],[109,43,149,41],[109,44,149,42],[109,45,149,43],[110,10,150,8],[110,16,150,14],[110,20,150,18,"Error"],[110,25,150,23],[110,26,150,24,"error"],[110,31,150,29],[110,32,150,30,"detail"],[110,38,150,36],[110,42,150,40],[110,71,150,69],[110,72,150,70],[111,8,151,6],[112,6,152,4],[112,7,152,5],[112,8,152,6],[112,15,152,13,"error"],[112,20,152,18],[112,22,152,20],[113,8,153,6,"console"],[113,15,153,13],[113,16,153,14,"error"],[113,21,153,19],[113,22,153,20],[113,59,153,57],[113,61,153,59,"error"],[113,66,153,64],[113,67,153,65],[114,8,154,6],[114,14,154,12,"error"],[114,19,154,17],[115,6,155,4],[116,4,156,2],[117,4,158,2],[117,10,158,8,"deleteVaultItem"],[117,25,158,23,"deleteVaultItem"],[117,26,158,24,"itemId"],[117,32,158,38],[117,34,158,55],[118,6,159,4],[118,10,159,8],[119,8,160,6],[119,14,160,12,"headers"],[119,21,160,19],[119,24,160,22],[119,30,160,28],[119,34,160,32],[119,35,160,33,"getAuthHeaders"],[119,49,160,47],[119,50,160,48],[119,51,160,49],[120,8,161,6],[120,14,161,12,"response"],[120,22,161,20],[120,25,161,23],[120,31,161,29,"fetch"],[120,36,161,34],[120,37,161,35],[120,40,161,38,"API_BASE_URL"],[120,52,161,50],[120,72,161,70,"itemId"],[120,78,161,76],[120,80,161,78],[120,82,161,80],[121,10,162,8,"method"],[121,16,162,14],[121,18,162,16],[121,26,162,24],[122,10,163,8,"headers"],[123,8,164,6],[123,9,164,7],[123,10,164,8],[124,8,166,6],[124,12,166,10],[124,13,166,11,"response"],[124,21,166,19],[124,22,166,20,"ok"],[124,24,166,22],[124,26,166,24],[125,10,167,8],[125,16,167,14,"error"],[125,21,167,19],[125,24,167,22],[125,30,167,28,"response"],[125,38,167,36],[125,39,167,37,"json"],[125,43,167,41],[125,44,167,42],[125,45,167,43],[126,10,168,8],[126,16,168,14],[126,20,168,18,"Error"],[126,25,168,23],[126,26,168,24,"error"],[126,31,168,29],[126,32,168,30,"detail"],[126,38,168,36],[126,42,168,40],[126,71,168,69],[126,72,168,70],[127,8,169,6],[128,6,170,4],[128,7,170,5],[128,8,170,6],[128,15,170,13,"error"],[128,20,170,18],[128,22,170,20],[129,8,171,6,"console"],[129,15,171,13],[129,16,171,14,"error"],[129,21,171,19],[129,22,171,20],[129,59,171,57],[129,61,171,59,"error"],[129,66,171,64],[129,67,171,65],[130,8,172,6],[130,14,172,12,"error"],[130,19,172,17],[131,6,173,4],[132,4,174,2],[134,4,176,2],[135,4,177,2,"createPasswordTemplate"],[135,26,177,24,"createPasswordTemplate"],[135,27,177,24],[135,29,177,42],[136,6,178,4],[136,13,178,11],[137,8,179,6,"name"],[137,12,179,10],[137,14,179,12],[137,16,179,14],[138,8,180,6,"username"],[138,16,180,14],[138,18,180,16],[138,20,180,18],[139,8,181,6,"password"],[139,16,181,14],[139,18,181,16],[139,20,181,18],[140,8,182,6,"website"],[140,15,182,13],[140,17,182,15],[140,19,182,17],[141,8,183,6,"notes"],[141,13,183,11],[141,15,183,13],[142,6,184,4],[142,7,184,5],[143,4,185,2],[144,4,187,2,"createCreditCardTemplate"],[144,28,187,26,"createCreditCardTemplate"],[144,29,187,26],[144,31,187,44],[145,6,188,4],[145,13,188,11],[146,8,189,6,"name"],[146,12,189,10],[146,14,189,12],[146,16,189,14],[147,8,190,6,"cardNumber"],[147,18,190,16],[147,20,190,18],[147,22,190,20],[148,8,191,6,"expiryDate"],[148,18,191,16],[148,20,191,18],[148,22,191,20],[149,8,192,6,"cvv"],[149,11,192,9],[149,13,192,11],[149,15,192,13],[150,8,193,6,"cardholderName"],[150,22,193,20],[150,24,193,22],[150,26,193,24],[151,8,194,6,"notes"],[151,13,194,11],[151,15,194,13],[152,6,195,4],[152,7,195,5],[153,4,196,2],[154,4,198,2,"createSecureNoteTemplate"],[154,28,198,26,"createSecureNoteTemplate"],[154,29,198,26],[154,31,198,44],[155,6,199,4],[155,13,199,11],[156,8,200,6,"name"],[156,12,200,10],[156,14,200,12],[156,16,200,14],[157,8,201,6,"notes"],[157,13,201,11],[157,15,201,13],[158,6,202,4],[158,7,202,5],[159,4,203,2],[161,4,205,2],[162,4,206,2,"generateStrongPassword"],[162,26,206,24,"generateStrongPassword"],[162,27,207,4,"length"],[162,33,207,18],[162,36,207,21],[162,38,207,23],[162,40,208,4,"includeSymbols"],[162,54,208,27],[162,57,208,30],[162,61,208,34],[162,63,209,12],[163,6,210,4],[163,13,210,11,"EncryptionService"],[163,29,210,28],[163,30,210,28,"EncryptionService"],[163,47,210,28],[163,48,210,29,"generatePassword"],[163,64,210,45],[163,65,211,6,"length"],[163,71,211,12],[163,73,212,6],[163,77,212,10],[164,6,212,12],[165,6,213,6],[165,10,213,10],[166,6,213,12],[167,6,214,6],[167,10,214,10],[168,6,214,12],[169,6,215,6,"includeSymbols"],[169,20,216,4],[169,21,216,5],[170,4,217,2],[172,4,219,2],[173,4,220,2,"calculatePasswordStrength"],[173,29,220,27,"calculatePasswordStrength"],[173,30,220,28,"password"],[173,38,220,44],[173,40,220,46],[174,6,221,4],[174,13,221,11,"EncryptionService"],[174,29,221,28],[174,30,221,28,"EncryptionService"],[174,47,221,28],[174,48,221,29,"calculatePasswordStrength"],[174,73,221,54],[174,74,221,55,"password"],[174,82,221,63],[174,83,221,64],[175,4,222,2],[176,2,223,0],[177,0,223,1],[177,3]],"functionMap":{"names":["<global>","VaultService","getAuthHeaders","getVaultItems","createVaultItem","updateVaultItem","deleteVaultItem","createPasswordTemplate","createCreditCardTemplate","createSecureNoteTemplate","generateStrongPassword","calculatePasswordStrength"],"mappings":"AAA;OCmC;ECC;GDM;EEE;GFoD;EGE;GH4B;EIE;GJ2B;EKE;GLgB;EMG;GNQ;EOE;GPS;EQE;GRK;ESG;GTW;EUG;GVE"},"hasCjsExports":false},"type":"js/module"}]}