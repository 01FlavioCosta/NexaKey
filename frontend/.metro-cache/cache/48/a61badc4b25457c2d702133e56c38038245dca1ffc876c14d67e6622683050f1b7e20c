{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"],"imports":1}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"VaultService\", {\n    enumerable: true,\n    get: function () {\n      return VaultService;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _utilsEncryption = require(_dependencyMap[1], \"../utils/encryption\");\n  var _utilsStorage = require(_dependencyMap[2], \"../utils/storage\");\n  const API_BASE_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  class VaultService {\n    async getAuthHeaders() {\n      const token = await _utilsStorage.SecureStorageService.getAccessToken();\n      return {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n    async getVaultItems(masterKey) {\n      try {\n        console.log('Getting vault items with master key...');\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          headers\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch vault items');\n        }\n        const encryptedItems = await response.json();\n        console.log(`Retrieved ${encryptedItems.length} encrypted items from server`);\n\n        // Decrypt items client-side\n        const decryptedItems = [];\n        for (const item of encryptedItems) {\n          try {\n            console.log(`Attempting to decrypt item: ${item.id}`);\n            const decryptedDataStr = _utilsEncryption.EncryptionService.decrypt(item.encrypted_data, masterKey);\n            const decryptedData = JSON.parse(decryptedDataStr);\n            decryptedItems.push({\n              id: item.id,\n              item_type: item.item_type,\n              decrypted_data: decryptedData,\n              created_at: item.created_at,\n              updated_at: item.updated_at\n            });\n            console.log(`Successfully decrypted item: ${item.id}`);\n          } catch (decryptError) {\n            console.error(`Failed to decrypt item: ${item.id}`, decryptError);\n\n            // Instead of skipping, let's try to delete corrupted items\n            try {\n              console.log(`Attempting to delete corrupted item: ${item.id}`);\n              await this.deleteVaultItem(item.id);\n              console.log(`Deleted corrupted item: ${item.id}`);\n            } catch (deleteError) {\n              console.error(`Failed to delete corrupted item: ${item.id}`, deleteError);\n            }\n          }\n        }\n        console.log(`Successfully decrypted ${decryptedItems.length} items`);\n        return decryptedItems;\n      } catch (error) {\n        console.error('VaultService.getVaultItems error:', error);\n        throw error;\n      }\n    }\n    async createVaultItem(itemType, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({\n            item_type: itemType,\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to create vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.createVaultItem error:', error);\n        throw error;\n      }\n    }\n    async updateVaultItem(itemId, itemData, masterKey) {\n      try {\n        // Encrypt data client-side\n        const dataToEncrypt = JSON.stringify(itemData);\n        const encryptedData = _utilsEncryption.EncryptionService.encrypt(dataToEncrypt, masterKey);\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify({\n            encrypted_data: encryptedData\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to update vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.updateVaultItem error:', error);\n        throw error;\n      }\n    }\n    async deleteVaultItem(itemId) {\n      try {\n        const headers = await this.getAuthHeaders();\n        const response = await fetch(`${API_BASE_URL}/api/vault/items/${itemId}`, {\n          method: 'DELETE',\n          headers\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete vault item');\n        }\n      } catch (error) {\n        console.error('VaultService.deleteVaultItem error:', error);\n        throw error;\n      }\n    }\n\n    // Template methods for different item types\n    createPasswordTemplate() {\n      return {\n        name: '',\n        username: '',\n        password: '',\n        website: '',\n        notes: ''\n      };\n    }\n    createCreditCardTemplate() {\n      return {\n        name: '',\n        cardNumber: '',\n        expiryDate: '',\n        cvv: '',\n        cardholderName: '',\n        notes: ''\n      };\n    }\n    createSecureNoteTemplate() {\n      return {\n        name: '',\n        notes: ''\n      };\n    }\n\n    // Generate strong password\n    generateStrongPassword(length = 16, includeSymbols = true) {\n      return _utilsEncryption.EncryptionService.generatePassword(length, true,\n      // uppercase\n      true,\n      // lowercase  \n      true,\n      // numbers\n      includeSymbols);\n    }\n\n    // Calculate password strength\n    calculatePasswordStrength(password) {\n      return _utilsEncryption.EncryptionService.calculatePasswordStrength(password);\n    }\n  }\n});","lineCount":178,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,0,"VaultService"],[10,25,36,0],[11,4,36,0],[12,2,36,0],[13,2,223,1],[13,6,223,1,"_expoVirtualEnv"],[13,21,223,1],[13,24,223,1,"require"],[13,31,223,1],[13,32,223,1,"_dependencyMap"],[13,46,223,1],[14,2,1,0],[14,6,1,0,"_utilsEncryption"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_utilsStorage"],[15,19,2,0],[15,22,2,0,"require"],[15,29,2,0],[15,30,2,0,"_dependencyMap"],[15,44,2,0],[16,2,34,0],[16,8,34,6,"API_BASE_URL"],[16,20,34,18],[16,23,34,21,"_expoVirtualEnv"],[16,38,34,21],[16,39,34,21,"env"],[16,42,34,21],[16,43,34,21,"EXPO_PUBLIC_BACKEND_URL"],[16,66,34,21],[16,70,34,60],[16,72,34,62],[17,2,36,7],[17,8,36,13,"VaultService"],[17,20,36,25],[17,21,36,26],[18,4,37,2],[18,10,37,16,"getAuthHeaders"],[18,24,37,30,"getAuthHeaders"],[18,25,37,30],[18,27,37,66],[19,6,38,4],[19,12,38,10,"token"],[19,17,38,15],[19,20,38,18],[19,26,38,24,"SecureStorageService"],[19,39,38,44],[19,40,38,44,"SecureStorageService"],[19,60,38,44],[19,61,38,45,"getAccessToken"],[19,75,38,59],[19,76,38,60],[19,77,38,61],[20,6,39,4],[20,13,39,11],[21,8,40,6],[21,23,40,21],[21,25,40,23],[21,35,40,33,"token"],[21,40,40,38],[21,42,40,40],[22,8,41,6],[22,22,41,20],[22,24,41,22],[23,6,42,4],[23,7,42,5],[24,4,43,2],[25,4,45,2],[25,10,45,8,"getVaultItems"],[25,23,45,21,"getVaultItems"],[25,24,45,22,"masterKey"],[25,33,45,39],[25,35,45,72],[26,6,46,4],[26,10,46,8],[27,8,47,6,"console"],[27,15,47,13],[27,16,47,14,"log"],[27,19,47,17],[27,20,47,18],[27,60,47,58],[27,61,47,59],[28,8,48,6],[28,14,48,12,"headers"],[28,21,48,19],[28,24,48,22],[28,30,48,28],[28,34,48,32],[28,35,48,33,"getAuthHeaders"],[28,49,48,47],[28,50,48,48],[28,51,48,49],[29,8,49,6],[29,14,49,12,"response"],[29,22,49,20],[29,25,49,23],[29,31,49,29,"fetch"],[29,36,49,34],[29,37,49,35],[29,40,49,38,"API_BASE_URL"],[29,52,49,50],[29,70,49,68],[29,72,49,70],[30,10,50,8,"headers"],[31,8,51,6],[31,9,51,7],[31,10,51,8],[32,8,53,6],[32,12,53,10],[32,13,53,11,"response"],[32,21,53,19],[32,22,53,20,"ok"],[32,24,53,22],[32,26,53,24],[33,10,54,8],[33,16,54,14],[33,20,54,18,"Error"],[33,25,54,23],[33,26,54,24],[33,55,54,53],[33,56,54,54],[34,8,55,6],[35,8,57,6],[35,14,57,12,"encryptedItems"],[35,28,57,39],[35,31,57,42],[35,37,57,48,"response"],[35,45,57,56],[35,46,57,57,"json"],[35,50,57,61],[35,51,57,62],[35,52,57,63],[36,8,58,6,"console"],[36,15,58,13],[36,16,58,14,"log"],[36,19,58,17],[36,20,58,18],[36,33,58,31,"encryptedItems"],[36,47,58,45],[36,48,58,46,"length"],[36,54,58,52],[36,84,58,82],[36,85,58,83],[38,8,60,6],[39,8,61,6],[39,14,61,12,"decryptedItems"],[39,28,61,48],[39,31,61,51],[39,33,61,53],[40,8,63,6],[40,13,63,11],[40,19,63,17,"item"],[40,23,63,21],[40,27,63,25,"encryptedItems"],[40,41,63,39],[40,43,63,41],[41,10,64,8],[41,14,64,12],[42,12,65,10,"console"],[42,19,65,17],[42,20,65,18,"log"],[42,23,65,21],[42,24,65,22],[42,55,65,53,"item"],[42,59,65,57],[42,60,65,58,"id"],[42,62,65,60],[42,64,65,62],[42,65,65,63],[43,12,66,10],[43,18,66,16,"decryptedDataStr"],[43,34,66,32],[43,37,66,35,"EncryptionService"],[43,53,66,52],[43,54,66,52,"EncryptionService"],[43,71,66,52],[43,72,66,53,"decrypt"],[43,79,66,60],[43,80,66,61,"item"],[43,84,66,65],[43,85,66,66,"encrypted_data"],[43,99,66,80],[43,101,66,82,"masterKey"],[43,110,66,91],[43,111,66,92],[44,12,67,10],[44,18,67,16,"decryptedData"],[44,31,67,29],[44,34,67,32,"JSON"],[44,38,67,36],[44,39,67,37,"parse"],[44,44,67,42],[44,45,67,43,"decryptedDataStr"],[44,61,67,59],[44,62,67,60],[45,12,69,10,"decryptedItems"],[45,26,69,24],[45,27,69,25,"push"],[45,31,69,29],[45,32,69,30],[46,14,70,12,"id"],[46,16,70,14],[46,18,70,16,"item"],[46,22,70,20],[46,23,70,21,"id"],[46,25,70,23],[47,14,71,12,"item_type"],[47,23,71,21],[47,25,71,23,"item"],[47,29,71,27],[47,30,71,28,"item_type"],[47,39,71,37],[48,14,72,12,"decrypted_data"],[48,28,72,26],[48,30,72,28,"decryptedData"],[48,43,72,41],[49,14,73,12,"created_at"],[49,24,73,22],[49,26,73,24,"item"],[49,30,73,28],[49,31,73,29,"created_at"],[49,41,73,39],[50,14,74,12,"updated_at"],[50,24,74,22],[50,26,74,24,"item"],[50,30,74,28],[50,31,74,29,"updated_at"],[51,12,75,10],[51,13,75,11],[51,14,75,12],[52,12,76,10,"console"],[52,19,76,17],[52,20,76,18,"log"],[52,23,76,21],[52,24,76,22],[52,56,76,54,"item"],[52,60,76,58],[52,61,76,59,"id"],[52,63,76,61],[52,65,76,63],[52,66,76,64],[53,10,77,8],[53,11,77,9],[53,12,77,10],[53,19,77,17,"decryptError"],[53,31,77,29],[53,33,77,31],[54,12,78,10,"console"],[54,19,78,17],[54,20,78,18,"error"],[54,25,78,23],[54,26,78,24],[54,53,78,51,"item"],[54,57,78,55],[54,58,78,56,"id"],[54,60,78,58],[54,62,78,60],[54,64,78,62,"decryptError"],[54,76,78,74],[54,77,78,75],[56,12,80,10],[57,12,81,10],[57,16,81,14],[58,14,82,12,"console"],[58,21,82,19],[58,22,82,20,"log"],[58,25,82,23],[58,26,82,24],[58,66,82,64,"item"],[58,70,82,68],[58,71,82,69,"id"],[58,73,82,71],[58,75,82,73],[58,76,82,74],[59,14,83,12],[59,20,83,18],[59,24,83,22],[59,25,83,23,"deleteVaultItem"],[59,40,83,38],[59,41,83,39,"item"],[59,45,83,43],[59,46,83,44,"id"],[59,48,83,46],[59,49,83,47],[60,14,84,12,"console"],[60,21,84,19],[60,22,84,20,"log"],[60,25,84,23],[60,26,84,24],[60,53,84,51,"item"],[60,57,84,55],[60,58,84,56,"id"],[60,60,84,58],[60,62,84,60],[60,63,84,61],[61,12,85,10],[61,13,85,11],[61,14,85,12],[61,21,85,19,"deleteError"],[61,32,85,30],[61,34,85,32],[62,14,86,12,"console"],[62,21,86,19],[62,22,86,20,"error"],[62,27,86,25],[62,28,86,26],[62,64,86,62,"item"],[62,68,86,66],[62,69,86,67,"id"],[62,71,86,69],[62,73,86,71],[62,75,86,73,"deleteError"],[62,86,86,84],[62,87,86,85],[63,12,87,10],[64,10,88,8],[65,8,89,6],[66,8,91,6,"console"],[66,15,91,13],[66,16,91,14,"log"],[66,19,91,17],[66,20,91,18],[66,46,91,44,"decryptedItems"],[66,60,91,58],[66,61,91,59,"length"],[66,67,91,65],[66,75,91,73],[66,76,91,74],[67,8,92,6],[67,15,92,13,"decryptedItems"],[67,29,92,27],[68,6,93,4],[68,7,93,5],[68,8,93,6],[68,15,93,13,"error"],[68,20,93,18],[68,22,93,20],[69,8,94,6,"console"],[69,15,94,13],[69,16,94,14,"error"],[69,21,94,19],[69,22,94,20],[69,57,94,55],[69,59,94,57,"error"],[69,64,94,62],[69,65,94,63],[70,8,95,6],[70,14,95,12,"error"],[70,19,95,17],[71,6,96,4],[72,4,97,2],[73,4,99,2],[73,10,99,8,"createVaultItem"],[73,25,99,23,"createVaultItem"],[73,26,100,4,"itemType"],[73,34,100,56],[73,36,101,4,"itemData"],[73,44,101,27],[73,46,102,4,"masterKey"],[73,55,102,21],[73,57,103,19],[74,6,104,4],[74,10,104,8],[75,8,105,6],[76,8,106,6],[76,14,106,12,"dataToEncrypt"],[76,27,106,25],[76,30,106,28,"JSON"],[76,34,106,32],[76,35,106,33,"stringify"],[76,44,106,42],[76,45,106,43,"itemData"],[76,53,106,51],[76,54,106,52],[77,8,107,6],[77,14,107,12,"encryptedData"],[77,27,107,25],[77,30,107,28,"EncryptionService"],[77,46,107,45],[77,47,107,45,"EncryptionService"],[77,64,107,45],[77,65,107,46,"encrypt"],[77,72,107,53],[77,73,107,54,"dataToEncrypt"],[77,86,107,67],[77,88,107,69,"masterKey"],[77,97,107,78],[77,98,107,79],[78,8,109,6],[78,14,109,12,"headers"],[78,21,109,19],[78,24,109,22],[78,30,109,28],[78,34,109,32],[78,35,109,33,"getAuthHeaders"],[78,49,109,47],[78,50,109,48],[78,51,109,49],[79,8,110,6],[79,14,110,12,"response"],[79,22,110,20],[79,25,110,23],[79,31,110,29,"fetch"],[79,36,110,34],[79,37,110,35],[79,40,110,38,"API_BASE_URL"],[79,52,110,50],[79,70,110,68],[79,72,110,70],[80,10,111,8,"method"],[80,16,111,14],[80,18,111,16],[80,24,111,22],[81,10,112,8,"headers"],[81,17,112,15],[82,10,113,8,"body"],[82,14,113,12],[82,16,113,14,"JSON"],[82,20,113,18],[82,21,113,19,"stringify"],[82,30,113,28],[82,31,113,29],[83,12,114,10,"item_type"],[83,21,114,19],[83,23,114,21,"itemType"],[83,31,114,29],[84,12,115,10,"encrypted_data"],[84,26,115,24],[84,28,115,26,"encryptedData"],[85,10,116,8],[85,11,116,9],[86,8,117,6],[86,9,117,7],[86,10,117,8],[87,8,119,6],[87,12,119,10],[87,13,119,11,"response"],[87,21,119,19],[87,22,119,20,"ok"],[87,24,119,22],[87,26,119,24],[88,10,120,8],[88,16,120,14,"error"],[88,21,120,19],[88,24,120,22],[88,30,120,28,"response"],[88,38,120,36],[88,39,120,37,"json"],[88,43,120,41],[88,44,120,42],[88,45,120,43],[89,10,121,8],[89,16,121,14],[89,20,121,18,"Error"],[89,25,121,23],[89,26,121,24,"error"],[89,31,121,29],[89,32,121,30,"detail"],[89,38,121,36],[89,42,121,40],[89,71,121,69],[89,72,121,70],[90,8,122,6],[91,6,123,4],[91,7,123,5],[91,8,123,6],[91,15,123,13,"error"],[91,20,123,18],[91,22,123,20],[92,8,124,6,"console"],[92,15,124,13],[92,16,124,14,"error"],[92,21,124,19],[92,22,124,20],[92,59,124,57],[92,61,124,59,"error"],[92,66,124,64],[92,67,124,65],[93,8,125,6],[93,14,125,12,"error"],[93,19,125,17],[94,6,126,4],[95,4,127,2],[96,4,129,2],[96,10,129,8,"updateVaultItem"],[96,25,129,23,"updateVaultItem"],[96,26,130,4,"itemId"],[96,32,130,18],[96,34,131,4,"itemData"],[96,42,131,27],[96,44,132,4,"masterKey"],[96,53,132,21],[96,55,133,19],[97,6,134,4],[97,10,134,8],[98,8,135,6],[99,8,136,6],[99,14,136,12,"dataToEncrypt"],[99,27,136,25],[99,30,136,28,"JSON"],[99,34,136,32],[99,35,136,33,"stringify"],[99,44,136,42],[99,45,136,43,"itemData"],[99,53,136,51],[99,54,136,52],[100,8,137,6],[100,14,137,12,"encryptedData"],[100,27,137,25],[100,30,137,28,"EncryptionService"],[100,46,137,45],[100,47,137,45,"EncryptionService"],[100,64,137,45],[100,65,137,46,"encrypt"],[100,72,137,53],[100,73,137,54,"dataToEncrypt"],[100,86,137,67],[100,88,137,69,"masterKey"],[100,97,137,78],[100,98,137,79],[101,8,139,6],[101,14,139,12,"headers"],[101,21,139,19],[101,24,139,22],[101,30,139,28],[101,34,139,32],[101,35,139,33,"getAuthHeaders"],[101,49,139,47],[101,50,139,48],[101,51,139,49],[102,8,140,6],[102,14,140,12,"response"],[102,22,140,20],[102,25,140,23],[102,31,140,29,"fetch"],[102,36,140,34],[102,37,140,35],[102,40,140,38,"API_BASE_URL"],[102,52,140,50],[102,72,140,70,"itemId"],[102,78,140,76],[102,80,140,78],[102,82,140,80],[103,10,141,8,"method"],[103,16,141,14],[103,18,141,16],[103,23,141,21],[104,10,142,8,"headers"],[104,17,142,15],[105,10,143,8,"body"],[105,14,143,12],[105,16,143,14,"JSON"],[105,20,143,18],[105,21,143,19,"stringify"],[105,30,143,28],[105,31,143,29],[106,12,144,10,"encrypted_data"],[106,26,144,24],[106,28,144,26,"encryptedData"],[107,10,145,8],[107,11,145,9],[108,8,146,6],[108,9,146,7],[108,10,146,8],[109,8,148,6],[109,12,148,10],[109,13,148,11,"response"],[109,21,148,19],[109,22,148,20,"ok"],[109,24,148,22],[109,26,148,24],[110,10,149,8],[110,16,149,14,"error"],[110,21,149,19],[110,24,149,22],[110,30,149,28,"response"],[110,38,149,36],[110,39,149,37,"json"],[110,43,149,41],[110,44,149,42],[110,45,149,43],[111,10,150,8],[111,16,150,14],[111,20,150,18,"Error"],[111,25,150,23],[111,26,150,24,"error"],[111,31,150,29],[111,32,150,30,"detail"],[111,38,150,36],[111,42,150,40],[111,71,150,69],[111,72,150,70],[112,8,151,6],[113,6,152,4],[113,7,152,5],[113,8,152,6],[113,15,152,13,"error"],[113,20,152,18],[113,22,152,20],[114,8,153,6,"console"],[114,15,153,13],[114,16,153,14,"error"],[114,21,153,19],[114,22,153,20],[114,59,153,57],[114,61,153,59,"error"],[114,66,153,64],[114,67,153,65],[115,8,154,6],[115,14,154,12,"error"],[115,19,154,17],[116,6,155,4],[117,4,156,2],[118,4,158,2],[118,10,158,8,"deleteVaultItem"],[118,25,158,23,"deleteVaultItem"],[118,26,158,24,"itemId"],[118,32,158,38],[118,34,158,55],[119,6,159,4],[119,10,159,8],[120,8,160,6],[120,14,160,12,"headers"],[120,21,160,19],[120,24,160,22],[120,30,160,28],[120,34,160,32],[120,35,160,33,"getAuthHeaders"],[120,49,160,47],[120,50,160,48],[120,51,160,49],[121,8,161,6],[121,14,161,12,"response"],[121,22,161,20],[121,25,161,23],[121,31,161,29,"fetch"],[121,36,161,34],[121,37,161,35],[121,40,161,38,"API_BASE_URL"],[121,52,161,50],[121,72,161,70,"itemId"],[121,78,161,76],[121,80,161,78],[121,82,161,80],[122,10,162,8,"method"],[122,16,162,14],[122,18,162,16],[122,26,162,24],[123,10,163,8,"headers"],[124,8,164,6],[124,9,164,7],[124,10,164,8],[125,8,166,6],[125,12,166,10],[125,13,166,11,"response"],[125,21,166,19],[125,22,166,20,"ok"],[125,24,166,22],[125,26,166,24],[126,10,167,8],[126,16,167,14,"error"],[126,21,167,19],[126,24,167,22],[126,30,167,28,"response"],[126,38,167,36],[126,39,167,37,"json"],[126,43,167,41],[126,44,167,42],[126,45,167,43],[127,10,168,8],[127,16,168,14],[127,20,168,18,"Error"],[127,25,168,23],[127,26,168,24,"error"],[127,31,168,29],[127,32,168,30,"detail"],[127,38,168,36],[127,42,168,40],[127,71,168,69],[127,72,168,70],[128,8,169,6],[129,6,170,4],[129,7,170,5],[129,8,170,6],[129,15,170,13,"error"],[129,20,170,18],[129,22,170,20],[130,8,171,6,"console"],[130,15,171,13],[130,16,171,14,"error"],[130,21,171,19],[130,22,171,20],[130,59,171,57],[130,61,171,59,"error"],[130,66,171,64],[130,67,171,65],[131,8,172,6],[131,14,172,12,"error"],[131,19,172,17],[132,6,173,4],[133,4,174,2],[135,4,176,2],[136,4,177,2,"createPasswordTemplate"],[136,26,177,24,"createPasswordTemplate"],[136,27,177,24],[136,29,177,42],[137,6,178,4],[137,13,178,11],[138,8,179,6,"name"],[138,12,179,10],[138,14,179,12],[138,16,179,14],[139,8,180,6,"username"],[139,16,180,14],[139,18,180,16],[139,20,180,18],[140,8,181,6,"password"],[140,16,181,14],[140,18,181,16],[140,20,181,18],[141,8,182,6,"website"],[141,15,182,13],[141,17,182,15],[141,19,182,17],[142,8,183,6,"notes"],[142,13,183,11],[142,15,183,13],[143,6,184,4],[143,7,184,5],[144,4,185,2],[145,4,187,2,"createCreditCardTemplate"],[145,28,187,26,"createCreditCardTemplate"],[145,29,187,26],[145,31,187,44],[146,6,188,4],[146,13,188,11],[147,8,189,6,"name"],[147,12,189,10],[147,14,189,12],[147,16,189,14],[148,8,190,6,"cardNumber"],[148,18,190,16],[148,20,190,18],[148,22,190,20],[149,8,191,6,"expiryDate"],[149,18,191,16],[149,20,191,18],[149,22,191,20],[150,8,192,6,"cvv"],[150,11,192,9],[150,13,192,11],[150,15,192,13],[151,8,193,6,"cardholderName"],[151,22,193,20],[151,24,193,22],[151,26,193,24],[152,8,194,6,"notes"],[152,13,194,11],[152,15,194,13],[153,6,195,4],[153,7,195,5],[154,4,196,2],[155,4,198,2,"createSecureNoteTemplate"],[155,28,198,26,"createSecureNoteTemplate"],[155,29,198,26],[155,31,198,44],[156,6,199,4],[156,13,199,11],[157,8,200,6,"name"],[157,12,200,10],[157,14,200,12],[157,16,200,14],[158,8,201,6,"notes"],[158,13,201,11],[158,15,201,13],[159,6,202,4],[159,7,202,5],[160,4,203,2],[162,4,205,2],[163,4,206,2,"generateStrongPassword"],[163,26,206,24,"generateStrongPassword"],[163,27,207,4,"length"],[163,33,207,18],[163,36,207,21],[163,38,207,23],[163,40,208,4,"includeSymbols"],[163,54,208,27],[163,57,208,30],[163,61,208,34],[163,63,209,12],[164,6,210,4],[164,13,210,11,"EncryptionService"],[164,29,210,28],[164,30,210,28,"EncryptionService"],[164,47,210,28],[164,48,210,29,"generatePassword"],[164,64,210,45],[164,65,211,6,"length"],[164,71,211,12],[164,73,212,6],[164,77,212,10],[165,6,212,12],[166,6,213,6],[166,10,213,10],[167,6,213,12],[168,6,214,6],[168,10,214,10],[169,6,214,12],[170,6,215,6,"includeSymbols"],[170,20,216,4],[170,21,216,5],[171,4,217,2],[173,4,219,2],[174,4,220,2,"calculatePasswordStrength"],[174,29,220,27,"calculatePasswordStrength"],[174,30,220,28,"password"],[174,38,220,44],[174,40,220,46],[175,6,221,4],[175,13,221,11,"EncryptionService"],[175,29,221,28],[175,30,221,28,"EncryptionService"],[175,47,221,28],[175,48,221,29,"calculatePasswordStrength"],[175,73,221,54],[175,74,221,55,"password"],[175,82,221,63],[175,83,221,64],[176,4,222,2],[177,2,223,0],[178,0,223,1],[178,3]],"functionMap":{"names":["<global>","VaultService","getAuthHeaders","getVaultItems","createVaultItem","updateVaultItem","deleteVaultItem","createPasswordTemplate","createCreditCardTemplate","createSecureNoteTemplate","generateStrongPassword","calculatePasswordStrength"],"mappings":"AAA;OCmC;ECC;GDM;EEE;GFoD;EGE;GH4B;EIE;GJ2B;EKE;GLgB;EMG;GNQ;EOE;GPS;EQE;GRK;ESG;GTW;EUG;GVE"},"hasCjsExports":false},"type":"js/module"}]}