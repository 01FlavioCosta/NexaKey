{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../utils/storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":56,"index":146}}],"key":"rswhtWQFlk40P6/ZSXiz3NZSC0I=","exportNames":["*"]}},{"name":"../utils/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":56,"index":203}}],"key":"Wlvn+1B4yqF3uisuH0wrMQSpnGk=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useAuth = exports.AuthProvider = void 0;\n  var _react = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _storage = require(_dependencyMap[1], \"../utils/storage\");\n  var _encryption = require(_dependencyMap[2], \"../utils/encryption\");\n  var _jsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/app/frontend/contexts/AuthContext.tsx\";\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [isFirstTime, setIsFirstTime] = (0, _react.useState)(false);\n    const [masterKey, setMasterKeyState] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      initializeAuth();\n    }, []);\n    const initializeAuth = async () => {\n      try {\n        // Check if user has been through onboarding\n        const userData = await _storage.SecureStorageService.getUserData();\n        const token = await _storage.SecureStorageService.getAccessToken();\n        if (!userData) {\n          setIsFirstTime(true);\n          setIsLoading(false);\n          return;\n        }\n        if (token && userData) {\n          // Validate token with backend\n          const response = await fetch(`${API_BASE_URL}/api/user/profile`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            const userProfile = await response.json();\n            setUser(userProfile);\n\n            // Try to restore master key\n            const storedKey = await _storage.SecureStorageService.getMasterKey();\n            if (storedKey) {\n              setMasterKeyState(storedKey);\n            }\n          } else {\n            // Token invalid, clear stored data\n            await _storage.SecureStorageService.clearAllData();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, biometricEnabled) => {\n      try {\n        setIsLoading(true);\n\n        // Generate salt for this user\n        const salt = _encryption.EncryptionService.generateSalt();\n\n        // Hash master password for server storage\n        const masterPasswordHash = await _encryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key for client-side encryption\n        const encryptionKey = await _encryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash,\n            biometric_enabled: biometricEnabled\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Registration failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _storage.SecureStorageService.storeAccessToken(data.access_token);\n        await _storage.SecureStorageService.storeUserData(data.user);\n        await _storage.SecureStorageService.storeUserSalt(salt);\n        await _storage.SecureStorageService.storeMasterKey(encryptionKey);\n        await _storage.SecureStorageService.setBiometricEnabled(biometricEnabled);\n\n        // If biometric enabled, store recovery key\n        if (biometricEnabled) {\n          await _storage.SecureStorageService.storeBiometricKey(encryptionKey);\n        }\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n        setIsFirstTime(false);\n      } catch (error) {\n        console.error('Registration error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n\n        // Get stored salt\n        const salt = await _storage.SecureStorageService.getUserSalt();\n        if (!salt) {\n          throw new Error('User salt not found. Please register again.');\n        }\n\n        // Hash password for server verification\n        const masterPasswordHash = await _encryption.EncryptionService.hashMasterPassword(password, salt);\n\n        // Derive encryption key\n        const encryptionKey = await _encryption.EncryptionService.deriveKey(password, salt);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            master_password_hash: masterPasswordHash\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.detail || 'Login failed');\n        }\n        const data = await response.json();\n\n        // Store user data and tokens\n        await _storage.SecureStorageService.storeAccessToken(data.access_token);\n        await _storage.SecureStorageService.storeUserData(data.user);\n        await _storage.SecureStorageService.storeMasterKey(encryptionKey);\n        setUser(data.user);\n        setMasterKeyState(encryptionKey);\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const logout = async () => {\n      try {\n        await _storage.SecureStorageService.clearAllData();\n        setUser(null);\n        setMasterKeyState(null);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    };\n    const setMasterKey = key => {\n      setMasterKeyState(key);\n    };\n    const setBiometricRecovery = async enabled => {\n      try {\n        if (enabled && masterKey) {\n          await _storage.SecureStorageService.storeBiometricKey(masterKey);\n        }\n        await _storage.SecureStorageService.setBiometricEnabled(enabled);\n        if (user) {\n          setUser({\n            ...user,\n            biometric_enabled: enabled\n          });\n        }\n      } catch (error) {\n        console.error('Biometric setup error:', error);\n        throw error;\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isFirstTime,\n      masterKey,\n      login,\n      register,\n      logout,\n      setMasterKey,\n      setBiometricRecovery\n    };\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 10\n    }, this);\n  };\n  exports.AuthProvider = AuthProvider;\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  exports.useAuth = useAuth;\n});","lineCount":214,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"_interopRequireWildcard"],[6,38,1,0],[6,39,1,0,"require"],[6,46,1,0],[6,47,1,0,"_dependencyMap"],[6,61,1,0],[7,2,2,0],[7,6,2,0,"_storage"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,3,0],[8,6,3,0,"_encryption"],[8,17,3,0],[8,20,3,0,"require"],[8,27,3,0],[8,28,3,0,"_dependencyMap"],[8,42,3,0],[9,2,3,56],[9,6,3,56,"_jsxDevRuntime"],[9,20,3,56],[9,23,3,56,"require"],[9,30,3,56],[9,31,3,56,"_dependencyMap"],[9,45,3,56],[10,2,3,56],[10,6,3,56,"_jsxFileName"],[10,18,3,56],[11,2,3,56],[11,11,3,56,"_interopRequireWildcard"],[11,35,3,56,"e"],[11,36,3,56],[11,38,3,56,"t"],[11,39,3,56],[11,68,3,56,"WeakMap"],[11,75,3,56],[11,81,3,56,"r"],[11,82,3,56],[11,89,3,56,"WeakMap"],[11,96,3,56],[11,100,3,56,"n"],[11,101,3,56],[11,108,3,56,"WeakMap"],[11,115,3,56],[11,127,3,56,"_interopRequireWildcard"],[11,150,3,56],[11,162,3,56,"_interopRequireWildcard"],[11,163,3,56,"e"],[11,164,3,56],[11,166,3,56,"t"],[11,167,3,56],[11,176,3,56,"t"],[11,177,3,56],[11,181,3,56,"e"],[11,182,3,56],[11,186,3,56,"e"],[11,187,3,56],[11,188,3,56,"__esModule"],[11,198,3,56],[11,207,3,56,"e"],[11,208,3,56],[11,214,3,56,"o"],[11,215,3,56],[11,217,3,56,"i"],[11,218,3,56],[11,220,3,56,"f"],[11,221,3,56],[11,226,3,56,"__proto__"],[11,235,3,56],[11,243,3,56,"default"],[11,250,3,56],[11,252,3,56,"e"],[11,253,3,56],[11,270,3,56,"e"],[11,271,3,56],[11,294,3,56,"e"],[11,295,3,56],[11,320,3,56,"e"],[11,321,3,56],[11,330,3,56,"f"],[11,331,3,56],[11,337,3,56,"o"],[11,338,3,56],[11,341,3,56,"t"],[11,342,3,56],[11,345,3,56,"n"],[11,346,3,56],[11,349,3,56,"r"],[11,350,3,56],[11,358,3,56,"o"],[11,359,3,56],[11,360,3,56,"has"],[11,363,3,56],[11,364,3,56,"e"],[11,365,3,56],[11,375,3,56,"o"],[11,376,3,56],[11,377,3,56,"get"],[11,380,3,56],[11,381,3,56,"e"],[11,382,3,56],[11,385,3,56,"o"],[11,386,3,56],[11,387,3,56,"set"],[11,390,3,56],[11,391,3,56,"e"],[11,392,3,56],[11,394,3,56,"f"],[11,395,3,56],[11,411,3,56,"t"],[11,412,3,56],[11,416,3,56,"e"],[11,417,3,56],[11,433,3,56,"t"],[11,434,3,56],[11,441,3,56,"hasOwnProperty"],[11,455,3,56],[11,456,3,56,"call"],[11,460,3,56],[11,461,3,56,"e"],[11,462,3,56],[11,464,3,56,"t"],[11,465,3,56],[11,472,3,56,"i"],[11,473,3,56],[11,477,3,56,"o"],[11,478,3,56],[11,481,3,56,"Object"],[11,487,3,56],[11,488,3,56,"defineProperty"],[11,502,3,56],[11,507,3,56,"Object"],[11,513,3,56],[11,514,3,56,"getOwnPropertyDescriptor"],[11,538,3,56],[11,539,3,56,"e"],[11,540,3,56],[11,542,3,56,"t"],[11,543,3,56],[11,550,3,56,"i"],[11,551,3,56],[11,552,3,56,"get"],[11,555,3,56],[11,559,3,56,"i"],[11,560,3,56],[11,561,3,56,"set"],[11,564,3,56],[11,568,3,56,"o"],[11,569,3,56],[11,570,3,56,"f"],[11,571,3,56],[11,573,3,56,"t"],[11,574,3,56],[11,576,3,56,"i"],[11,577,3,56],[11,581,3,56,"f"],[11,582,3,56],[11,583,3,56,"t"],[11,584,3,56],[11,588,3,56,"e"],[11,589,3,56],[11,590,3,56,"t"],[11,591,3,56],[11,602,3,56,"f"],[11,603,3,56],[11,608,3,56,"e"],[11,609,3,56],[11,611,3,56,"t"],[11,612,3,56],[12,2,26,0],[12,8,26,6,"AuthContext"],[12,19,26,17],[12,35,26,20],[12,39,26,20,"createContext"],[12,59,26,33],[12,61,26,63,"undefined"],[12,70,26,72],[12,71,26,73],[13,2,32,0],[13,8,32,6,"API_BASE_URL"],[13,20,32,18],[13,23,32,21,"process"],[13,30,32,28],[13,31,32,29,"env"],[13,34,32,32],[13,35,32,33,"EXPO_PUBLIC_BACKEND_URL"],[13,58,32,56],[13,62,32,60],[13,64,32,62],[14,2,34,7],[14,8,34,13,"AuthProvider"],[14,20,34,54],[14,23,34,57,"AuthProvider"],[14,24,34,58],[15,4,34,60,"children"],[16,2,34,69],[16,3,34,70],[16,8,34,75],[17,4,35,2],[17,10,35,8],[17,11,35,9,"user"],[17,15,35,13],[17,17,35,15,"setUser"],[17,24,35,22],[17,25,35,23],[17,28,35,26],[17,32,35,26,"useState"],[17,47,35,34],[17,49,35,48],[17,53,35,52],[17,54,35,53],[18,4,36,2],[18,10,36,8],[18,11,36,9,"isLoading"],[18,20,36,18],[18,22,36,20,"setIsLoading"],[18,34,36,32],[18,35,36,33],[18,38,36,36],[18,42,36,36,"useState"],[18,57,36,44],[18,59,36,45],[18,63,36,49],[18,64,36,50],[19,4,37,2],[19,10,37,8],[19,11,37,9,"isFirstTime"],[19,22,37,20],[19,24,37,22,"setIsFirstTime"],[19,38,37,36],[19,39,37,37],[19,42,37,40],[19,46,37,40,"useState"],[19,61,37,48],[19,63,37,49],[19,68,37,54],[19,69,37,55],[20,4,38,2],[20,10,38,8],[20,11,38,9,"masterKey"],[20,20,38,18],[20,22,38,20,"setMasterKeyState"],[20,39,38,37],[20,40,38,38],[20,43,38,41],[20,47,38,41,"useState"],[20,62,38,49],[20,64,38,65],[20,68,38,69],[20,69,38,70],[21,4,40,2],[21,8,40,2,"useEffect"],[21,24,40,11],[21,26,40,12],[21,32,40,18],[22,6,41,4,"initializeAuth"],[22,20,41,18],[22,21,41,19],[22,22,41,20],[23,4,42,2],[23,5,42,3],[23,7,42,5],[23,9,42,7],[23,10,42,8],[24,4,44,2],[24,10,44,8,"initializeAuth"],[24,24,44,22],[24,27,44,25],[24,33,44,25,"initializeAuth"],[24,34,44,25],[24,39,44,37],[25,6,45,4],[25,10,45,8],[26,8,46,6],[27,8,47,6],[27,14,47,12,"userData"],[27,22,47,20],[27,25,47,23],[27,31,47,29,"SecureStorageService"],[27,60,47,49],[27,61,47,50,"getUserData"],[27,72,47,61],[27,73,47,62],[27,74,47,63],[28,8,48,6],[28,14,48,12,"token"],[28,19,48,17],[28,22,48,20],[28,28,48,26,"SecureStorageService"],[28,57,48,46],[28,58,48,47,"getAccessToken"],[28,72,48,61],[28,73,48,62],[28,74,48,63],[29,8,50,6],[29,12,50,10],[29,13,50,11,"userData"],[29,21,50,19],[29,23,50,21],[30,10,51,8,"setIsFirstTime"],[30,24,51,22],[30,25,51,23],[30,29,51,27],[30,30,51,28],[31,10,52,8,"setIsLoading"],[31,22,52,20],[31,23,52,21],[31,28,52,26],[31,29,52,27],[32,10,53,8],[33,8,54,6],[34,8,56,6],[34,12,56,10,"token"],[34,17,56,15],[34,21,56,19,"userData"],[34,29,56,27],[34,31,56,29],[35,10,57,8],[36,10,58,8],[36,16,58,14,"response"],[36,24,58,22],[36,27,58,25],[36,33,58,31,"fetch"],[36,38,58,36],[36,39,58,37],[36,42,58,40,"API_BASE_URL"],[36,54,58,52],[36,73,58,71],[36,75,58,73],[37,12,59,10,"headers"],[37,19,59,17],[37,21,59,19],[38,14,60,12],[38,29,60,27],[38,31,60,29],[38,41,60,39,"token"],[38,46,60,44],[38,48,60,46],[39,14,61,12],[39,28,61,26],[39,30,61,28],[40,12,62,10],[41,10,63,8],[41,11,63,9],[41,12,63,10],[42,10,65,8],[42,14,65,12,"response"],[42,22,65,20],[42,23,65,21,"ok"],[42,25,65,23],[42,27,65,25],[43,12,66,10],[43,18,66,16,"userProfile"],[43,29,66,27],[43,32,66,30],[43,38,66,36,"response"],[43,46,66,44],[43,47,66,45,"json"],[43,51,66,49],[43,52,66,50],[43,53,66,51],[44,12,67,10,"setUser"],[44,19,67,17],[44,20,67,18,"userProfile"],[44,31,67,29],[44,32,67,30],[46,12,69,10],[47,12,70,10],[47,18,70,16,"storedKey"],[47,27,70,25],[47,30,70,28],[47,36,70,34,"SecureStorageService"],[47,65,70,54],[47,66,70,55,"getMasterKey"],[47,78,70,67],[47,79,70,68],[47,80,70,69],[48,12,71,10],[48,16,71,14,"storedKey"],[48,25,71,23],[48,27,71,25],[49,14,72,12,"setMasterKeyState"],[49,31,72,29],[49,32,72,30,"storedKey"],[49,41,72,39],[49,42,72,40],[50,12,73,10],[51,10,74,8],[51,11,74,9],[51,17,74,15],[52,12,75,10],[53,12,76,10],[53,18,76,16,"SecureStorageService"],[53,47,76,36],[53,48,76,37,"clearAllData"],[53,60,76,49],[53,61,76,50],[53,62,76,51],[54,10,77,8],[55,8,78,6],[56,6,79,4],[56,7,79,5],[56,8,79,6],[56,15,79,13,"error"],[56,20,79,18],[56,22,79,20],[57,8,80,6,"console"],[57,15,80,13],[57,16,80,14,"error"],[57,21,80,19],[57,22,80,20],[57,50,80,48],[57,52,80,50,"error"],[57,57,80,55],[57,58,80,56],[58,6,81,4],[58,7,81,5],[58,16,81,14],[59,8,82,6,"setIsLoading"],[59,20,82,18],[59,21,82,19],[59,26,82,24],[59,27,82,25],[60,6,83,4],[61,4,84,2],[61,5,84,3],[62,4,86,2],[62,10,86,8,"register"],[62,18,86,16],[62,21,86,19],[62,27,86,19,"register"],[62,28,87,4,"email"],[62,33,87,17],[62,35,88,4,"password"],[62,43,88,20],[62,45,89,4,"biometricEnabled"],[62,61,89,29],[62,66,90,22],[63,6,91,4],[63,10,91,8],[64,8,92,6,"setIsLoading"],[64,20,92,18],[64,21,92,19],[64,25,92,23],[64,26,92,24],[66,8,94,6],[67,8,95,6],[67,14,95,12,"salt"],[67,18,95,16],[67,21,95,19,"EncryptionService"],[67,50,95,36],[67,51,95,37,"generateSalt"],[67,63,95,49],[67,64,95,50],[67,65,95,51],[69,8,97,6],[70,8,98,6],[70,14,98,12,"masterPasswordHash"],[70,32,98,30],[70,35,98,33],[70,41,98,39,"EncryptionService"],[70,70,98,56],[70,71,98,57,"hashMasterPassword"],[70,89,98,75],[70,90,98,76,"password"],[70,98,98,84],[70,100,98,86,"salt"],[70,104,98,90],[70,105,98,91],[72,8,100,6],[73,8,101,6],[73,14,101,12,"encryptionKey"],[73,27,101,25],[73,30,101,28],[73,36,101,34,"EncryptionService"],[73,65,101,51],[73,66,101,52,"deriveKey"],[73,75,101,61],[73,76,101,62,"password"],[73,84,101,70],[73,86,101,72,"salt"],[73,90,101,76],[73,91,101,77],[74,8,103,6],[74,14,103,12,"response"],[74,22,103,20],[74,25,103,23],[74,31,103,29,"fetch"],[74,36,103,34],[74,37,103,35],[74,40,103,38,"API_BASE_URL"],[74,52,103,50],[74,72,103,70],[74,74,103,72],[75,10,104,8,"method"],[75,16,104,14],[75,18,104,16],[75,24,104,22],[76,10,105,8,"headers"],[76,17,105,15],[76,19,105,17],[77,12,106,10],[77,26,106,24],[77,28,106,26],[78,10,107,8],[78,11,107,9],[79,10,108,8,"body"],[79,14,108,12],[79,16,108,14,"JSON"],[79,20,108,18],[79,21,108,19,"stringify"],[79,30,108,28],[79,31,108,29],[80,12,109,10,"email"],[80,17,109,15],[81,12,110,10,"master_password_hash"],[81,32,110,30],[81,34,110,32,"masterPasswordHash"],[81,52,110,50],[82,12,111,10,"biometric_enabled"],[82,29,111,27],[82,31,111,29,"biometricEnabled"],[83,10,112,8],[83,11,112,9],[84,8,113,6],[84,9,113,7],[84,10,113,8],[85,8,115,6],[85,12,115,10],[85,13,115,11,"response"],[85,21,115,19],[85,22,115,20,"ok"],[85,24,115,22],[85,26,115,24],[86,10,116,8],[86,16,116,14,"error"],[86,21,116,19],[86,24,116,22],[86,30,116,28,"response"],[86,38,116,36],[86,39,116,37,"json"],[86,43,116,41],[86,44,116,42],[86,45,116,43],[87,10,117,8],[87,16,117,14],[87,20,117,18,"Error"],[87,25,117,23],[87,26,117,24,"error"],[87,31,117,29],[87,32,117,30,"detail"],[87,38,117,36],[87,42,117,40],[87,63,117,61],[87,64,117,62],[88,8,118,6],[89,8,120,6],[89,14,120,12,"data"],[89,18,120,16],[89,21,120,19],[89,27,120,25,"response"],[89,35,120,33],[89,36,120,34,"json"],[89,40,120,38],[89,41,120,39],[89,42,120,40],[91,8,122,6],[92,8,123,6],[92,14,123,12,"SecureStorageService"],[92,43,123,32],[92,44,123,33,"storeAccessToken"],[92,60,123,49],[92,61,123,50,"data"],[92,65,123,54],[92,66,123,55,"access_token"],[92,78,123,67],[92,79,123,68],[93,8,124,6],[93,14,124,12,"SecureStorageService"],[93,43,124,32],[93,44,124,33,"storeUserData"],[93,57,124,46],[93,58,124,47,"data"],[93,62,124,51],[93,63,124,52,"user"],[93,67,124,56],[93,68,124,57],[94,8,125,6],[94,14,125,12,"SecureStorageService"],[94,43,125,32],[94,44,125,33,"storeUserSalt"],[94,57,125,46],[94,58,125,47,"salt"],[94,62,125,51],[94,63,125,52],[95,8,126,6],[95,14,126,12,"SecureStorageService"],[95,43,126,32],[95,44,126,33,"storeMasterKey"],[95,58,126,47],[95,59,126,48,"encryptionKey"],[95,72,126,61],[95,73,126,62],[96,8,127,6],[96,14,127,12,"SecureStorageService"],[96,43,127,32],[96,44,127,33,"setBiometricEnabled"],[96,63,127,52],[96,64,127,53,"biometricEnabled"],[96,80,127,69],[96,81,127,70],[98,8,129,6],[99,8,130,6],[99,12,130,10,"biometricEnabled"],[99,28,130,26],[99,30,130,28],[100,10,131,8],[100,16,131,14,"SecureStorageService"],[100,45,131,34],[100,46,131,35,"storeBiometricKey"],[100,63,131,52],[100,64,131,53,"encryptionKey"],[100,77,131,66],[100,78,131,67],[101,8,132,6],[102,8,134,6,"setUser"],[102,15,134,13],[102,16,134,14,"data"],[102,20,134,18],[102,21,134,19,"user"],[102,25,134,23],[102,26,134,24],[103,8,135,6,"setMasterKeyState"],[103,25,135,23],[103,26,135,24,"encryptionKey"],[103,39,135,37],[103,40,135,38],[104,8,136,6,"setIsFirstTime"],[104,22,136,20],[104,23,136,21],[104,28,136,26],[104,29,136,27],[105,6,137,4],[105,7,137,5],[105,8,137,6],[105,15,137,13,"error"],[105,20,137,18],[105,22,137,20],[106,8,138,6,"console"],[106,15,138,13],[106,16,138,14,"error"],[106,21,138,19],[106,22,138,20],[106,43,138,41],[106,45,138,43,"error"],[106,50,138,48],[106,51,138,49],[107,8,139,6],[107,14,139,12,"error"],[107,19,139,17],[108,6,140,4],[108,7,140,5],[108,16,140,14],[109,8,141,6,"setIsLoading"],[109,20,141,18],[109,21,141,19],[109,26,141,24],[109,27,141,25],[110,6,142,4],[111,4,143,2],[111,5,143,3],[112,4,145,2],[112,10,145,8,"login"],[112,15,145,13],[112,18,145,16],[112,24,145,16,"login"],[112,25,145,23,"email"],[112,30,145,36],[112,32,145,38,"password"],[112,40,145,54],[112,45,145,74],[113,6,146,4],[113,10,146,8],[114,8,147,6,"setIsLoading"],[114,20,147,18],[114,21,147,19],[114,25,147,23],[114,26,147,24],[116,8,149,6],[117,8,150,6],[117,14,150,12,"salt"],[117,18,150,16],[117,21,150,19],[117,27,150,25,"SecureStorageService"],[117,56,150,45],[117,57,150,46,"getUserSalt"],[117,68,150,57],[117,69,150,58],[117,70,150,59],[118,8,151,6],[118,12,151,10],[118,13,151,11,"salt"],[118,17,151,15],[118,19,151,17],[119,10,152,8],[119,16,152,14],[119,20,152,18,"Error"],[119,25,152,23],[119,26,152,24],[119,71,152,69],[119,72,152,70],[120,8,153,6],[122,8,155,6],[123,8,156,6],[123,14,156,12,"masterPasswordHash"],[123,32,156,30],[123,35,156,33],[123,41,156,39,"EncryptionService"],[123,70,156,56],[123,71,156,57,"hashMasterPassword"],[123,89,156,75],[123,90,156,76,"password"],[123,98,156,84],[123,100,156,86,"salt"],[123,104,156,90],[123,105,156,91],[125,8,158,6],[126,8,159,6],[126,14,159,12,"encryptionKey"],[126,27,159,25],[126,30,159,28],[126,36,159,34,"EncryptionService"],[126,65,159,51],[126,66,159,52,"deriveKey"],[126,75,159,61],[126,76,159,62,"password"],[126,84,159,70],[126,86,159,72,"salt"],[126,90,159,76],[126,91,159,77],[127,8,161,6],[127,14,161,12,"response"],[127,22,161,20],[127,25,161,23],[127,31,161,29,"fetch"],[127,36,161,34],[127,37,161,35],[127,40,161,38,"API_BASE_URL"],[127,52,161,50],[127,69,161,67],[127,71,161,69],[128,10,162,8,"method"],[128,16,162,14],[128,18,162,16],[128,24,162,22],[129,10,163,8,"headers"],[129,17,163,15],[129,19,163,17],[130,12,164,10],[130,26,164,24],[130,28,164,26],[131,10,165,8],[131,11,165,9],[132,10,166,8,"body"],[132,14,166,12],[132,16,166,14,"JSON"],[132,20,166,18],[132,21,166,19,"stringify"],[132,30,166,28],[132,31,166,29],[133,12,167,10,"email"],[133,17,167,15],[134,12,168,10,"master_password_hash"],[134,32,168,30],[134,34,168,32,"masterPasswordHash"],[135,10,169,8],[135,11,169,9],[136,8,170,6],[136,9,170,7],[136,10,170,8],[137,8,172,6],[137,12,172,10],[137,13,172,11,"response"],[137,21,172,19],[137,22,172,20,"ok"],[137,24,172,22],[137,26,172,24],[138,10,173,8],[138,16,173,14,"error"],[138,21,173,19],[138,24,173,22],[138,30,173,28,"response"],[138,38,173,36],[138,39,173,37,"json"],[138,43,173,41],[138,44,173,42],[138,45,173,43],[139,10,174,8],[139,16,174,14],[139,20,174,18,"Error"],[139,25,174,23],[139,26,174,24,"error"],[139,31,174,29],[139,32,174,30,"detail"],[139,38,174,36],[139,42,174,40],[139,56,174,54],[139,57,174,55],[140,8,175,6],[141,8,177,6],[141,14,177,12,"data"],[141,18,177,16],[141,21,177,19],[141,27,177,25,"response"],[141,35,177,33],[141,36,177,34,"json"],[141,40,177,38],[141,41,177,39],[141,42,177,40],[143,8,179,6],[144,8,180,6],[144,14,180,12,"SecureStorageService"],[144,43,180,32],[144,44,180,33,"storeAccessToken"],[144,60,180,49],[144,61,180,50,"data"],[144,65,180,54],[144,66,180,55,"access_token"],[144,78,180,67],[144,79,180,68],[145,8,181,6],[145,14,181,12,"SecureStorageService"],[145,43,181,32],[145,44,181,33,"storeUserData"],[145,57,181,46],[145,58,181,47,"data"],[145,62,181,51],[145,63,181,52,"user"],[145,67,181,56],[145,68,181,57],[146,8,182,6],[146,14,182,12,"SecureStorageService"],[146,43,182,32],[146,44,182,33,"storeMasterKey"],[146,58,182,47],[146,59,182,48,"encryptionKey"],[146,72,182,61],[146,73,182,62],[147,8,184,6,"setUser"],[147,15,184,13],[147,16,184,14,"data"],[147,20,184,18],[147,21,184,19,"user"],[147,25,184,23],[147,26,184,24],[148,8,185,6,"setMasterKeyState"],[148,25,185,23],[148,26,185,24,"encryptionKey"],[148,39,185,37],[148,40,185,38],[149,6,186,4],[149,7,186,5],[149,8,186,6],[149,15,186,13,"error"],[149,20,186,18],[149,22,186,20],[150,8,187,6,"console"],[150,15,187,13],[150,16,187,14,"error"],[150,21,187,19],[150,22,187,20],[150,36,187,34],[150,38,187,36,"error"],[150,43,187,41],[150,44,187,42],[151,8,188,6],[151,14,188,12,"error"],[151,19,188,17],[152,6,189,4],[152,7,189,5],[152,16,189,14],[153,8,190,6,"setIsLoading"],[153,20,190,18],[153,21,190,19],[153,26,190,24],[153,27,190,25],[154,6,191,4],[155,4,192,2],[155,5,192,3],[156,4,194,2],[156,10,194,8,"logout"],[156,16,194,14],[156,19,194,17],[156,25,194,17,"logout"],[156,26,194,17],[156,31,194,44],[157,6,195,4],[157,10,195,8],[158,8,196,6],[158,14,196,12,"SecureStorageService"],[158,43,196,32],[158,44,196,33,"clearAllData"],[158,56,196,45],[158,57,196,46],[158,58,196,47],[159,8,197,6,"setUser"],[159,15,197,13],[159,16,197,14],[159,20,197,18],[159,21,197,19],[160,8,198,6,"setMasterKeyState"],[160,25,198,23],[160,26,198,24],[160,30,198,28],[160,31,198,29],[161,6,199,4],[161,7,199,5],[161,8,199,6],[161,15,199,13,"error"],[161,20,199,18],[161,22,199,20],[162,8,200,6,"console"],[162,15,200,13],[162,16,200,14,"error"],[162,21,200,19],[162,22,200,20],[162,37,200,35],[162,39,200,37,"error"],[162,44,200,42],[162,45,200,43],[163,6,201,4],[164,4,202,2],[164,5,202,3],[165,4,204,2],[165,10,204,8,"setMasterKey"],[165,22,204,20],[165,25,204,24,"key"],[165,28,204,35],[165,32,204,40],[166,6,205,4,"setMasterKeyState"],[166,23,205,21],[166,24,205,22,"key"],[166,27,205,25],[166,28,205,26],[167,4,206,2],[167,5,206,3],[168,4,208,2],[168,10,208,8,"setBiometricRecovery"],[168,30,208,28],[168,33,208,31],[168,39,208,38,"enabled"],[168,46,208,54],[168,50,208,74],[169,6,209,4],[169,10,209,8],[170,8,210,6],[170,12,210,10,"enabled"],[170,19,210,17],[170,23,210,21,"masterKey"],[170,32,210,30],[170,34,210,32],[171,10,211,8],[171,16,211,14,"SecureStorageService"],[171,45,211,34],[171,46,211,35,"storeBiometricKey"],[171,63,211,52],[171,64,211,53,"masterKey"],[171,73,211,62],[171,74,211,63],[172,8,212,6],[173,8,213,6],[173,14,213,12,"SecureStorageService"],[173,43,213,32],[173,44,213,33,"setBiometricEnabled"],[173,63,213,52],[173,64,213,53,"enabled"],[173,71,213,60],[173,72,213,61],[174,8,215,6],[174,12,215,10,"user"],[174,16,215,14],[174,18,215,16],[175,10,216,8,"setUser"],[175,17,216,15],[175,18,216,16],[176,12,216,18],[176,15,216,21,"user"],[176,19,216,25],[177,12,216,27,"biometric_enabled"],[177,29,216,44],[177,31,216,46,"enabled"],[178,10,216,54],[178,11,216,55],[178,12,216,56],[179,8,217,6],[180,6,218,4],[180,7,218,5],[180,8,218,6],[180,15,218,13,"error"],[180,20,218,18],[180,22,218,20],[181,8,219,6,"console"],[181,15,219,13],[181,16,219,14,"error"],[181,21,219,19],[181,22,219,20],[181,46,219,44],[181,48,219,46,"error"],[181,53,219,51],[181,54,219,52],[182,8,220,6],[182,14,220,12,"error"],[182,19,220,17],[183,6,221,4],[184,4,222,2],[184,5,222,3],[185,4,224,2],[185,10,224,8,"value"],[185,15,224,30],[185,18,224,33],[186,6,225,4,"user"],[186,10,225,8],[187,6,226,4,"isLoading"],[187,15,226,13],[188,6,227,4,"isFirstTime"],[188,17,227,15],[189,6,228,4,"masterKey"],[189,15,228,13],[190,6,229,4,"login"],[190,11,229,9],[191,6,230,4,"register"],[191,14,230,12],[192,6,231,4,"logout"],[192,12,231,10],[193,6,232,4,"setMasterKey"],[193,18,232,16],[194,6,233,4,"setBiometricRecovery"],[195,4,234,2],[195,5,234,3],[196,4,236,2],[196,24,236,9],[196,28,236,9,"_jsxDevRuntime"],[196,42,236,9],[196,43,236,9,"jsxDEV"],[196,49,236,9],[196,51,236,10,"AuthContext"],[196,62,236,21],[196,63,236,22,"Provider"],[196,71,236,30],[197,6,236,31,"value"],[197,11,236,36],[197,13,236,38,"value"],[197,18,236,44],[198,6,236,44,"children"],[198,14,236,44],[198,16,236,46,"children"],[199,4,236,54],[200,6,236,54,"fileName"],[200,14,236,54],[200,16,236,54,"_jsxFileName"],[200,28,236,54],[201,6,236,54,"lineNumber"],[201,16,236,54],[202,6,236,54,"columnNumber"],[202,18,236,54],[203,4,236,54],[203,11,236,77],[203,12,236,78],[204,2,237,0],[204,3,237,1],[205,2,237,2,"exports"],[205,9,237,2],[205,10,237,2,"AuthProvider"],[205,22,237,2],[205,25,237,2,"AuthProvider"],[205,37,237,2],[206,2,239,7],[206,8,239,13,"useAuth"],[206,15,239,20],[206,18,239,23,"useAuth"],[206,19,239,23],[206,24,239,46],[207,4,240,2],[207,10,240,8,"context"],[207,17,240,15],[207,20,240,18],[207,24,240,18,"useContext"],[207,41,240,28],[207,43,240,29,"AuthContext"],[207,54,240,40],[207,55,240,41],[208,4,241,2],[208,8,241,6,"context"],[208,15,241,13],[208,20,241,18,"undefined"],[208,29,241,27],[208,31,241,29],[209,6,242,4],[209,12,242,10],[209,16,242,14,"Error"],[209,21,242,19],[209,22,242,20],[209,67,242,65],[209,68,242,66],[210,4,243,2],[211,4,244,2],[211,11,244,9,"context"],[211,18,244,16],[212,2,245,0],[212,3,245,1],[213,2,245,2,"exports"],[213,9,245,2],[213,10,245,2,"useAuth"],[213,17,245,2],[213,20,245,2,"useAuth"],[213,27,245,2],[214,0,245,2],[214,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","initializeAuth","register","login","logout","setMasterKey","setBiometricRecovery","useAuth"],"mappings":"AAA;yDCiC;YCM;GDE;yBEE;GFwC;mBGE;GHyD;gBIE;GJ+C;iBKE;GLQ;uBME;GNE;+BOE;GPc;CDe;uBSE;CTM"}},"type":"js/module"}]}